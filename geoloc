#!/usr/bin/python2
#coding=utf-8
#Dev: Faxel

import requests,bs4,sys,os

class ip_geolocalisation(object):
	def __init__(self,ip):
		self.ip=ip
		self.data=[]
		self.compteur=0
		self.realdata=[]
		self.response=[]
		self.fakenumero=0
		self.jabot()
	
	# <-- CHARGER LA RÉPONSE BS4 -->
	def jabot(self):
		self.beau = bs4.BeautifulSoup(
			requests.get("https://ipgeolocation.io/ip-location/"+self.ip,
		headers={
			"User-Agent":"Mozilla/5.0 (Linux; Android 5.1)"}).text,"html.parser")
		print("-"*20+self.ip+"-"*20+"\n")
		self._boucle_de_donnes()
	
	# <-- CHARGER LES DONNÉES -->
	def _boucle_de_donnes(self):
		for i in self.beau.find_all("td"):
			self.data.append(i.text)
		self.boucle_de_vrai_donnes()
	
	# <-- FILTRER LES DONNÉES -->
	def boucle_de_vrai_donnes(self):
		for i in self.data:
			self.compteur+=1
			if self.compteur>18:
				if i =="":
					continue
				self.realdata.append(i.replace("\n",""))
		self._resultat()
	
	# <-- RÉSULTAT OBTENU -->
	def _resultat(self):
		for i in self.realdata:
			self.fakenumero+=1
			self.response.append(i)
			if len(self.response) ==2:
				self._resultat_de_carte(self.response)
				self.response=[]
				
	# <-- RÉSULTAT DE LA CARTE -->
	def _resultat_de_carte(self,_data):
		donnee=list(_data[0])
		for i in range(30):
			if len(donnee) ==30:
				print("".join(donnee)+": "+_data[1])
				break
			else:
        donnee.append("")
if __name__ =="__main__":
	if len(sys.argv) ==1:
        print("Usage: python "+sys.argv[0]+" <ip>")
	elif len(sys.argv) ==2:
        ip_geolocalisation(sys.argv[1])
	else:
        print("Usage: python "+sys.argv[0]+" <ip>")
